                           SIAL LAMBDA_MO    
#
# Working version of UHF based lambda code which computes the VVVV 
# integrals on the fly. No VVVV OR VVVO intermediates are stored. 
# The W1MEBJ intermediates are also not stored rather computed on the 
# fly ==> only W2MEBJ, W1IEMN, and W1MINJ are stored. 
# Many changes have been made to improve scalability. 
#
# BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
#
# Declare indeces 
# --------------- 
#
      index kiter    = 1, 100 
#
      aoindex mu     = 1, norb
      aoindex nu     = 1, norb
      aoindex lambda = 1, norb
      aoindex sigma  = 1, norb
#
      moaindex i = baocc, eaocc
      moaindex i1= baocc, eaocc
      moaindex i2= baocc, eaocc
      moaindex i3= baocc, eaocc
#
      moaindex a = bavirt, eavirt
      moaindex a1= bavirt, eavirt
      moaindex a2= bavirt, eavirt
      moaindex a3= bavirt, eavirt
#
      mobindex j = bbocc, ebocc
      mobindex j1= bbocc, ebocc
      mobindex j2= bbocc, ebocc
      mobindex j3= bbocc, ebocc
#
      mobindex b = bbvirt, ebvirt
      mobindex b1= bbvirt, ebvirt
      mobindex b2= bbvirt, ebvirt
      mobindex b3= bbvirt, ebvirt
#
      moaindex p = baocc, eavirt
      moaindex p1= baocc, eavirt
      moaindex p2= baocc, eavirt
      moaindex p3= baocc, eavirt
#
      mobindex q = bbocc, ebvirt
      mobindex q1= bbocc, ebvirt
      mobindex q2= bbocc, ebvirt
      mobindex q3= bbocc, ebvirt
# 
# Declare static arrays 
# --------------------- 
#
      distributed t1a_old(a,i) 
      distributed t1a_new(a,i) 
      distributed t1b_old(b,j) 
      distributed t1b_new(b,j) 
#
      distributed Fae_a(a,a1) 
      distributed Fae_b(b,b1) 
      distributed Fme_a(i,a) 
      distributed Fme_b(j,b) 
      distributed Fmi_a(i,i1) 
      distributed Fmi_b(j,j1) 
#
      distributed Gae_a(a,a1) 
      distributed Gae_b(b,b1) 
      distributed Gmi_a(i,i1) 
      distributed Gmi_b(j,j1) 
#
# Arrays used in AAAA transformation
# ----------------------------------
      temp Txxxa(mu,nu,lambda,a)
      temp Txxaa(mu,nu,a1,a)
      temp Txaaa(mu,a2,a1,a)
      temp T1xaaa(mu,a2,a1,a)
      temp Taaaa(a,a1,a2,a3)
      distributed Vxxxa(mu,nu,lambda,a)
      distributed Vxxaa(mu,nu,a1,a)
      distributed Vxaaa(mu,a2,a1,a)
      distributed VSaaaa(a,a1,a2,a3)
# ----------------------------------
#
# Arrays used in BBBB transformation
# ----------------------------------
      temp Txxxb(mu,nu,lambda,b)
      temp Txxbb(mu,nu,b1,b)
      temp Txbbb(mu,b2,b1,b)
      temp T1xbbb(mu,b2,b1,b)
      temp Tbbbb(b,b1,b2,b3)
      distributed Vxxxb(mu,nu,lambda,b)
      distributed Vxxbb(mu,nu,b1,b)
      distributed Vxbbb(mu,b2,b1,b)
      distributed VSbbbb(b,b1,b2,b3)
# ----------------------------------
#
# Arrays used in AABB transformation
# ----------------------------------
      temp Txabb(mu,a,b1,b)
      temp Taabb(a1,a,b2,b3)
      distributed Vxabb(mu,a,b1,b)
      distributed Vaabb(a,a1,b2,b3)
# ----------------------------------
#
# Arrays used in transformation for AO2 algorithm
# -----------------------------------------------
#
      temp Txixi(mu,i1,lambda,i)
      temp Txxii(mu,nu,i1,i)
      temp Tixxi(i1,nu,lambda,i)
      temp Txipi(mu,i,p,i1)
      temp Tpipi(p1,i,p,i1)
      temp T1pipi(p1,i,p,i1)
      temp Tixai(i,mu,a,i1)
      temp Txaii(mu,a,i,i1)
      temp Tiaai(i,a1,a,i1)
      temp Taaii(a,a1,i,i1)
      temp Txaai(mu,a1,a,i)
      temp Taaai(a2,a,a1,i)
      temp Txxai(mu,nu,a,i)
#
      distributed Vxixi(mu,i1,lambda,i)
      distributed Vxxii(mu,nu,i1,i)
      distributed Viixx(i1,i,mu,nu)
      distributed Vixxi(i1,nu,lambda,i)
      distributed Vxipi(mu,i,p,i1)
      distributed VSpipi(p1,i,p,i1)
      distributed Vixai(i,mu,a,i1)
      distributed Vxaii(mu,a,i,i1)
      distributed Viaai(i,a1,a,i1)
      distributed Vaaii(a,a1,i,i1)
      distributed Vxaai(mu,a1,a,i)
      distributed VSaaai(a2,a,a1,i)
      distributed Vxxai(mu,nu,a,i)
#
      temp Txjxj(mu,j1,lambda,j)
      temp Txxjj(mu,nu,j1,j)
      temp Tjjxx(j1,nu,lambda,j)
      temp Tjxxj(j1,nu,lambda,j)
      temp Txjqj(mu,j,q,j1)
      temp Tqjqj(q1,j,q,j1)
      temp T1qjqj(q1,j,q,j1)
      temp Tjxbj(j,mu,b,j1)
      temp Txbjj(mu,b,j,j1)
      temp Tjbbj(j,b1,b,j1)
      temp Tbbjj(b,b1,j,j1)
      temp Txbbj(mu,b1,b,j)
      temp Tbbbj(b2,b,b1,j)
      temp Txxbj(mu,nu,b,j)
#
      distributed Vxjxj(mu,j1,lambda,j)
      distributed Vxxjj(mu,nu,j1,j)
      distributed Vjjxx(j1,nu,lambda,j)
      distributed Vjxxj(j1,nu,lambda,j)
      distributed Vxjqj(mu,j,q,j1)
      distributed VSqjqj(q1,j,q,j1)
      distributed Vjxbj(j,mu,b,j1)
      distributed Vxbjj(mu,b,j,j1)
      distributed Vjbbj(j,b1,b,j1)
      distributed Vbbjj(b,b1,j,j1)
      distributed Vxbbj(mu,b1,b,j)
      distributed VSbbbj(b2,b,b1,j)
      distributed Vxxbj(mu,nu,b,j)
#
      temp Txixj(mu,i,nu,j)
      temp Txiqj(mu,i,q,j)
      temp Tpiqj(p,i,q,j)
      temp Tiixx(i,i1,mu,nu)
      temp Tiixb(i,i1,mu,b)
      temp Tiibb(i,i1,b1,b)
      temp Txajj(mu,a,j,j1)
      temp Taajj(a,a1,j,j1)
      temp Txabj(mu,a,b,j)
      temp Tixxj(i,mu,nu,j)
      temp Tixbj(i,mu,b,j)
      temp Tiabj(i,a,b,j)
      temp Taabj(a,a1,b,j)
#
      distributed Vxixj(mu,i,nu,j)
      distributed Vxiqj(mu,i,q,j)
      distributed Vpiqj(p,i,q,j)
      distributed Viixb(i,i1,mu,b)
      distributed Viibb(i,i1,b1,b)
      distributed Vxajj(mu,a,j,j1)
      distributed Vaajj(a,a1,j,j1)
      distributed Vxabj(mu,a,b,j)
      distributed Vixxj(i,mu,nu,j)
      distributed Vixbj(i,mu,b,j)
      distributed Viabj(i,a,b,j)
      distributed Vaabj(a,a1,b,j)
#
      temp Txbii(mu,b,i,i1)
      temp Tbbii(b,b1,i,i1)
      temp Tjbii(j,b,i,i1)
      temp Txbai(mu,b,a,i)
      temp Tbbai(b,b1,a,i)
#
      distributed Vxbii(mu,b,i,i1)
      distributed Vbbii(b,b1,i,i1)
      distributed Vjbii(j,b,i,i1)
      distributed Vxbai(mu,b,a,i)
      distributed Vbbai(b,b1,a,i)
#
# End Arrays used in transformation for AO2 algorithm
# --------------------------------------------------- 
#
# Declare temporary arrays 
# ------------------------ 
#
      temp Txxxi(mu,nu,lambda,i)
      temp Txxxj(mu,nu,lambda,j)
      temp Txiix(mu,i,i1,nu)
      temp Txjjx(mu,j,j1,nu)
      temp Txijx(mu,i,j,nu)
      temp Txpii(mu,p,i,i1)
      temp Txqii(mu,q,i,i1)
      temp Tppii(p,p1,i,i1)
      temp Tqqii(q,q1,i,i1)
      temp Txpjj(mu,p,j,j1)
      temp Txqjj(mu,q,j,j1)
      temp Tppjj(p,p1,j,j1)
      temp Tqqjj(q,q1,j,j1)
      temp Tixpi(i,mu,p,i1)
      temp Tippi(i,p,p1,i1)
      temp Tjxqj(j,mu,q,j1)
      temp Tjqqj(j,q,q1,j1)
      temp Tixqj(i,mu,q,j)
      temp Tipqj(i,p,q,j)
#
      temp Vblock(i,i1,i2,i3)
      temp Taiai(p,i,p1,i1)
      temp T1aiai(p,i,p1,i1)
      temp T2aiai(p,i,p1,i1)
      temp T3aiai(p,i,p1,i1)
#
      temp  Tiaia(i,a,i1,a1)
      temp T1iaia(i,a,i1,a1)
      temp T2iaia(i,a,i1,a1)
      temp T3iaia(i,a,i1,a1)
      temp T4iaia(i,a,i1,a1)
      temp TXiaia(i,a,i1,a1)
      temp  Tjbjb(j,b,j1,b1)
      temp T1jbjb(j,b,j1,b1)
      temp T2jbjb(j,b,j1,b1)
      temp T3jbjb(j,b,j1,b1)
      temp T4jbjb(j,b,j1,b1)
      temp TXjbjb(j,b,j1,b1)
      temp  Tiajb(i,a,j,b)
      temp T1iajb(i,a,j,b)
      temp T2iajb(i,a,j,b)
# 
      temp Tbjbj(q,j,q1,j1)
      temp T1bjbj(q,j,q1,j1)
      temp T2bjbj(q,j,q1,j1)
      temp T3bjbj(q,j,q1,j1)
      temp Taibj(p,i,q,j)
      temp T1aibj(p,i,q,j)
#
      temp Txxxp(mu,nu,lambda,p)
      temp Txxxq(mu,nu,lambda,q)
      temp Txxpp(mu,nu,p1,p)
      temp Txxqq(mu,nu,q1,q)
      temp Txppp(mu,p2,p1,p)
      temp Txqqq(mu,q2,q1,q)
      temp Txpqq(mu,p,q1,q)
      temp Tpppp(p3,p2,p1,p)
      temp T1pppp(p3,p2,p1,p)
      temp T2pppp(p3,p2,p1,p)
      temp TSpppp(p3,p2,p1,p)
      temp Tqqqq(q3,q2,q1,q)
      temp T1qqqq(q3,q2,q1,q)
      temp T2qqqq(q3,q2,q1,q)
      temp TSqqqq(q3,q2,q1,q)
      temp Tppqq(p1,p,q1,q)
      temp T1ppqq(p1,p,q1,q)
      temp Tqqpp(q1,q,p1,p)
      temp T1qqpp(q1,q,p1,p)
      temp Tixxx(i,mu,nu,sigma)
      temp Tipxx(i,p,nu,sigma)
      temp Tipqx(i,p,q,sigma)
      temp Tipqq(i,p,q,q1)
#
      temp tmp1_aiai(a,i,a1,i1) 
      temp tmp2_aiai(a,i,a1,i1) 
      temp tmp1_bjbj(b,j,b1,j1) 
      temp tmp2_bjbj(b,j,b1,j1) 
      temp tmp1_aibj(a,i,b,j) 
#
      temp Tai(a,i) 
      temp T1ai(a,i) 
      temp Tbj(b,j) 
      temp T1bj(b,j) 
#
      temp Taa(a,a1) 
      temp T1aa(a,a1) 
      temp Tbb(b,b1) 
      temp T1bb(b,b1) 
      temp Tae_a(a,a1) 
      temp Tae_b(b,b1) 
#
      temp Tia(i,a) 
      temp T1ia(i,a) 
      temp T2ia(i,a) 
      temp T3ia(i,a) 
      temp T4ia(i,a) 
      temp Tjb(j,b) 
      temp T1jb(j,b) 
      temp T2jb(j,b) 
      temp T3jb(j,b) 
      temp T4jb(j,b) 
      temp Tme_a(i,a) 
      temp Tme_b(j,b) 
#
      temp Tii(i,i1) 
      temp T1ii(i,i1) 
      temp Tjj(j,j1) 
      temp T1jj(j,j1) 
      temp Tmi_a(i,i1) 
      temp Tmi_b(j,j1) 
#
      temp Taiii(a,i,i1,i2) 
      temp T1aiii(a,i,i1,i2) 
#
      temp  Tiiii(i,i1,i2,i3) 
      temp T1iiii(i,i1,i2,i3) 
      temp T2iiii(i,i1,i2,i3) 
      temp TXiiii(i,i1,i2,i3) 
#
      temp  Tjjjj(j,j1,j2,j3) 
      temp T1jjjj(j,j1,j2,j3) 
      temp T2jjjj(j,j1,j2,j3) 
      temp TXjjjj(j,j1,j2,j3) 
      temp  Tbjjj(b,j,j1,j2) 
      temp T1bjjj(b,j,j1,j2) 
#
      temp  Tiijj(i,i1,j2,j3) 
      temp T1iijj(i,i1,j2,j3) 
#
      temp  tmp_aa(a,a1) 
      temp tmp1_aa(a,a1) 
      temp  tmp_ii(i,i1) 
      temp tmp1_ii(i,i1) 
#
      temp  Tiiai(i,i1,a,i2) 
      temp T1iiai(i,i1,a,i2) 
      temp T2iiai(i,i1,a,i2) 
      temp T3iiai(i,i1,a,i2) 
      temp T4iiai(i,i1,a,i2) 
      temp TSiiai(i,i1,a,i2) 
#
      temp  tmp_bb(b,b1) 
      temp tmp1_bb(b,b1) 
      temp  tmp_jj(j,j1) 
      temp tmp1_jj(j,j1) 
#
      temp  Tjjbj(j,j1,b,j2) 
      temp T1jjbj(j,j1,b,j2) 
      temp T2jjbj(j,j1,b,j2) 
      temp T3jjbj(j,j1,b,j2) 
      temp T4jjbj(j,j1,b,j2) 
      temp TSjjbj(j,j1,b,j2) 
# 
      temp T1aaai(a,a1,a2,i)  
      temp T2aaai(a,a1,a2,i)  
      temp T1aaaa(a,a1,a2,a3)  
#
      temp T1bbbj(b,b1,b2,j)  
      temp T2bbbj(b,b1,b2,j)  
      temp T1bbbb(b,b1,b2,b3)  
#
      temp T1aabb(a,a1,b,b1)  
#
      temp R1aiai(a,i,a1,i1) 
      temp R2aiai(a,i,a1,i1) 
      temp R3aiai(a,i,a1,i1) 
      temp R4aiai(a,i,a1,i1) 
      temp R1bjbj(b,j,b1,j1) 
      temp R2bjbj(b,j,b1,j1) 
      temp R3bjbj(b,j,b1,j1) 
      temp R4bjbj(b,j,b1,j1) 
      temp R1aibj(a,i,b,j) 
      temp R2aibj(a,i,b,j) 
      temp R3aibj(a,i,b,j) 
      temp R4aibj(a,i,b,j) 
#
      temp T1iaai(i,a,a1,i1) 
      temp T2iaai(i,a,a1,i1) 
      temp T1jbbj(j,b,b1,j1) 
      temp T2jbbj(j,b,b1,j1) 
      temp T1iabj(i,a,b,j) 
      temp T2iabj(i,a,b,j) 
      temp Tjjpp(j,j1,p,p1) 
      temp T1jjpp(j,j1,p,p1) 
      temp T2jjpp(j,j1,p,p1) 
      temp  Tiiqq(i,i1,q,q1) 
      temp T1iiqq(i,i1,q,q1) 
      temp T2iiqq(i,i1,q,q1) 
      temp  Tjjai(j,j1,a,i) 
      temp T1jjai(j,j1,a,i) 
      temp T2jjai(j,j1,a,i) 
      temp  Tiibj(i,i1,b,j) 
      temp T1iibj(i,i1,b,j) 
      temp T2iibj(i,i1,b,j) 
      temp  Tjbai(j,b,a,i)  
      temp T1jbai(j,b,a,i)  
      temp T2jbai(j,b,a,i)  
      temp  Taijj(a,i,j,j1) 
      temp T1aijj(a,i,j,j1) 
      temp Tqqip(a,i,b,b1)  
#
      temp T1iibb(i,i1,b,b1) 
      temp  Tjjaa(j,j1,a,a1) 
      temp T1jjaa(j,j1,a,a1) 
      temp  Tjjii(j,j1,i,i1) 
#
      temp Taibb(a,i,b,b1)
      temp T1aibb(a,i,b,b1)
      temp Tbjaa(b,j,a,a1)
      temp T1bjaa(b,j,a,a1)
      temp T1jbii(j,b,i,i1)
      temp Tiajj(i,a,j,j1)
      temp T1iajj(i,a,j,j1)
      temp  Taiaa(a1,i,a2,a) 
      temp T1aiaa(a1,i,a2,a) 
      temp  Tbjbb(b1,j,b2,b) 
      temp T1bjbb(b1,j,b2,b) 
#
# Declare distributed arrays 
# -------------------------- 
#
      distributed Vxxxp(mu,nu,lambda,i)
      distributed Vxxxq(mu,nu,lambda,j)
      distributed Vxxpp(mu,nu,p1,i)
      distributed Vxxqq(mu,nu,q1,j)
      distributed Vxppp(mu,p2,p1,i)
      distributed Vxqqq(mu,q2,q1,j)
      distributed Vxpqq(mu,p,q1,j)
      distributed Vixxx(i,mu,nu,sigma)
      distributed Vipxx(i,p,nu,sigma)
      distributed Vipqx(i,p,q,sigma)
#
      distributed Iiiii(i,i1,i2,i3)
      distributed Ijjjj(j,j1,j2,j3)
      distributed Iiijj(i,i1,j,j1)
      distributed T2new_aa(a,i,a1,i1)
      distributed T2new_bb(b,j,b1,j1)
      distributed T2new_ab(a,i,b,j)
      distributed T2old_aa(a,i,a1,i1)
      distributed T2old_bb(b,j,b1,j1)
      distributed T2old_ab(a,i,b,j)
      distributed Tau_aa(a,i,a1,i1)
      distributed Tau_bb(b,j,b1,j1)
      distributed Tau_ab(a,i,b,j)
      distributed Taup_aa(a,i,a1,i1)
      distributed Taup_bb(b,j,b1,j1)
      distributed Taup_ab(a,i,b,j)
#
# Declare served arrays 
# --------------------- 
#
      served AOINT(mu,nu,lambda,sigma) 
#
# ---------------------------------------
#
     temp TXaiai(a,i,nu,i1)
     temp TYaiai(a,i,a1,i1)
     temp TXbjbj(b,j,nu,j1)
     temp TYbjbj(b,j,b1,j1)
     temp TXaibj(a,i,nu,j)
     temp TYaibj(a,i,b,j)
#
      distributed F1me_a(i,a)
      distributed F1me_b(j,b)
#
      distributed F1ae_a(a,a1)
      distributed F1ae_b(b,b1)
#
      distributed F1mi_a(i,i1)
      distributed F1mi_b(j,j1)
#
      distributed W1minj_aa(i,i1,i2,i3)
      distributed W1minj_bb(j,j1,j2,j3)
      distributed W1minj_ab(i,i1,j,j1)
#
      distributed W2mebj_aa(i,a,a1,i1)
      distributed W2mebj_bb(j,b,b1,j1)
      distributed W2mebj_ab(i,a,b,j)
      distributed W2mebj_ba(j,b,a,i)
      distributed W2mjbe_ab(i,i1,b,b1)
      distributed W2mjbe_ba(j,j1,a,a1)
#
      distributed W1imen_aa(i,i1,a,i2)
      distributed W1imen_bb(j,j1,b,j2)
      distributed W1imen_ab(i,i1,b,j)
      distributed W1imen_ba(j,j1,a,i)
#
      distributed l1a_old(i,a) 
      distributed l1a_new(i,a) 
      distributed l1b_old(j,b) 
      distributed l1b_new(j,b) 
      distributed L2old_aa(i,a,i1,a1) 
      distributed L2new_aa(i,a,i1,a1) 
      distributed L2old_bb(j,b,j1,b1) 
      distributed L2new_bb(j,b,j1,b1) 
      distributed L2old_ab(i,a,j,b) 
      distributed L2new_ab(i,a,j,b) 
#
# Procedure specific arrays used used: 
# ------------------------------------ 
#
# Local arrays: 
# ------------- 
#
      local ZAA(i,mu,i1,a1) 
      local ZAB(i,mu,j,b) 
      local ZBB(j,mu,j1,b1) 
      local Liaix(i,a,i1,nu) 
      local Ljbjx(j,b,j1,nu) 
      local Liajx(i,a,j,nu) 
#
      local Laaaa(a3,a2,a,a1) 
      local Lbbbb(b3,b2,b,b1) 
      local Laabb(a,a1,b,b1) 
      local Lbbaa(b,b1,a,a1) 
      local Liaaa(i,a1,a3,a2) 
      local Ljbbb(j,b1,b3,b2) 
      local Liabb(i,a1,b,b1) 
      local Ljbaa(j,b1,a,a1) 
# 
      temp Liiia(i,i2,i1,a2) 
      temp Liiii(i,i2,i1,i3) 
      temp Ljjjb(j,j2,j1,b2) 
      temp Ljjjj(j,j2,j1,j3) 
      temp Liijb(i,i1,j,b1) 
      temp Liajj(i,a1,j,j1) 
      temp Liijj(i,i1,j,j1) 
#
      temp Tbbaa(b,b1,a,a1) 
      temp Tjbaa(j,b1,a2,a3) 
      temp Tjbbb(j,b1,b2,b3) 
      temp Tiabb(i,a1,b2,b3) 
      temp Tiaaa(i,a1,a2,a3) 
      temp Tiijb(i,i1,j,b) 
      temp Tixia(i,mu,i1,a1) 
      temp Tixjb(i,mu,j,b) 
      temp Tjxjb(j,mu,j1,b) 
      temp Tixix(i,mu,i1,nu) 
      temp Tixjx(i,mu,j,nu) 
      temp Tjxjx(j,mu,j1,nu) 
      temp Yaa(i,mu,i1,nu) 
      temp Yab(i,mu,j,nu) 
      temp Ybb(j,mu,j1,nu) 
      temp Tiaix(i,a,i1,nu)  
      temp Tiajx(i,a,j1,nu)  
      temp Tjbjx(j,b,j1,nu)  
      temp Tiiia(i,i2,i1,a)
      temp Tjjjb(j,j2,j1,b)
      temp Liaia(i,a,i1,a1)  
      temp Ljbjb(j,b,j1,b1)  
#
# Distributed arrays 
# ------------------ 
# 
      distributed Z2AA(i,mu,i1,nu) 
      distributed Z2AB(i,mu,j1,nu) 
      distributed Z2BB(j,mu,j1,nu) 
      distributed L2AO_aa(i,mu,i1,nu) 
      distributed L2AO_ab(i,mu,j1,nu) 
      distributed L2AO_bb(j,mu,j1,nu) 
#
#
# Declare scalars 
# --------------- 
#
      scalar etemp
      scalar etemp1 
      scalar esum
      scalar ecorraa
      scalar ecorrbb
      scalar ecorrab
      scalar ecorrT
      scalar ecrit 
      scalar eold 
      scalar ediff 
      scalar mp2_energy
#
# BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_XXII
#
#    ------------------------------------------------------------------------
#
     CREATE Vxixi
     CREATE Vxxii
     CREATE Vixxi
     CREATE Vxxai
     CREATE Vxxxa
     execute sip_barrier
#
     PARDO mu, nu, lambda, sigma
#
              compute_integrals AOINT(mu,nu,lambda,sigma)
#
              DO i
#
                 Txxxi(mu,nu,lambda,i) = AOINT(mu,nu,lambda,sigma)*ca(sigma,i)
#
                 DO i1
                    Txixi(mu,i1,lambda,i)      = Txxxi(mu,nu,lambda,i)*ca(nu,i1)
                    put Vxixi(mu,i1,lambda,i) += Txixi(mu,i1,lambda,i)
                 ENDDO i1
#
                 DO i1
                    Txxii(mu,nu,i1,i)      = Txxxi(mu,nu,lambda,i)*ca(lambda,i1)
                    put Vxxii(mu,nu,i1,i) += Txxii(mu,nu,i1,i)
                 ENDDO i1
#
                 DO i1
                    Tixxi(i1,nu,lambda,i)      = Txxxi(mu,nu,lambda,i)*ca(mu,i1)
                    put Vixxi(i1,nu,lambda,i) += Tixxi(i1,nu,lambda,i)
                 ENDDO i1
#
                 DO a
                    Txxai(mu,nu,a,i)      = Txxxi(mu,nu,lambda,i)*ca(lambda,a)
                    put Vxxai(mu,nu,a,i) += Txxai(mu,nu,a,i)
                 ENDDO a
#
              ENDDO i
#
              DO a
#
                 Txxxa(mu,nu,lambda,a) = AOINT(mu,nu,lambda,sigma)*ca(sigma,a)
                 PUT Vxxxa(mu,nu,lambda,a) += Txxxa(mu,nu,lambda,a) 
#
              ENDDO a
#
     ENDPARDO mu, nu, lambda, sigma
     execute sip_barrier
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_XXII
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_PIPI
#
#    ------------------------------------------------------------------------
#
     CREATE Vxipi
     CREATE VSpipi
     execute sip_barrier
     PARDO mu, nu, i, i1
#
           GET Vxixi(mu,i,nu,i1)
#
           DO p
              Txipi(mu,i,p,i1)      = Vxixi(mu,i,nu,i1)*ca(nu,p)
              PUT Vxipi(mu,i,p,i1) += Txipi(mu,i,p,i1)
           ENDDO p
#
     ENDPARDO mu, nu, i, i1
     execute sip_barrier
     DELETE Vxixi
#
     PARDO mu, p, i, i1
#
           GET Vxipi(mu,i,p,i1)
           GET Vxipi(mu,i1,p,i)
#
           DO p1
              Tpipi(p1,i,p,i1)       = Vxipi(mu,i,p,i1)*ca(mu,p1)
              T1pipi(p1,i,p,i1)      = Vxipi(mu,i1,p,i)*ca(mu,p1)
              Tpipi(p1,i,p,i1)      -= T1pipi(p1,i,p,i1)  
              PUT VSpipi(p1,i,p,i1) += Tpipi(p1,i,p,i1) 
           ENDDO p1
#
     ENDPARDO mu, p, i, i1
#
     execute sip_barrier
     DELETE Vxipi
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_PIPI
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_AAII
#
#    ------------------------------------------------------------------------
#
     CREATE Vxaii
     CREATE Vaaii
     execute sip_barrier
     PARDO mu, nu, i, i1
#
           GET Vxxii(mu,nu,i,i1)
#
           DO a
              Txaii(mu,a,i,i1) = Vxxii(mu,nu,i,i1)*ca(nu,a)
              PUT Vxaii(mu,a,i,i1) += Txaii(mu,a,i,i1)
           ENDDO a
#
     ENDPARDO mu, nu, i, i1
     execute sip_barrier
     DELETE Vxxii
#
#
     PARDO mu, a, i, i1
#
           GET Vxaii(mu,a,i,i1)
#
           DO a1
              Taaii(a1,a,i,i1) = Vxaii(mu,a,i,i1)*ca(mu,a1)
              PUT Vaaii(a1,a,i,i1) += Taaii(a1,a,i,i1)
           ENDDO a1
#
     ENDPARDO mu, a, i, i1
#
     execute sip_barrier
     DELETE Vxaii
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_AAII
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_IAAI
#
#    ------------------------------------------------------------------------
#
     CREATE Vixai
     CREATE Viaai
     execute sip_barrier
     PARDO mu, nu, i, i1
#
           GET Vixxi(i,mu,nu,i1)
#
           DO a
              Tixai(i,mu,a,i1) = Vixxi(i,mu,nu,i1)*ca(nu,a)
              PUT Vixai(i,mu,a,i1) += Tixai(i,mu,a,i1)
           ENDDO a
#
     ENDPARDO mu, nu, i, i1
     execute sip_barrier
     DELETE Vixxi
#
     PARDO mu, a, i, i1
#
           GET Vixai(i,mu,a,i1)
#
           DO a1
              Tiaai(i,a1,a,i1) = Vixai(i,mu,a,i1)*ca(mu,a1)
              PUT Viaai(i,a1,a,i1) += Tiaai(i,a1,a,i1)
           ENDDO a1
#
     ENDPARDO mu, a, i, i1
#
     execute sip_barrier
     DELETE Vixai
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_IAAI
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_AAAI
#
#    ------------------------------------------------------------------------
#
     CREATE Vxaai
     CREATE VSaaai
     execute sip_barrier
     PARDO mu, nu, a, i
#
           GET Vxxai(mu,nu,a,i)
#
           DO a1
              Txaai(mu,a1,a,i) = Vxxai(mu,nu,a,i)*ca(nu,a1)
              PUT Vxaai(mu,a1,a,i) += Txaai(mu,a1,a,i)
           ENDDO a1
#
     ENDPARDO mu, nu, a, i
     execute sip_barrier
     DELETE Vxxai
#
     PARDO mu, a, a1, i
#
           GET Vxaai(mu,a,a1,i)
#
           DO a2
#
              GET Vxaai(mu,a,a2,i)
#
              Taaai(a2,a,a1,i)       = Vxaai(mu,a,a1,i)*ca(mu,a2)
              T1aaai(a2,a,a1,i)      = Vxaai(mu,a,a2,i)*ca(mu,a1)
              Taaai(a2,a,a1,i)      -= T1aaai(a2,a,a1,i)  
              PUT VSaaai(a2,a,a1,i) += Taaai(a2,a,a1,i)
           ENDDO a2
#
     ENDPARDO mu, a, a1, i
#
     execute sip_barrier
     DELETE Vxaai
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_AAAI
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_AAAA
#
#    ------------------------------------------------------------------------
#
     CREATE Vxxaa
     execute sip_barrier
     PARDO mu, nu, lambda, a
#
           GET Vxxxa(mu,nu,lambda,a)
#
           DO a1
              Txxaa(mu,nu,a1,a) = Vxxxa(mu,nu,lambda,a)*ca(lambda,a1)
              PUT Vxxaa(mu,nu,a1,a) += Txxaa(mu,nu,a1,a)
           ENDDO a1
#
     ENDPARDO mu, nu, lambda, a
     execute sip_barrier
     DELETE Vxxxa
#
     CREATE Vxaaa
     execute sip_barrier
     PARDO mu, nu, a, a1
#
           GET Vxxaa(mu,nu,a1,a)
#
           DO a2
              Txaaa(mu,a2,a1,a) = Vxxaa(mu,nu,a1,a)*ca(nu,a2)
              PUT Vxaaa(mu,a2,a1,a) += Txaaa(mu,a2,a1,a)
           ENDDO a2
#
     ENDPARDO mu, nu, a, a1
     execute sip_barrier
     DELETE Vxxaa
#
     CREATE VSaaaa
     execute sip_barrier
     PARDO mu, a, a1, a2
#
           GET Vxaaa(mu,a2,a1,a)
           GET Vxaaa(mu,a,a1,a2)
           Txaaa(mu,a2,a1,a)  = Vxaaa(mu,a2,a1,a)
           T1xaaa(mu,a2,a1,a) = Vxaaa(mu,a,a1,a2)
           Txaaa(mu,a2,a1,a) -= T1xaaa(mu,a2,a1,a)
#
           DO a3
              Taaaa(a3,a2,a1,a)       = Txaaa(mu,a2,a1,a)*ca(mu,a3)
              PUT VSaaaa(a3,a2,a1,a) += Taaaa(a3,a2,a1,a)
           ENDDO a3
#
     ENDPARDO mu, a, a1, a2
     execute sip_barrier
     DELETE Vxaaa
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_AAAA
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_PPPP
#
#    ------------------------------------------------------------------------
#
          CALL TRAN_XXII
          CALL TRAN_PIPI
          CALL TRAN_AAII
          CALL TRAN_IAAI
          CALL TRAN_AAAI
          CALL TRAN_AAAA
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_PPPP
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_XXJJ
#
#    ------------------------------------------------------------------------
#
     CREATE Vxjxj
     CREATE Vxxjj
     CREATE Vjxxj
     CREATE Vxxbj
     CREATE Vxxxb
     execute sip_barrier
#
     PARDO mu, nu, lambda, sigma
#
              compute_integrals AOINT(mu,nu,lambda,sigma)
#
              DO j
#
                 Txxxj(mu,nu,lambda,j) = AOINT(mu,nu,lambda,sigma)*cb(sigma,j)
#
                 DO j1
                    Txjxj(mu,j1,lambda,j)      = Txxxj(mu,nu,lambda,j)*cb(nu,j1)
                    put Vxjxj(mu,j1,lambda,j) += Txjxj(mu,j1,lambda,j)
                 ENDDO j1
#
                 DO j1
                    Txxjj(mu,nu,j1,j)      = Txxxj(mu,nu,lambda,j)*cb(lambda,j1)
                    put Vxxjj(mu,nu,j1,j) += Txxjj(mu,nu,j1,j)
                 ENDDO j1
#
                 DO j1
                    Tjxxj(j1,nu,lambda,j)      = Txxxj(mu,nu,lambda,j)*cb(mu,j1)
                    put Vjxxj(j1,nu,lambda,j) += Tjxxj(j1,nu,lambda,j)
                 ENDDO j1
#
                 DO b
                    Txxbj(mu,nu,b,j)      = Txxxj(mu,nu,lambda,j)*cb(lambda,b)
                    put Vxxbj(mu,nu,b,j) += Txxbj(mu,nu,b,j)
                 ENDDO b
#
              ENDDO j
#
              DO b
                 Txxxb(mu,nu,lambda,b)      = AOINT(mu,nu,lambda,sigma)*cb(sigma,b)
                 put Vxxxb(mu,nu,lambda,b) += Txxxb(mu,nu,lambda,b)
              ENDDO b
#
     ENDPARDO mu, nu, lambda, sigma
     execute sip_barrier
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_XXJJ
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_QJQJ
#
#    ------------------------------------------------------------------------
#
     CREATE Vxjqj
     CREATE VSqjqj
     execute sip_barrier
     PARDO mu, nu, j, j1
#
           GET Vxjxj(mu,j,nu,j1)
#
           DO q
              Txjqj(mu,j,q,j1) = Vxjxj(mu,j,nu,j1)*cb(nu,q)
              PUT Vxjqj(mu,j,q,j1) += Txjqj(mu,j,q,j1)
           ENDDO q
#
     ENDPARDO mu, nu, j, j1
     execute sip_barrier
     DELETE Vxjxj
#
     PARDO mu, q, j, j1
#
           GET Vxjqj(mu,j,q,j1)
           GET Vxjqj(mu,j1,q,j)
#
           DO q1
              Tqjqj(q1,j,q,j1)       = Vxjqj(mu,j,q,j1)*cb(mu,q1)
              T1qjqj(q1,j,q,j1)      = Vxjqj(mu,j1,q,j)*cb(mu,q1)
              Tqjqj(q1,j,q,j1)      -= T1qjqj(q1,j,q,j1)  
              PUT VSqjqj(q1,j,q,j1) += Tqjqj(q1,j,q,j1)
           ENDDO q1
#
     ENDPARDO mu, q, j, j1
#
     execute sip_barrier
     DELETE Vxjqj
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_QJQJ
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_BBJJ
#
#    ------------------------------------------------------------------------
#
     CREATE Vxbjj
     CREATE Vbbjj
     execute sip_barrier
     PARDO mu, nu, j, j1
#
           GET Vxxjj(mu,nu,j,j1)
#
           DO b
              Txbjj(mu,b,j,j1) = Vxxjj(mu,nu,j,j1)*cb(nu,b)
              PUT Vxbjj(mu,b,j,j1) += Txbjj(mu,b,j,j1)
           ENDDO b
#
     ENDPARDO mu, nu, j, j1
     execute sip_barrier
     DELETE Vxxjj
#
     PARDO mu, b, j, j1
#
           GET Vxbjj(mu,b,j,j1)
#
           DO b1
              Tbbjj(b1,b,j,j1) = Vxbjj(mu,b,j,j1)*cb(mu,b1)
              PUT Vbbjj(b1,b,j,j1) += Tbbjj(b1,b,j,j1)
           ENDDO b1
#
     ENDPARDO mu, b, j, j1
#
     execute sip_barrier
     DELETE Vxbjj
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_BBJJ
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_JBBJ
#
#    ------------------------------------------------------------------------
#
     CREATE Vjxbj
     CREATE Vjbbj
     execute sip_barrier
     PARDO mu, nu, j, j1
#
           GET Vjxxj(j,mu,nu,j1)
#
           DO b
              Tjxbj(j,mu,b,j1) = Vjxxj(j,mu,nu,j1)*cb(nu,b)
              PUT Vjxbj(j,mu,b,j1) += Tjxbj(j,mu,b,j1)
           ENDDO b
#
     ENDPARDO mu, nu, j, j1
     execute sip_barrier
     DELETE Vjxxj
#
     PARDO mu, b, j, j1
#
           GET Vjxbj(j,mu,b,j1)
#
           DO b1
              Tjbbj(j,b1,b,j1) = Vjxbj(j,mu,b,j1)*cb(mu,b1)
              PUT Vjbbj(j,b1,b,j1) += Tjbbj(j,b1,b,j1)
           ENDDO b1
#
     ENDPARDO mu, b, j, j1
#
     execute sip_barrier
     DELETE Vjxbj
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_JBBJ
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_BBBJ
#
#    ------------------------------------------------------------------------
#
     CREATE Vxbbj
     CREATE VSbbbj
     execute sip_barrier
     PARDO mu, nu, b, j
#
           GET Vxxbj(mu,nu,b,j)
#
           DO b1
              Txbbj(mu,b1,b,j) = Vxxbj(mu,nu,b,j)*cb(nu,b1)
              PUT Vxbbj(mu,b1,b,j) += Txbbj(mu,b1,b,j)
           ENDDO b1
#
     ENDPARDO mu, nu, b, j
     execute sip_barrier
     DELETE Vxxbj
#
     PARDO mu, b, b1, j
#
           GET Vxbbj(mu,b,b1,j)
#
           DO b2
#
              GET Vxbbj(mu,b,b2,j)
              Tbbbj(b2,b,b1,j)       = Vxbbj(mu,b,b1,j)*cb(mu,b2)
              T1bbbj(b2,b,b1,j)      = Vxbbj(mu,b,b2,j)*cb(mu,b1)
              Tbbbj(b2,b,b1,j)      -= T1bbbj(b2,b,b1,j)  
              PUT VSbbbj(b2,b,b1,j) += Tbbbj(b2,b,b1,j)
           ENDDO b2
#
     ENDPARDO mu, b, b1, j
#
     execute sip_barrier
     DELETE Vxbbj
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_BBBJ
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_BBBB
#
#    ------------------------------------------------------------------------
#
     CREATE Vxxbb
     execute sip_barrier
     PARDO mu, nu, lambda, b
#
           GET Vxxxb(mu,nu,lambda,b)
#
           DO b1
              Txxbb(mu,nu,b1,b) = Vxxxb(mu,nu,lambda,b)*cb(lambda,b1)
              PUT Vxxbb(mu,nu,b1,b) += Txxbb(mu,nu,b1,b)
           ENDDO b1
#
     ENDPARDO mu, nu, lambda, b
     execute sip_barrier
     DELETE Vxxxb
#
     CREATE Vxbbb
     execute sip_barrier
     PARDO mu, nu, b, b1
#
           GET Vxxbb(mu,nu,b1,b)
#
           DO b2
              Txbbb(mu,b2,b1,b) = Vxxbb(mu,nu,b1,b)*cb(nu,b2)
              PUT Vxbbb(mu,b2,b1,b) += Txbbb(mu,b2,b1,b)
           ENDDO b2
#
     ENDPARDO mu, nu, b, b1
     execute sip_barrier
#
     CREATE VSbbbb
     execute sip_barrier
     PARDO mu, b, b1, b2
#
           GET Vxbbb(mu,b2,b1,b)
           GET Vxbbb(mu,b,b1,b2)
           Txbbb(mu,b2,b1,b)  = Vxbbb(mu,b2,b1,b)
           T1xbbb(mu,b2,b1,b) = Vxbbb(mu,b,b1,b2)
           Txbbb(mu,b2,b1,b) -= T1xbbb(mu,b2,b1,b)
#
           DO b3
              Tbbbb(b3,b2,b1,b)       = Txbbb(mu,b2,b1,b)*cb(mu,b3)
              PUT VSbbbb(b3,b2,b1,b) += Tbbbb(b3,b2,b1,b)
           ENDDO b3
#
     ENDPARDO mu, b, b1, b2
     execute sip_barrier
     DELETE Vxbbb
#
     CREATE Vxabb
     execute sip_barrier
     PARDO mu, nu, b, b1
#
           GET Vxxbb(mu,nu,b1,b)
#
           DO a
              Txabb(mu,a,b1,b) = Vxxbb(mu,nu,b1,b)*ca(nu,a)
              PUT Vxabb(mu,a,b1,b) += Txabb(mu,a,b1,b)
           ENDDO a
#
     ENDPARDO mu, nu, b, b1
     execute sip_barrier
#
     CREATE Vaabb
     execute sip_barrier
     PARDO mu, b, b1, a
#
           GET Vxabb(mu,a,b1,b)
#
           DO a1
              Taabb(a1,a,b1,b)      = Vxabb(mu,a,b1,b)*ca(mu,a1)
              PUT Vaabb(a1,a,b1,b) += Taabb(a1,a,b1,b)
           ENDDO a1
#
     ENDPARDO mu, b, b1, a
     execute sip_barrier
     DELETE Vxabb
     DELETE Vxxbb
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_BBBB
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_QQQQ
#
#    ------------------------------------------------------------------------
#
          CALL TRAN_XXJJ
          CALL TRAN_QJQJ
          CALL TRAN_BBJJ
          CALL TRAN_JBBJ
          CALL TRAN_BBBJ
          CALL TRAN_BBBB
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_QQQQ
# 
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_YYII
#
#    ------------------------------------------------------------------------
#
     CREATE Vxxii
     CREATE Vxxai
     execute sip_barrier
#
     PARDO mu, nu, lambda, sigma
#
              compute_integrals AOINT(mu,nu,lambda,sigma)
#
              DO i
#
                 Txxxi(mu,nu,lambda,i) = AOINT(mu,nu,lambda,sigma)*ca(sigma,i)
#
                 DO i1
                    Txxii(mu,nu,i1,i)      = Txxxi(mu,nu,lambda,i)*ca(lambda,i1)
                    put Vxxii(mu,nu,i1,i) += Txxii(mu,nu,i1,i)
                 ENDDO i1
#
                 DO a
                    Txxai(mu,nu,a,i)      = Txxxi(mu,nu,lambda,i)*ca(lambda,a)
                    put Vxxai(mu,nu,a,i) += Txxai(mu,nu,a,i)
                 ENDDO a
#
              ENDDO i
#
     ENDPARDO mu, nu, lambda, sigma
     execute sip_barrier
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_YYII
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_BBII
#
#    ------------------------------------------------------------------------
#
     CREATE Vxbii
     CREATE Vbbii
     CREATE Vjbii
     execute sip_barrier
     PARDO mu, nu, i, i1
#
           GET Vxxii(mu,nu,i,i1)
#
           DO b
              Txbii(mu,b,i,i1) = Vxxii(mu,nu,i,i1)*cb(nu,b)
              PUT Vxbii(mu,b,i,i1) += Txbii(mu,b,i,i1)
           ENDDO b
#
     ENDPARDO mu, nu, i, i1
     execute sip_barrier
     DELETE Vxxii
#
     PARDO mu, b, i, i1
#
           GET Vxbii(mu,b,i,i1)
#
           DO b1
#
              Tbbii(b1,b,i,i1) = Vxbii(mu,b,i,i1)*cb(mu,b1)
              PUT Vbbii(b1,b,i,i1) += Tbbii(b1,b,i,i1)
#
           ENDDO b1
#
     ENDPARDO mu, b, i, i1
#
     PARDO mu, b, i, i1
#
           GET Vxbii(mu,b,i,i1)
#
           DO j
#
              Tjbii(j,b,i,i1) = Vxbii(mu,b,i,i1)*cb(mu,j)
              PUT Vjbii(j,b,i,i1) += Tjbii(j,b,i,i1)
#
           ENDDO j
#
     ENDPARDO mu, b, i, i1
     execute sip_barrier
     DELETE Vxbii
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_BBII
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_BBAI
#
#    ------------------------------------------------------------------------
#
     CREATE Vxbai
     CREATE Vbbai
     execute sip_barrier
     PARDO mu, nu, a, i
#
           GET Vxxai(mu,nu,a,i)
#
           DO b
              Txbai(mu,b,a,i) = Vxxai(mu,nu,a,i)*cb(nu,b)
              PUT Vxbai(mu,b,a,i) += Txbai(mu,b,a,i)
           ENDDO b
#
     ENDPARDO mu, nu, a, i
     execute sip_barrier
     DELETE Vxxai
#
     PARDO mu, b, a, i
#
           GET Vxbai(mu,b,a,i)
#
           DO b1
#
              Tbbai(b1,b,a,i) = Vxbai(mu,b,a,i)*cb(mu,b1)
              PUT Vbbai(b1,b,a,i) += Tbbai(b1,b,a,i)
#
           ENDDO b1
#
     ENDPARDO mu, b, a, i
     execute sip_barrier
     DELETE Vxbai
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_BBAI
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_QQPP
#
#    ------------------------------------------------------------------------
#
          CALL TRAN_YYII
          CALL TRAN_BBII
          CALL TRAN_BBAI
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_QQPP
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_XXIJ
#
#    ------------------------------------------------------------------------
#
     CREATE Vxixj
     CREATE Vixxj
     CREATE Vxxjj
#    CREATE Viixx
     CREATE Vxxbj
     execute sip_barrier
#
     PARDO mu, nu, lambda, sigma
#
              compute_integrals AOINT(mu,nu,lambda,sigma)
#
              DO j
#
                 Txxxj(mu,nu,lambda,j) = AOINT(mu,nu,lambda,sigma)*cb(sigma,j)
#
                 DO i
                    Txixj(mu,i,lambda,j)      = Txxxj(mu,nu,lambda,j)*ca(nu,i)
                    put Vxixj(mu,i,lambda,j) += Txixj(mu,i,lambda,j)
                 ENDDO i
#
                 DO i
                    Tixxj(i,nu,lambda,j)      = Txxxj(mu,nu,lambda,j)*ca(mu,i)
                    put Vixxj(i,nu,lambda,j) += Tixxj(i,nu,lambda,j)
                 ENDDO i
#
                 DO j1
                    Txxjj(mu,nu,j1,j)      = Txxxj(mu,nu,lambda,j)*cb(lambda,j1)
                    put Vxxjj(mu,nu,j1,j) += Txxjj(mu,nu,j1,j)
                 ENDDO j1
#
                 DO b
                    Txxbj(mu,nu,b,j)      = Txxxj(mu,nu,lambda,j)*cb(lambda,b)
                    put Vxxbj(mu,nu,b,j) += Txxbj(mu,nu,b,j)
                 ENDDO b
#
              ENDDO j
#
#             DO i
#
#                Tixxx(i,nu,lambda,sigma) = AOINT(mu,nu,lambda,sigma)*ca(mu,i)
#
#                DO i1
#
#                   Tiixx(i,i1,lambda,sigma) = Tixxx(i,nu,lambda,sigma)*ca(nu,i1)
#                   PUT Viixx(i,i1,lambda,sigma) += Tiixx(i,i1,lambda,sigma)
#
#                ENDDO i1
#
#             ENDDO i
#
     ENDPARDO mu, nu, lambda, sigma
     execute sip_barrier
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_XXIJ
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_PIQJ
#
#    ------------------------------------------------------------------------
#
     CREATE Vxiqj
     CREATE Vpiqj
     execute sip_barrier
     PARDO mu, nu, i, j
#
           GET Vxixj(mu,i,nu,j)
#
           DO q
              Txiqj(mu,i,q,j) = Vxixj(mu,i,nu,j)*cb(nu,q)
              PUT Vxiqj(mu,i,q,j) += Txiqj(mu,i,q,j)
           ENDDO q
#
     ENDPARDO mu, nu, i, j
     execute sip_barrier
     DELETE Vxixj
#
     PARDO mu, q, i, j
#
           GET Vxiqj(mu,i,q,j)
#
           DO p
#
              Tpiqj(p,i,q,j) = Vxiqj(mu,i,q,j)*ca(mu,p)
              PUT Vpiqj(p,i,q,j) += Tpiqj(p,i,q,j)
#
           ENDDO p
#
     ENDPARDO mu, q, i, j
#
     execute sip_barrier
     DELETE Vxiqj
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_PIQJ
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_AAJJ
#
#    ------------------------------------------------------------------------
#
     CREATE Vxajj
     CREATE Vaajj
     execute sip_barrier
     PARDO mu, nu, j, j1
#
           GET Vxxjj(mu,nu,j,j1)
#
           DO a
              Txajj(mu,a,j,j1) = Vxxjj(mu,nu,j,j1)*ca(nu,a)
              PUT Vxajj(mu,a,j,j1) += Txajj(mu,a,j,j1)
           ENDDO a
#
     ENDPARDO mu, nu, j, j1
     execute sip_barrier
     DELETE Vxxjj
#
     PARDO mu, a, j, j1
#
           GET Vxajj(mu,a,j,j1)
#
           DO a1
              Taajj(a1,a,j,j1) = Vxajj(mu,a,j,j1)*ca(mu,a1)
              PUT Vaajj(a1,a,j,j1) += Taajj(a1,a,j,j1)
           ENDDO a1
#
     ENDPARDO mu, a, j, j1
#
     execute sip_barrier
     DELETE Vxajj
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_AAJJ
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_IABJ
#
#    ------------------------------------------------------------------------
#
     CREATE Vixbj
     CREATE Viabj
     execute sip_barrier
     PARDO mu, nu, i, j
#
           GET Vixxj(i,mu,nu,j)
#
           DO b
              Tixbj(i,mu,b,j) = Vixxj(i,mu,nu,j)*cb(nu,b)
              PUT Vixbj(i,mu,b,j) += Tixbj(i,mu,b,j)
           ENDDO b
#
     ENDPARDO mu, nu, i, j
     execute sip_barrier
     DELETE Vixxj
#
     PARDO mu, b, i, j
#
           GET Vixbj(i,mu,b,j)
#
           DO a
              Tiabj(i,a,b,j) = Vixbj(i,mu,b,j)*ca(mu,a)
              PUT Viabj(i,a,b,j) += Tiabj(i,a,b,j)
           ENDDO a
#
     ENDPARDO mu, b, i, j
#
     execute sip_barrier
     DELETE Vixbj
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_IABJ
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_IIBB
#
#    ------------------------------------------------------------------------
#
     CREATE Viixb
     CREATE Viibb
     execute sip_barrier
     PARDO mu, nu, i, i1
#
           GET Viixx(i,i1,mu,nu)
#
           DO b
              Tiixb(i,i1,mu,b) = Viixx(i,i1,mu,nu)*cb(nu,b)
              PUT Viixb(i,i1,mu,b) += Tiixb(i,i1,mu,b)
           ENDDO b
#
     ENDPARDO mu, nu, i, i1
     execute sip_barrier
     DELETE Viixx
#
     PARDO mu, b, i, i1
#
           GET Viixb(i,i1,mu,b)
#
           DO b1
              Tiibb(i,i1,b1,b) = Viixb(i,i1,mu,b)*cb(mu,b1)
              PUT Viibb(i,i1,b1,b) += Tiibb(i,i1,b1,b)
           ENDDO b1
#
     ENDPARDO mu, b, i, i1
#
     execute sip_barrier
     DELETE Viixb
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_IIBB
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_AABJ
#
#    ------------------------------------------------------------------------
#
     CREATE Vxabj
     CREATE Vaabj
     execute sip_barrier
     PARDO mu, nu, b, j
#
           GET Vxxbj(mu,nu,b,j)
#
           DO a
              Txabj(mu,a,b,j) = Vxxbj(mu,nu,b,j)*ca(nu,a)
              PUT Vxabj(mu,a,b,j) += Txabj(mu,a,b,j)
           ENDDO a
#
     ENDPARDO mu, nu, b, j
     execute sip_barrier
     DELETE Vxxbj
#
     PARDO mu, a, b, j
#
           GET Vxabj(mu,a,b,j)
#
           DO a1
              Taabj(a1,a,b,j) = Vxabj(mu,a,b,j)*ca(mu,a1)
              PUT Vaabj(a1,a,b,j) += Taabj(a1,a,b,j)
           ENDDO a1
#
     ENDPARDO mu, a, b, j
#
     execute sip_barrier
     DELETE Vxabj
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_AABJ
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_PPQQ
#
#    ------------------------------------------------------------------------
#
          CALL TRAN_XXIJ
          CALL TRAN_PIQJ
          CALL TRAN_AAJJ
          CALL TRAN_IABJ
          CALL TRAN_AABJ
#         CALL TRAN_IIBB
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_PPQQ
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------ 
#
     PROC TRAN_UHF_P1 
# 
         CALL TRAN_PPPP  
         CALL TRAN_QQQQ  
         CALL TRAN_PPQQ  
         CALL TRAN_QQPP  
#
     ENDPROC TRAN_UHF_P1 
# 
#    ------------------------------------------------------------------------ 
# 
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC TAUAA 
#     ----------
#
      PARDO a, i, a1, i1 
#
            GET T2old_aa(a,i,a1,i1) 
#
            GET t1a_old(a1,i1) 
            GET t1a_old(a1,i) 
            GET t1a_old(a,i1) 
            GET t1a_old(a,i) 
# 
            tai(a1,i1)            = t1a_old(a1,i1) 
            tmp1_aiai(a,i,a1,i1)  = t1a_old(a,i)^tai(a1,i1)  
            tai(a1,i)             = t1a_old(a1,i) 
            tmp2_aiai(a,i,a1,i1)  = t1a_old(a,i1)^tai(a1,i)  
#
            tmp1_aiai(a,i,a1,i1) += T2old_aa(a,i,a1,i1) 
            tmp1_aiai(a,i,a1,i1) -= tmp2_aiai(a,i,a1,i1)  
            PUT Tau_aa(a,i,a1,i1) = tmp1_aiai(a,i,a1,i1)  
#
      ENDPARDO a, i, a1, i1 
#
      ENDPROC TAUAA 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC TAUBB 
#     ----------
#
      PARDO b, j, b1, j1 
#
            GET T2old_bb(b,j,b1,j1) 
            GET t1b_old(b1,j1) 
            GET t1b_old(b1,j) 
            GET t1b_old(b,j1) 
            GET t1b_old(b,j) 
#
            tbj(b1,j1)            = t1b_old(b1,j1) 
            tmp1_bjbj(b,j,b1,j1)  = t1b_old(b,j)^tbj(b1,j1)  
            tbj(b1,j)             = t1b_old(b1,j) 
            tmp2_bjbj(b,j,b1,j1)  = t1b_old(b,j1)^tbj(b1,j)  
#
            tmp1_bjbj(b,j,b1,j1) += T2old_bb(b,j,b1,j1) 
            tmp1_bjbj(b,j,b1,j1) -= tmp2_bjbj(b,j,b1,j1)  
            PUT Tau_bb(b,j,b1,j1) = tmp1_bjbj(b,j,b1,j1)  
#
      ENDPARDO b, j, b1, j1 
#
      ENDPROC TAUBB 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC TAUAB 
#     ----------
#
      PARDO a, i, b, j 
#
            GET T2old_ab(a,i,b,j) 
            GET t1a_old(a,i) 
            GET t1b_old(b,j) 
#
            tmp1_aibj(a,i,b,j)  = t1a_old(a,i)^t1b_old(b,j)  
            tmp1_aibj(a,i,b,j) += T2old_ab(a,i,b,j) 
            PUT Tau_ab(a,i,b,j) = tmp1_aibj(a,i,b,j)  
#
      ENDPARDO a, i, b, j 
#
      ENDPROC TAUAB 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC TAUPAA 
#     -----------
#
      PARDO a, i, a1, i1 
#
            GET T2old_aa(a,i,a1,i1) 
            GET t1a_old(a1,i1) 
            GET t1a_old(a1,i) 
            GET t1a_old(a,i1) 
            GET t1a_old(a,i) 
#
            tai(a1,i1)             = t1a_old(a1,i1) 
            tmp1_aiai(a,i,a1,i1)   = t1a_old(a,i)^tai(a1,i1)  
            tai(a1,i)              = t1a_old(a1,i) 
            tmp2_aiai(a,i,a1,i1)   = t1a_old(a,i1)^tai(a1,i)  
            tmp1_aiai(a,i,a1,i1)  -= tmp2_aiai(a,i,a1,i1) 
            tmp1_aiai(a,i,a1,i1)  *= 0.5  
            tmp1_aiai(a,i,a1,i1)  += T2old_aa(a,i,a1,i1) 
            PUT Taup_aa(a,i,a1,i1) = tmp1_aiai(a,i,a1,i1)  
#
      ENDPARDO a, i, a1, i1 
#
      ENDPROC TAUPAA 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC TAUPBB 
#     -----------
#
      PARDO b, j, b1, j1 
#
            GET T2old_bb(b,j,b1,j1) 
            GET t1b_old(b1,j1) 
            GET t1b_old(b1,j) 
            GET t1b_old(b,j1) 
            GET t1b_old(b,j) 
#
            tbj(b1,j1)             = t1b_old(b1,j1) 
            tmp1_bjbj(b,j,b1,j1)   = t1b_old(b,j)^tbj(b1,j1)  
            tbj(b1,j)              = t1b_old(b1,j) 
            tmp2_bjbj(b,j,b1,j1)   = t1b_old(b,j1)^tbj(b1,j)  
            tmp1_bjbj(b,j,b1,j1)  -= tmp2_bjbj(b,j,b1,j1) 
            tmp1_bjbj(b,j,b1,j1)  *= 0.5  
            tmp1_bjbj(b,j,b1,j1)  += T2old_bb(b,j,b1,j1) 
            PUT Taup_bb(b,j,b1,j1) = tmp1_bjbj(b,j,b1,j1)  
#
      ENDPARDO b, j, b1, j1 
#
      ENDPROC TAUPBB 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC TAUPAB 
#     -----------
#
      PARDO a, i, b, j 
#
            GET T2old_ab(a,i,b,j) 
            GET t1a_old(a,i) 
            GET t1b_old(b,j) 
# 
            tmp1_aibj(a,i,b,j)   = t1a_old(a,i)^t1b_old(b,j)  
            tmp1_aibj(a,i,b,j)  *= 0.5  
            tmp1_aibj(a,i,b,j)  += T2old_ab(a,i,b,j) 
            PUT Taup_ab(a,i,b,j) = tmp1_aibj(a,i,b,j)  
#
      ENDPARDO a, i, b, j 
#
      ENDPROC TAUPAB 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC TAU 
#
           CALL TAUAA 
           CALL TAUBB 
           CALL TAUAB 
#
      ENDPROC TAU 
#
      PROC TAUP 
#
           CALL TAUPAA 
           CALL TAUPBB 
           CALL TAUPAB 
#
      ENDPROC TAUP 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC CREAT1INTER 
#     ---------------- 
#
         CREATE Fme_a
         CREATE Fme_b
#
         CREATE F1ae_a
         CREATE F1ae_b
#
         CREATE F1mi_a
         CREATE F1mi_b
#
      ENDPROC CREAT1INTER 
#     ------------------- 
#
      PROC CREAT2INTER 
#     ---------------- 
#
         CREATE W1minj_aa
         CREATE W1minj_bb
         CREATE W1minj_ab
#
         CREATE W2mebj_aa
         CREATE W2mebj_bb
         CREATE W2mebj_ab
         CREATE W2mebj_ba
         CREATE W2mjbe_ab
         CREATE W2mjbe_ba
#
         CREATE W1imen_aa
         CREATE W1imen_bb
         CREATE W1imen_ab
         CREATE W1imen_ba
#
      ENDPROC CREAT2INTER 
#     ------------------- 
#
      PROC CREATLAMBDAOLD 
#     ------------------- 
#
         CREATE l1a_old
         CREATE l1b_old
         CREATE L2old_aa
         CREATE L2old_bb
         CREATE L2old_ab
#
      ENDPROC CREATLAMBDAOLD  
#     ----------------------  
#
      PROC CREATLAMBDANEW 
#     ------------------- 
#
         CREATE l1a_new
         CREATE l1b_new
         CREATE L2new_aa
         CREATE L2new_bb
         CREATE L2new_ab
#
         CREATE Gae_a 
         CREATE Gae_b 
         CREATE Gmi_a 
         CREATE Gmi_b 
#
      ENDPROC CREATLAMBDANEW  
#     ---------------------- 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
      PROC F1AEA
#     ----------
#
      PARDO a, a1 
#
         Tae_a(a,a1) = 0.0
#
         DO i 
#
            GET t1a_old(a,i) 
            GET Fme_a(i,a1) 
#
            Taa(a,a1)    = t1a_old(a,i)*Fme_a(i,a1)  
            Taa(a,a1)   *= 0.5  
            Tae_a(a,a1) -=  Taa(a,a1)  
#
            DO a2 
#
               GET VSaaai(a1,a,a2,i) 
               GET t1a_old(a2,i) 
#
               Taa(a,a1)    = VSaaai(a1,a,a2,i)*t1a_old(a2,i)  
               Tae_a(a,a1) +=  Taa(a,a1)  
#
               DO i1 
#
                  GET Taup_aa(a,i,a2,i1) 
                  GET VSpipi(a1,i1,a2,i) 
#
                  Taa(a,a1)    = Taup_aa(a,i,a2,i1)*VSpipi(a1,i1,a2,i) 
                  Taa(a,a1)   *= 0.5 
                  Tae_a(a,a1) +=  Taa(a,a1)  
#
               ENDDO i1 
#
            ENDDO a2 
#
         ENDDO i 
#
         DO j 
         DO b 
#
            GET Vaabj(a1,a,b,j) 
            GET t1b_old(b,j) 
#
            Taa(a,a1)    = Vaabj(a1,a,b,j)*t1b_old(b,j) 
            Tae_a(a,a1) +=  Taa(a,a1)  
#
            DO i 
#
               GET Taup_ab(a,i,b,j) 
               GET Vpiqj(a1,i,b,j) 
#
               Taa(a,a1)    = Taup_ab(a,i,b,j)*Vpiqj(a1,i,b,j) 
               Tae_a(a,a1) -=  Taa(a,a1)  
#
            ENDDO i 
#
         ENDDO b 
         ENDDO j 
#
         PUT F1ae_a(a,a1) = Tae_a(a,a1) 
#
      ENDPARDO a, a1 
#
      ENDPROC F1AEA
#     -------------
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
      PROC F1AEB
#     ----------
#
      PARDO b, b1 
#
         Tae_b(b,b1) = 0.0
#
         DO j 
#
            GET t1b_old(b,j) 
            GET Fme_b(j,b1) 
#
            Tbb(b,b1)    = t1b_old(b,j)*Fme_b(j,b1)  
            Tbb(b,b1)   *= 0.5  
            Tae_b(b,b1) -=  Tbb(b,b1)  
#
            DO b2 
#
               GET VSbbbj(b1,b,b2,j) 
               GET t1b_old(b2,j) 
#
               Tbb(b,b1)    = VSbbbj(b1,b,b2,j)*t1b_old(b2,j) 
               Tae_b(b,b1) +=  Tbb(b,b1)  
#
               DO j1 
#
                  GET Taup_bb(b,j,b2,j1) 
                  GET VSqjqj(b1,j1,b2,j) 
#
                  Tbb(b,b1)    = Taup_bb(b,j,b2,j1)*VSqjqj(b1,j1,b2,j) 
                  Tbb(b,b1)   *= 0.5 
                  Tae_b(b,b1) +=  Tbb(b,b1)  
#
               ENDDO j1 
#
            ENDDO b2 
#
         ENDDO j 
#
         DO i 
         DO a 
#
            GET Vbbai(b1,b,a,i) 
            GET t1a_old(a,i) 
#
            Tbb(b,b1)    = Vbbai(b1,b,a,i)*t1a_old(a,i) 
            Tae_b(b,b1) +=  Tbb(b,b1)  
#
            DO j 
#
               GET Taup_ab(a,i,b,j) 
               GET Vpiqj(a,i,b1,j) 
#
               Tbb(b,b1)    = Taup_ab(a,i,b,j)*Vpiqj(a,i,b1,j) 
               Tae_b(b,b1) -=  Tbb(b,b1)  
#
            ENDDO j 
#
         ENDDO a 
         ENDDO i 
#
         PUT F1ae_b(b,b1) = Tae_b(b,b1) 
#
      ENDPARDO b, b1 
#
      ENDPROC F1AEB
#     -------------
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
      PROC F1AE
#     --------
         CALL F1AEA 
         CALL F1AEB 
      ENDPROC F1AE
#     ------------ 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
      PROC FMEA
#     ----------
#
      PARDO i, a, i1, a1  
#
            GET VSpipi(a,i,a1,i1) 
            GET t1a_old(a1,i1) 
#
            Tia(i,a)        = VSpipi(a,i,a1,i1)*t1a_old(a1,i1) 
            PUT Fme_a(i,a) += Tia(i,a) 
#
      ENDPARDO i, a, i1, a1  
#
      PARDO i, a, j, b  
#
            GET Vpiqj(a,i,b,j) 
            GET t1b_old(b,j) 
#
            Tia(i,a)        = Vpiqj(a,i,b,j)*t1b_old(b,j) 
            PUT Fme_a(i,a) += Tia(i,a) 
#
      ENDPARDO i, a, j, b  
# 
      ENDPROC FMEA
#     -------------
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
      PROC FMEB
#     ----------
#
      PARDO j, b, j1, b1  
#
            GET VSqjqj(b,j,b1,j1) 
            GET t1b_old(b1,j1) 
#
            Tjb(j,b)        = VSqjqj(b,j,b1,j1)*t1b_old(b1,j1) 
            PUT Fme_b(j,b) += Tjb(j,b) 
#
      ENDPARDO j, b, j1, b1  
#
      PARDO j, b, i, a  
# 
            GET Vpiqj(a,i,b,j) 
            GET t1a_old(a,i) 
#
            Tjb(j,b)        = Vpiqj(a,i,b,j)*t1a_old(a,i) 
            PUT Fme_b(j,b) += Tjb(j,b) 
#
      ENDPARDO j, b, i, a  
# 
      ENDPROC FMEB
#     -------------
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
      PROC FME
#     ----------
         CALL FMEA
         CALL FMEB
      ENDPROC FME
#     ----------- 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
      PROC F1MIA
#     ----------
#
      PARDO i1, i, a  
#
            GET t1a_old(a,i) 
            GET Fme_a(i1,a) 
#
            Tii(i1,i)         = Fme_a(i1,a)*t1a_old(a,i) 
            Tii(i1,i)        *= 0.5 
            PUT F1mi_a(i1,i) += Tii(i1,i) 
#
            DO i2 
#
               GET VSpipi(a,i2,i,i1) 
               GET t1a_old(a,i2) 
#
               Tii(i1,i)         = VSpipi(a,i2,i,i1)*t1a_old(a,i2) 
               PUT F1mi_a(i1,i) += Tii(i1,i) 
#
               DO a2 
#
                  GET VSpipi(a2,i1,a,i2) 
                  GET Taup_aa(a2,i,a,i2) 
#
                  Tii(i1,i)         = VSpipi(a2,i1,a,i2)*Taup_aa(a2,i,a,i2) 
                  Tii(i1,i)        *= 0.5 
                  PUT F1mi_a(i1,i) += Tii(i1,i) 
#
               ENDDO a2 
#
            ENDDO i2 
#
      ENDPARDO i1, i, a  
#
      PARDO i1, i, j, b  
#
            GET Vpiqj(i,i1,b,j) 
            GET t1b_old(b,j) 
#
            Tii(i1,i)         = Vpiqj(i,i1,b,j)*t1b_old(b,j) 
            PUT F1mi_a(i1,i) += Tii(i1,i) 
#
            DO a 
#
               GET Vpiqj(a,i1,b,j) 
               GET Taup_ab(a,i,b,j)
#
               Tii(i1,i)         = Taup_ab(a,i,b,j)*Vpiqj(a,i1,b,j) 
               PUT F1mi_a(i1,i) += Tii(i1,i) 
#
            ENDDO a 
#
      ENDPARDO i1, i, j, b  
#
      ENDPROC F1MIA
#     -------------
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
      PROC F1MIB
#     ----------
#
      PARDO j1, j, b  
#
            GET t1b_old(b,j) 
            GET Fme_b(j1,b) 
#
            Tjj(j1,j)         = Fme_b(j1,b)*t1b_old(b,j) 
            Tjj(j1,j)        *= 0.5 
            PUT F1mi_b(j1,j) += Tjj(j1,j) 
#
            DO j2 
#
               GET VSqjqj(b,j2,j,j1) 
               GET t1b_old(b,j2) 
#
               Tjj(j1,j)         = VSqjqj(b,j2,j,j1)*t1b_old(b,j2) 
               PUT F1mi_b(j1,j) += Tjj(j1,j) 
#
               DO b2 
#
                  GET VSqjqj(b2,j1,b,j2) 
                  GET Taup_bb(b2,j,b,j2) 
#
                  Tjj(j1,j)         = VSqjqj(b2,j1,b,j2)*Taup_bb(b2,j,b,j2) 
                  Tjj(j1,j)        *= 0.5 
                  PUT F1mi_b(j1,j) += Tjj(j1,j) 
#
               ENDDO b2 
#
            ENDDO j2 
#
      ENDPARDO j1, j, b  
#
      PARDO j1, j, i, a  
#
            GET Vpiqj(a,i,j,j1) 
            GET t1a_old(a,i) 
#
            Tjj(j1,j)         = Vpiqj(a,i,j,j1)*t1a_old(a,i) 
            PUT F1mi_b(j1,j) += Tjj(j1,j) 
#
            DO b 
#
               GET Vpiqj(a,i,b,j1) 
               GET Taup_ab(a,i,b,j)
#
               Tjj(j1,j)         = Taup_ab(a,i,b,j)*Vpiqj(a,i,b,j1) 
               PUT F1mi_b(j1,j) += Tjj(j1,j) 
#
            ENDDO b 
#
      ENDPARDO j1, j, i, a  
#
      ENDPROC F1MIB
#     -------------
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
      PROC F1MI 
#     ----------
         CALL F1MIA 
         CALL F1MIB 
      ENDPROC F1MI 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
#
      PROC GAEA
#     --------- 
#
      PARDO a, a1 
#
            Taa(a,a1) = 0.0 
#
            DO i 
#
               DO i1 
               DO a2 
#
                  GET T2old_aa(a1,i1,a2,i) 
                  GET L2old_aa(i1,a,i,a2) 
#
                  T1aa(a,a1)  = L2old_aa(i1,a,i,a2)*T2old_aa(a1,i1,a2,i)  
                  T1aa(a,a1) *= 0.5 
                  Taa(a,a1)  -= T1aa(a,a1) 
#
               ENDDO a2 
               ENDDO i1 
#
               DO j 
               DO b 
#
                  GET T2old_ab(a1,i,b,j) 
                  GET L2old_ab(i,a,j,b) 
#
                  T1aa(a,a1) = L2old_ab(i,a,j,b)*T2old_ab(a1,i,b,j)  
                  Taa(a,a1) -= T1aa(a,a1) 
#
               ENDDO b 
               ENDDO j 
#
            ENDDO i 
# 
            PUT Gae_a(a,a1) += Taa(a,a1) 
#
      ENDPARDO a, a1   
#
      ENDPROC GAEA
#     ------------ 
#
      PROC GAEB
#     --------- 
#
      PARDO b, b1 
#
            Tbb(b,b1) = 0.0 
#
            DO j 
#
               DO j1 
               DO b2 
#
                  GET T2old_bb(b1,j,b2,j1) 
                  GET L2old_bb(j,b,j1,b2) 
#
                  T1bb(b,b1)  = L2old_bb(j,b,j1,b2)*T2old_bb(b1,j,b2,j1)  
                  T1bb(b,b1) *= 0.5 
                  Tbb(b,b1)  -= T1bb(b,b1) 
#
               ENDDO b2 
               ENDDO j1 
#
               DO i 
               DO a 
#
                  GET T2old_ab(a,i,b1,j) 
                  GET L2old_ab(i,a,j,b) 
#
                  T1bb(b,b1) = L2old_ab(i,a,j,b)*T2old_ab(a,i,b1,j)  
                  Tbb(b,b1) -= T1bb(b,b1) 
#
               ENDDO a 
               ENDDO i 
#
            ENDDO j 
# 
            PUT Gae_b(b,b1) += Tbb(b,b1) 
#
      ENDPARDO b, b1 
#
      ENDPROC GAEB
#     ------------ 
#
      PROC GAE 
#     -------- 
         CALL GAEA 
         CALL GAEB 
      ENDPROC GAE 
#     ----------- 
#
      PROC GMIA 
#     --------- 
#
      PARDO i1, i 
#
            Gmi_a(i1,i) = 0.0 
#
      ENDPARDO i1, i 
      execute sip_barrier Gmi_a 
#
      PARDO a, a1, i, i2  
#
            GET L2old_aa(i,a,i2,a1) 
#
            DO i1  
#
               GET T2old_aa(a,i1,a1,i2) 
#
               Tii(i1,i)        = T2old_aa(a,i1,a1,i2)*L2old_aa(i,a,i2,a1)   
               Tii(i1,i)       *= 0.5  
               PUT Gmi_a(i1,i) += Tii(i1,i) 
#               
            ENDDO i1  
#
      ENDPARDO a, a1, i, i2  
#
      PARDO a, b, i, j  
#
            GET L2old_ab(i,a,j,b) 
#
            DO i1 
#
               GET T2old_ab(a,i1,b,j) 
#
               Tii(i1,i)        = T2old_ab(a,i1,b,j)*L2old_ab(i,a,j,b)   
               PUT Gmi_a(i1,i) += Tii(i1,i) 
#               
            ENDDO i1 
#
      ENDPARDO a, b, i, j  
#
      ENDPROC GMIA 
#     ------------ 
#
      PROC GMIB 
#     --------- 
#
      PARDO j1, j 
#
            Gmi_b(j1,j) = 0.0 
#
      ENDPARDO j1, j 
      execute sip_barrier Gmi_b 
#
      PARDO b, b1, j, j2  
#
            GET L2old_bb(j,b,j2,b1) 
#
            DO j1 
#
               GET T2old_bb(b,j1,b1,j2) 
#
               Tjj(j1,j)        = T2old_bb(b,j1,b1,j2)*L2old_bb(j,b,j2,b1)   
               Tjj(j1,j)       *= 0.5  
               PUT Gmi_b(j1,j) += Tjj(j1,j) 
#               
            ENDDO j1 
#
      ENDPARDO b, b1, j, j2  
#
      PARDO b, a, j, i  
#
            GET L2old_ab(i,a,j,b) 
#
            DO j1 
#
               GET T2old_ab(a,i,b,j1) 
#
               Tjj(j1,j)        = T2old_ab(a,i,b,j1)*L2old_ab(i,a,j,b)   
               PUT Gmi_b(j1,j) += Tjj(j1,j) 
#               
            ENDDO j1 
#
      ENDPARDO b, a, j, i  
#
      ENDPROC GMIB 
#     ------------ 
#
      PROC GMI 
#     -------- 
         CALL GMIA 
         CALL GMIB 
      ENDPROC GMI 
#     ----------- 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
# 
      PROC W1minjAA 
#
      PARDO i2, i, i3, i1 
#
            GET VSpipi(i2,i,i3,i1) 
            Tiiii(i2,i,i3,i1)  = VSpipi(i2,i,i3,i1)  
            TXiiii(i2,i1,i3,i) = 0.0  
#
            DO a 
#
               GET VSpipi(a,i3,i,i2) 
               GET t1a_old(a,i1) 
# 
               T1iiii(i2,i,i3,i1)  = VSpipi(a,i3,i,i2)*t1a_old(a,i1) 
               T2iiii(i2,i1,i3,i)  = T1iiii(i2,i,i3,i1) 
#
               Tiiii(i2,i,i3,i1)  += T1iiii(i2,i,i3,i1) 
               TXiiii(i2,i1,i3,i) -= T2iiii(i2,i1,i3,i) 
#
               DO a1
#
                  GET Tau_aa(a,i,a1,i1)
                  GET VSpipi(a,i2,a1,i3)
#
                  T1iiii(i2,i,i3,i1) = VSpipi(a,i2,a1,i3)*Tau_aa(a,i,a1,i1)
                  T1iiii(i2,i,i3,i1)*= 0.5
#
                  Tiiii(i2,i,i3,i1) += T1iiii(i2,i,i3,i1)
#
               ENDDO a1
#
            ENDDO a 
#
            PUT W1minj_aa(i2,i,i3,i1) += Tiiii(i2,i,i3,i1) 
            PUT W1minj_aa(i2,i1,i3,i) += TXiiii(i2,i1,i3,i) 
#
      ENDPARDO i2, i, i3, i1 
#
      ENDPROC W1minjAA 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
# 
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC W1minjBB 
#
      PARDO j, j1, j2, j3 
#
            GET VSqjqj(j2,j,j3,j1) 
            Tjjjj(j2,j,j3,j1)  = VSqjqj(j2,j,j3,j1) 
            TXjjjj(j2,j1,j3,j) = 0.0  
#
            DO b 
#
               GET VSqjqj(b,j3,j,j2) 
               GET t1b_old(b,j1) 
#
               T1jjjj(j2,j,j3,j1)  = VSqjqj(b,j3,j,j2)*t1b_old(b,j1) 
               T2jjjj(j2,j1,j3,j)  = T1jjjj(j2,j,j3,j1)  
#
               Tjjjj(j2,j,j3,j1)  += T1jjjj(j2,j,j3,j1) 
               TXjjjj(j2,j1,j3,j) -= T2jjjj(j2,j1,j3,j) 
#
               DO b1  
#
                  GET Tau_bb(b,j,b1,j1) 
                  GET VSqjqj(b,j2,b1,j3) 
#
                  T1jjjj(j2,j,j3,j1)  = VSqjqj(b,j2,b1,j3)*Tau_bb(b,j,b1,j1) 
                  T1jjjj(j2,j,j3,j1) *= 0.5 
                  Tjjjj(j2,j,j3,j1)  += T1jjjj(j2,j,j3,j1) 
#
               ENDDO b1 
#
            ENDDO b  
#
            PUT W1minj_bb(j2,j,j3,j1) += Tjjjj(j2,j,j3,j1) 
            PUT W1minj_bb(j2,j1,j3,j) += TXjjjj(j2,j1,j3,j) 
#
      ENDPARDO j, j1, j2, j3 
#
      ENDPROC W1minjBB 
# 
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
# 
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC W1minjAB 
#
      PARDO i, i1, j, j1 
#
            GET Vpiqj(i1,i,j1,j) 
            Tiijj(i1,i,j1,j) = Vpiqj(i1,i,j1,j) 
#
            DO b  
#
               GET Vpiqj(i,i1,b,j1) 
               GET t1b_old(b,j) 

               T1iijj(i1,i,j1,j) = Vpiqj(i,i1,b,j1)*t1b_old(b,j) 
               Tiijj(i1,i,j1,j) += T1iijj(i1,i,j1,j) 
#
            ENDDO b   
#
            DO a 
#
               GET Vpiqj(a,i1,j,j1) 
               GET t1a_old(a,i) 
# 
               T1iijj(i1,i,j1,j) = Vpiqj(a,i1,j,j1)*t1a_old(a,i) 
               Tiijj(i1,i,j1,j) += T1iijj(i1,i,j1,j) 
#
               DO b  
#
                  GET Tau_ab(a,i,b,j)
                  GET Vpiqj(a,i1,b,j1) 
#
                  T1iijj(i1,i,j1,j) = Tau_ab(a,i,b,j)*Vpiqj(a,i1,b,j1) 
                  Tiijj(i1,i,j1,j) += T1iijj(i1,i,j1,j) 
#
                  IF a == 1 
#
                     GET Vpiqj(i,i1,b,j1) 
                     GET t1b_old(b,j) 

                     T1iijj(i1,i,j1,j) = Vpiqj(i,i1,b,j1)*t1b_old(b,j) 
                     Tiijj(i1,i,j1,j) += T1iijj(i1,i,j1,j) 
#
                  ENDIF # a == 1 
#
               ENDDO b 
#
            ENDDO a 
#
            PUT W1minj_ab(i1,i,j1,j) += Tiijj(i1,i,j1,j)  
#
      ENDPARDO i, i1, j, j1 
#
      ENDPROC W1minjAB 
# 
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC W1MINJ 
#
           CALL W1minjAA 
           CALL W1minjAB 
           CALL W1minjBB 
#
      ENDPROC W1MINJ 
# 
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
#
# SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS 
#
# In the procedures W1MEBJAA, W1MEBJBB, W1MEBJAB, and W1MEBJBA these  
# intermediates are formed as temporary arrarys. The contribution to the 
# outout arrays is computed directly from these temporary arrays so 
# that the array is never stored.   
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC W1MEBJAA 
#     -------------
#
      PARDO i1, a1, a, i 
#
            GET Viaai(i1,a1,a,i) 
            GET Vaaii(a,a1,i1,i) 
#
            Tiaai(i1,a1,a,i)  = Vaaii(a,a1,i1,i) 
            Tiaai(i1,a1,a,i) -= Viaai(i1,a1,a,i) 
            Tiaai(i1,a1,a,i) *= -1.0 
#
            DO i2  
#
               GET VSpipi(a1,i1,i,i2) 
               GET t1a_old(a,i2) 
#
               T1iaai(i1,a1,a,i)  = VSpipi(a1,i1,i,i2)*t1a_old(a,i2)  
               Tiaai(i1,a1,a,i)  -= T1iaai(i1,a1,a,i)  
#
            ENDDO i2  
#
            DO a2  
#
               GET VSaaai(a2,a,a1,i1)  
               GET t1a_old(a2,i) 
#
               T1iaai(i1,a1,a,i)  = VSaaai(a2,a,a1,i1)*t1a_old(a2,i) 
               Tiaai(i1,a1,a,i)  += T1iaai(i1,a1,a,i)  
#
               DO i2 
#
                  GET VSpipi(a2,i2,a1,i1) 
                  GET T2old_aa(a2,i,a,i2) 
                  GET t1a_old(a,i2) 
#
                  Taiai(a1,i2,a2,i1)  = VSpipi(a2,i2,a1,i1) 
                  tai(a,i2)           = t1a_old(a,i2) 
                  T1aiai(a2,i,a,i2)   = t1a_old(a2,i)^tai(a,i2) 
                  T1aiai(a2,i,a,i2)  += T2old_aa(a2,i,a,i2) 
                  T1iaai(i1,a1,a,i)   = T1aiai(a2,i,a,i2)*Taiai(a1,i2,a2,i1) 
                  Tiaai(i1,a1,a,i)   -= T1iaai(i1,a1,a,i)  
#
               ENDDO i2  
#
            ENDDO a2  
#
            DO b
            DO j
#
               GET Vpiqj(a1,i1,b,j)
               GET T2old_ab(a,i,b,j)
#
               T1iaai(i1,a1,a,i)  = Vpiqj(a1,i1,b,j)*T2old_ab(a,i,b,j)
               Tiaai(i1,a1,a,i)  += T1iaai(i1,a1,a,i)
#
            ENDDO j
            ENDDO b
#
# Compute contribution to L1a_new  
# ------------------------------- 
#
            GET l1a_old(i,a)
            Tia(i1,a1)          = Tiaai(i1,a1,a,i)*l1a_old(i,a)
            PUT l1a_new(i1,a1) += Tia(i1,a1)
#
# Compute contributions to L2new_aa  
# ---------------------------------  
#
            DO i2
            DO a2
#
               GET L2old_aa(i2,a2,i,a)
#
               T1iaia(i2,a2,i1,a1)        = L2old_aa(i2,a2,i,a)*Tiaai(i1,a1,a,i)
               T2iaia(i2,a1,i1,a2)        = T1iaia(i2,a2,i1,a1)
               T2iaia(i2,a1,i1,a2)       *= -1.0  
               T3iaia(i1,a2,i2,a1)        = T1iaia(i2,a2,i1,a1)
               T3iaia(i1,a2,i2,a1)       *= -1.0  
               T4iaia(i1,a1,i2,a2)        = T1iaia(i2,a2,i1,a1)
#
               PUT L2new_aa(i2,a2,i1,a1) += T1iaia(i2,a2,i1,a1) 
               PUT L2new_aa(i2,a1,i1,a2) += T2iaia(i2,a1,i1,a2) 
               PUT L2new_aa(i1,a2,i2,a1) += T3iaia(i1,a2,i2,a1)  
               PUT L2new_aa(i1,a1,i2,a2) += T4iaia(i1,a1,i2,a2)  
#
            ENDDO a2
            ENDDO i2
#
# Compute contributions to L2new_ab 
# --------------------------------- 
#
            DO j
            DO b
#
               GET L2old_ab(i,a,j,b)
               T1iajb(i1,a1,j,b)      = L2old_ab(i,a,j,b)*Tiaai(i1,a1,a,i)
               PUT L2new_ab(i1,a1,j,b) += T1iajb(i1,a1,j,b)
#
            ENDDO b
            ENDDO j
#
#           PUT W1MEBJ_AA(i1,a1,a,i) += Tiaai(i1,a1,a,i)  
# 
      ENDPARDO i1, a1, a, i 
#
      ENDPROC W1MEBJAA 
#     ----------------
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC W1MEBJBB 
#     ------------
#
      PARDO j1, b1, b, j 
#
            GET Vjbbj(j1,b1,b,j) 
            GET Vbbjj(b,b1,j1,j) 
#
            Tjbbj(j1,b1,b,j)  = Vbbjj(b,b1,j1,j) 
            Tjbbj(j1,b1,b,j) -= Vjbbj(j1,b1,b,j) 
            Tjbbj(j1,b1,b,j) *= -1.0 
#
            DO b2  
#
               GET VSbbbj(b2,b,b1,j1)  
               GET t1b_old(b2,j) 
#
               T1jbbj(j1,b1,b,j)  = VSbbbj(b2,b,b1,j1)*t1b_old(b2,j) 
               Tjbbj(j1,b1,b,j)  += T1jbbj(j1,b1,b,j)  
#
            ENDDO b2  
#
            DO j2 
#
               GET VSqjqj(b1,j1,j,j2) 
               GET t1b_old(b,j2) 
#
               T1jbbj(j1,b1,b,j)  = VSqjqj(b1,j1,j,j2)*t1b_old(b,j2)  
               Tjbbj(j1,b1,b,j)  -= T1jbbj(j1,b1,b,j)  
#
               DO b2 
#
                  GET VSqjqj(b2,j2,b1,j1) 
                  GET T2old_bb(b2,j,b,j2) 
                  GET t1b_old(b2,j) 
#
                  tbj(b2,j)           = t1b_old(b2,j) 
                  T1bjbj(b2,j,b,j2)   = t1b_old(b,j2)^tbj(b2,j) 
                  T1bjbj(b2,j,b,j2)  += t2old_bb(b2,j,b,j2) 
                  T1jbbj(j1,b1,b,j)   = T1bjbj(b2,j,b,j2)*VSqjqj(b2,j2,b1,j1) 
                  Tjbbj(j1,b1,b,j)   -= T1jbbj(j1,b1,b,j)  
#
               ENDDO b2  
#
            ENDDO j2  
#
            DO a
            DO i
#
               GET Vpiqj(a,i,b1,j1)
               GET T2old_ab(a,i,b,j)
#
               T1jbbj(j1,b1,b,j)  = Vpiqj(a,i,b1,j1)*T2old_ab(a,i,b,j)
               Tjbbj(j1,b1,b,j)  += T1jbbj(j1,b1,b,j)
#
            ENDDO i
            ENDDO a
#
# Compute contribution to L1b_new  
# ------------------------------- 
#
            GET l1b_old(j,b)
#
            Tjb(j1,b1)          = Tjbbj(j1,b1,b,j)*l1b_old(j,b)
            PUT l1b_new(j1,b1) += Tjb(j1,b1)
#
# Compute contributions to L2new_bb  
# ---------------------------------  
#
            DO j2
            DO b2
#
               GET L2old_bb(j2,b2,j,b)
#
               T1jbjb(j2,b2,j1,b1)  = L2old_bb(j2,b2,j,b)*Tjbbj(j1,b1,b,j)
               T2jbjb(j2,b1,j1,b2)  = T1jbjb(j2,b2,j1,b1)
               T2jbjb(j2,b1,j1,b2) *= -1.0  
               T3jbjb(j1,b2,j2,b1)  = T1jbjb(j2,b2,j1,b1)
               T3jbjb(j1,b2,j2,b1) *= -1.0  
               T4jbjb(j1,b1,j2,b2)  = T1jbjb(j2,b2,j1,b1)
#
               PUT L2new_bb(j2,b2,j1,b1) += T1jbjb(j2,b2,j1,b1) 
               PUT L2new_bb(j2,b1,j1,b2) += T2jbjb(j2,b1,j1,b2) 
               PUT L2new_bb(j1,b2,j2,b1) += T3jbjb(j1,b2,j2,b1)  
               PUT L2new_bb(j1,b1,j2,b2) += T4jbjb(j1,b1,j2,b2)  
#
            ENDDO b2
            ENDDO j2
#
# Compute contributions to L2new_ab 
# --------------------------------- 
#
            DO i
            DO a
#
               GET L2old_ab(i,a,j,b)
#
               T1iajb(i,a,j1,b1)        = L2old_ab(i,a,j,b)*Tjbbj(j1,b1,b,j)
               PUT L2new_ab(i,a,j1,b1) += T1iajb(i,a,j1,b1)
#
            ENDDO a
            ENDDO i
#
#           PUT W1MEBJ_BB(j1,b1,b,j) += Tjbbj(j1,b1,b,j)  
#
      ENDPARDO j1, b1, b, j 
#
      ENDPROC W1MEBJBB 
#     ---------------
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC W1MEBJAB 
#     -------------
#
      PARDO i, a, b, j 
#
            GET Viabj(i,a,b,j) 
            Tiabj(i,a,b,j) = Viabj(i,a,b,j) 
#
            DO b1 
#
               GET Vbbai(b1,b,a,i) 
               GET t1b_old(b1,j) 
#
               T1iabj(i,a,b,j) = Vbbai(b1,b,a,i)*t1b_old(b1,j) 
               Tiabj(i,a,b,j) += T1iabj(i,a,b,j) 
#
            ENDDO b1 
#
            DO j1 
#
               GET Vpiqj(a,i,j,j1) 
               GET t1b_old(b,j1) 
#
               T1iabj(i,a,b,j) = Vpiqj(a,i,j,j1)*t1b_old(b,j1) 
               Tiabj(i,a,b,j) -= T1iabj(i,a,b,j) 
#
               DO b1 
#
                  GET t2old_bb(b1,j,b,j1)
                  GET Vpiqj(a,i,b1,j1) 
                  GET t1b_old(b1,j) 
# 
                  tbj(b,j1)          = t1b_old(b,j1) 
                  T2bjbj(b1,j,b,j1)  = t1b_old(b1,j)^tbj(b,j1) 
                  T2bjbj(b1,j,b,j1) += T2old_bb(b1,j,b,j1) 
                  T1iabj(i,a,b,j)    = T2bjbj(b1,j,b,j1)*Vpiqj(a,i,b1,j1) 
                  Tiabj(i,a,b,j)    -= T1iabj(i,a,b,j) 
#
               ENDDO b1 
#
            ENDDO j1 
#
            DO a1
            DO i1
#
               GET T2old_ab(a1,i1,b,j) 
               GET VSpipi(a1,i1,a,i)
#
               T1iabj(i,a,b,j) = T2old_ab(a1,i1,b,j)*VSpipi(a1,i1,a,i)
               Tiabj(i,a,b,j) += T1iabj(i,a,b,j)
#
            ENDDO i1
            ENDDO a1
#
# Compute contribution to l1a_new 
# ------------------------------- 
#
            GET l1b_old(j,b)
            T1ia(i,a)                = Tiabj(i,a,b,j)*l1b_old(j,b)
            PUT l1a_new(i,a) += T1ia(i,a) 
#
# Compute contributions to L2new_aa 
# --------------------------------- 
#
            DO i1  
            DO a1  
#
               GET L2old_ab(i1,a1,j,b)
#
               T1iaia(i1,a1,i,a)  = L2old_ab(i1,a1,j,b)*Tiabj(i,a,b,j)
               T2iaia(i1,a,i,a1)  = T1iaia(i1,a1,i,a)
               T2iaia(i1,a,i,a1) *= -1.0  
               T3iaia(i,a1,i1,a)  = T1iaia(i1,a1,i,a)
               T3iaia(i,a1,i1,a) *= -1.0  
               T4iaia(i,a,i1,a1)  = T1iaia(i1,a1,i,a)
#
               PUT L2new_aa(i1,a1,i,a) += T1iaia(i1,a1,i,a) 
               PUT L2new_aa(i1,a,i,a1) += T2iaia(i1,a,i,a1) 
               PUT L2new_aa(i,a1,i1,a) += T3iaia(i,a1,i1,a) 
               PUT L2new_aa(i,a,i1,a1) += T4iaia(i,a,i1,a1) 
#
            ENDDO a1  
            ENDDO i1  
#
# Compute contributions to L2new_ab 
# --------------------------------- 
#
            DO j1
            DO b1
#
               GET L2old_bb(j,b,j1,b1)
#
               T1iajb(i,a,j1,b1)        = L2old_bb(j,b,j1,b1)*Tiabj(i,a,b,j)
               PUT L2new_ab(i,a,j1,b1) += T1iajb(i,a,j1,b1)
#
            ENDDO b1
            ENDDO j1
#
#           PUT W1MEBJ_AB(i,a,b,j) += Tiabj(i,a,b,j)  
#
      ENDPARDO i, a, b, j 
#
      ENDPROC W1MEBJAB 
#     ----------------
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC W1MEBJBA  
#     -------------
#
      PARDO j, b, a, i  
# 
            GET Viabj(i,a,b,j) 
            Tjbai(j,b,a,i) = Viabj(i,a,b,j) 
#
            DO a1  
#
               GET Vaabj(a1,a,b,j) 
               GET t1a_old(a1,i) 
#
               T1jbai(j,b,a,i) = Vaabj(a1,a,b,j)*t1a_old(a1,i) 
               Tjbai(j,b,a,i) += T1jbai(j,b,a,i) 
#
            ENDDO a1 
#
            DO i1 
#
               GET Vpiqj(i,i1,b,j) 
               GET t1a_old(a,i1) 
#
               T1jbai(j,b,a,i) = Vpiqj(i,i1,b,j)*t1a_old(a,i1) 
               Tjbai(j,b,a,i) -= T1jbai(j,b,a,i) 
#
               DO a1 
#
                  GET T2old_aa(a1,i,a,i1)  
                  GET Vpiqj(a1,i1,b,j) 
                  GET t1a_old(a1,i) 
# 
                  tai(a,i1)          = t1a_old(a,i1) 
                  T2aiai(a1,i,a,i1)  = t1a_old(a1,i)^tai(a,i1) 
                  T2aiai(a1,i,a,i1) += T2old_aa(a1,i,a,i1) 
                  T1jbai(j,b,a,i)    = Vpiqj(a1,i1,b,j)*T2aiai(a1,i,a,i1) 
                  Tjbai(j,b,a,i)    -= T1jbai(j,b,a,i) 
#
               ENDDO a1 
#
            ENDDO i1 
#
            DO b1
            DO j1
#
               GET T2old_ab(a,i,b1,j1)
               GET VSqjqj(b1,j1,b,j)
#
               T1jbai(j,b,a,i) = T2old_ab(a,i,b1,j1)*VSqjqj(b1,j1,b,j)
               Tjbai(j,b,a,i) += T1jbai(j,b,a,i)
#
            ENDDO j1
            ENDDO b1
#
# Compute contribution to l1b_new 
# ------------------------------- 
#
            GET l1a_old(i,a)
#
            T1jb(j,b)         = Tjbai(j,b,a,i)*l1a_old(i,a)
            PUT l1b_new(j,b) += T1jb(j,b) 
#
# Compute contributions to L2new_bb 
# --------------------------------- 
#
            DO j1  
            DO b1  
#
               GET L2old_ab(i,a,j1,b1)
#
               T1jbjb(j1,b1,j,b)  = L2old_ab(i,a,j1,b1)*Tjbai(j,b,a,i)
               T2jbjb(j1,b,j,b1)  = T1jbjb(j1,b1,j,b)
               T2jbjb(j1,b,j,b1) *= -1.0  
               T3jbjb(j,b1,j1,b)  = T1jbjb(j1,b1,j,b)
               T3jbjb(j,b1,j1,b) *= -1.0  
               T4jbjb(j,b,j1,b1)  = T1jbjb(j1,b1,j,b)
#
               PUT L2new_bb(j1,b1,j,b) += T1jbjb(j1,b1,j,b) 
               PUT L2new_bb(j1,b,j,b1) += T2jbjb(j1,b,j,b1) 
               PUT L2new_bb(j,b1,j1,b) += T3jbjb(j,b1,j1,b) 
               PUT L2new_bb(j,b,j1,b1) += T4jbjb(j,b,j1,b1) 
#
            ENDDO b1  
            ENDDO j1  
#
# Compute contributions to L2new_ab 
# --------------------------------- 
#
            DO i1
            DO a1
#
               GET L2old_aa(i,a,i1,a1)
#
               T1iajb(i1,a1,j,b)        = L2old_aa(i,a,i1,a1)*Tjbai(j,b,a,i)  
               PUT L2new_ab(i1,a1,j,b) += T1iajb(i1,a1,j,b)
#
            ENDDO a1
            ENDDO i1
#
#           PUT W1MEBJ_BA(j,b,a,i) += Tjbai(j,b,a,i)  
#
      ENDPARDO j, b, a, i 
#
      ENDPROC W1MEBJBA  
#     ---------------
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
# Compute contributions from 'Wmjbe'. This needs to be checked 
#
      PROC W1MJBEab
#     -------------
#
      PARDO i1, b1, b, i 
#
            GET Vbbii(b,b1,i1,i) 
            Tiiqq(i1,i,b,b1) = Vbbii(b,b1,i1,i) 
#
            DO a1 
#
               GET Vbbai(b1,b,a1,i1) 
               GET t1a_old(a1,i) 
#
               T1iiqq(i1,i,b,b1) = Vbbai(b1,b,a1,i1)*t1a_old(a1,i)
               Tiiqq(i1,i,b,b1) += T1iiqq(i1,i,b,b1) 
#
            ENDDO a1  
#
            DO j1 
#
               GET Vpiqj(i,i1,b1,j1) 
               GET t1b_old(b,j1) 
# 
               T1iiqq(i1,i,b,b1) = Vpiqj(i,i1,b1,j1)*t1b_old(b,j1) 
               Tiiqq(i1,i,b,b1) -= T1iiqq(i1,i,b,b1) 
#
               DO a1 
#
                  GET T2old_ab(a1,i,b,j1) 
                  GET Vpiqj(a1,i1,b1,j1) 
                  GET t1a_old(a1,i) 
#
                  Taibj(a1,i,b,j1)   = t1a_old(a1,i)^t1b_old(b,j1) 
                  T1aibj(a1,i,b,j1)  = T2old_ab(a1,i,b,j1)  
                  T1aibj(a1,i,b,j1) += Taibj(a1,i,b,j1)  
                  T1iiqq(i1,i,b,b1)  = T1aibj(a1,i,b,j1)*Vpiqj(a1,i1,b1,j1) 
                  Tiiqq(i1,i,b,b1)  -= T1iiqq(i1,i,b,b1) 
#
               ENDDO a1 
#
            ENDDO j1 
#
            Tiiqq(i1,i,b,b1) *= -1.0 
#
# Compute the contribution to L2new_ab 
# ------------------------------------ 
#
            DO j 
            DO a
#
               GET L2old_ab(i,a,j,b)
#
               T1iajb(i1,a,j,b1)        = Tiiqq(i1,i,b,b1)*L2old_ab(i,a,j,b)
               PUT L2new_ab(i1,a,j,b1) += T1iajb(i1,a,j,b1) # VFL
#
            ENDDO a
            ENDDO j
#
#           PUT W1mjbe_ab(i1,i,b,b1) += Tiiqq(i1,i,b,b1) 
#
      ENDPARDO i1, b1, b, i 
#
      ENDPROC W1MJBEab
#     ---------------
#
      PROC W1MJBEba
#     -------------
#
      PARDO j1, a1, a, j 
#
            GET Vaajj(a,a1,j1,j) 
            Tjjpp(j1,j,a,a1) = Vaajj(a,a1,j1,j) 
#
            DO b1 
#
               GET Vaabj(a1,a,b1,j1) 
               GET t1b_old(b1,j) 
#
               T1jjpp(j1,j,a,a1) = Vaabj(a1,a,b1,j1)*t1b_old(b1,j)
               Tjjpp(j1,j,a,a1) += T1jjpp(j1,j,a,a1) 
#
            ENDDO b1 
#
            DO i1 
#
               GET Vpiqj(a1,i1,j,j1) 
               GET t1a_old(a,i1) 
#
               T1jjpp(j1,j,a,a1) = Vpiqj(a1,i1,j,j1)*t1a_old(a,i1) 
               Tjjpp(j1,j,a,a1) -= T1jjpp(j1,j,a,a1) 
#
               DO b1 
#
                  GET T2old_ab(a,i1,b1,j) 
                  GET Vpiqj(a1,i1,b1,j1) 
                  GET t1b_old(b1,j) 
# 
                  Taibj(a,i1,b1,j)   = t1b_old(b1,j)^t1a_old(a,i1) 
                  T1aibj(a,i1,b1,j)  = T2old_ab(a,i1,b1,j)  
                  T1aibj(a,i1,b1,j) += Taibj(a,i1,b1,j)  
                  T1jjpp(j1,j,a,a1) = T1aibj(a,i1,b1,j)*Vpiqj(a1,i1,b1,j1) 
                  Tjjpp(j1,j,a,a1) -= T1jjpp(j1,j,a,a1) 
#
               ENDDO b1 
#
            ENDDO i1 
#
            Tjjpp(j1,j,a,a1) *= -1.0 
#
# Compute the contribution to L2new_ab 
# ------------------------------------ 
#
            DO i
            DO b
#
               GET L2old_ab(i,a,j,b)
#
               T1iajb(i,a1,j1,b)        = L2old_ab(i,a,j,b)*Tjjpp(j1,j,a,a1)
               PUT L2new_ab(i,a1,j1,b) += T1iajb(i,a1,j1,b)  # VFL
#
            ENDDO b
            ENDDO i
#
#           PUT W1mjbe_ba(j1,j,a,a1) += Tjjpp(j1,j,a,a1) 
#
      ENDPARDO j1, a1, a, j 
#
      ENDPROC W1MJBEba
#     ----------------
#
# SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS 
#
      PROC W1MEBJ 
# 
           CALL W1MEBJAA
           CALL W1MEBJBB
           CALL W1MEBJAB
           CALL W1MEBJBA
           CALL W1MJBEab
           CALL W1MJBEba 
#
      ENDPROC W1MEBJ 
#
# SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS 
#
      PROC W2MEBJAA 
#     ------------- 
#
      PARDO i1, a1, a, i 
#
            GET Viaai(i1,a1,a,i) # +  
            GET Vaaii(a,a1,i1,i) # - 
            Tiaai(i1,a1,a,i)  = Vaaii(a,a1,i1,i)  
            Tiaai(i1,a1,a,i) -= Viaai(i1,a1,a,i)  
            Tiaai(i1,a1,a,i) *= -1.0  
#
            DO i2 
            DO a2 
#
               GET T2old_aa(a,i2,a2,i) 
               GET VSpipi(a1,i1,a2,i2) # + 
#
               T1iaai(i1,a1,a,i)   = VSpipi(a1,i1,a2,i2)*T2old_aa(a,i2,a2,i) 
               Tiaai(i1,a1,a,i)   -= T1iaai(i1,a1,a,i) 
#
            ENDDO a2 
            ENDDO i2 
#
            DO j 
            DO b 
#
               GET T2old_ab(a,i,b,j) 
               GET Vpiqj(a1,i1,b,j) # + 
#
               T1iaai(i1,a1,a,i) = Vpiqj(a1,i1,b,j)*T2old_ab(a,i,b,j) 
               Tiaai(i1,a1,a,i) += T1iaai(i1,a1,a,i) 
#
            ENDDO b 
            ENDDO j 
#
            PUT W2mebj_aa(i1,a1,a,i) += Tiaai(i1,a1,a,i) 
#
      ENDPARDO i1, a1, a, i 
#
      ENDPROC W2MEBJAA 
#     ---------------- 
#
      PROC W2MEBJAB 
#     ------------- 
#
      PARDO i, a, b, j 
#
            GET Viabj(i,a,b,j) 
            Tiabj(i,a,b,j) = Viabj(i,a,b,j) 
#
            DO a1 
            DO i1 
#
               GET T2old_ab(a1,i1,b,j) 
               GET VSpipi(a,i,a1,i1) # +  
#
               T1iabj(i,a,b,j)   = VSpipi(a,i,a1,i1)*T2old_ab(a1,i1,b,j) 
               Tiabj(i,a,b,j)   += T1iabj(i,a,b,j) 
#
            ENDDO i1 
            ENDDO a1 
#
            DO b1 
            DO j1 
#
               GET T2old_bb(b1,j1,b,j) 
               GET Vpiqj(a,i,b1,j1) # +  
#
               T1iabj(i,a,b,j) = Vpiqj(a,i,b1,j1)*T2old_bb(b1,j1,b,j) 
               Tiabj(i,a,b,j) += T1iabj(i,a,b,j) 
#
            ENDDO j1 
            ENDDO b1 
#
            PUT W2mebj_ab(i,a,b,j) += Tiabj(i,a,b,j)  
#
      ENDPARDO i, a, b, j 
#
      ENDPROC W2MEBJAB 
#     ---------------- 
#
      PROC W2MEBJBA 
#     ------------- 
#
      PARDO j, b, a, i 
#
            GET Viabj(i,a,b,j) 
            Tjbai(j,b,a,i) = Viabj(i,a,b,j) 
#
            DO b1 
            DO j1 
#
               GET T2old_ab(a,i,b1,j1) 
               GET VSqjqj(b,j,b1,j1) # +  
#
               T1jbai(j,b,a,i) = VSqjqj(b,j,b1,j1)*T2old_ab(a,i,b1,j1) 
               Tjbai(j,b,a,i) += T1jbai(j,b,a,i) 
#
            ENDDO j1 
            ENDDO b1 
#
            DO a1 
            DO i1 
#
               GET T2old_aa(a1,i1,a,i) 
               GET Vpiqj(a1,i1,b,j) # +  
#
               T1jbai(j,b,a,i) = Vpiqj(a1,i1,b,j)*T2old_aa(a1,i1,a,i) 
               Tjbai(j,b,a,i) += T1jbai(j,b,a,i) 
#
            ENDDO i1 
            ENDDO a1 
#
            PUT W2mebj_ba(j,b,a,i) += Tjbai(j,b,a,i)  
#
      ENDPARDO j, b, a, i 
#
      ENDPROC W2MEBJBA 
#     ---------------- 
#
      PROC W2MEBJBB 
#     ------------- 
#
      PARDO j1, b1, b, j 
#
            GET Vjbbj(j1,b1,b,j) # +  
            GET Vbbjj(b,b1,j1,j) # - 
            Tjbbj(j1,b1,b,j)  = Vbbjj(b,b1,j1,j)  
            Tjbbj(j1,b1,b,j) -= Vjbbj(j1,b1,b,j)  
            Tjbbj(j1,b1,b,j) *= -1.0  
#
            DO j2 
            DO b2 
#
               GET T2old_bb(b,j2,b2,j) 
               GET VSqjqj(b1,j1,b2,j2) # + 
#
               T1jbbj(j1,b1,b,j) = VSqjqj(b1,j1,b2,j2)*T2old_bb(b,j2,b2,j) 
               Tjbbj(j1,b1,b,j) -= T1jbbj(j1,b1,b,j) 
#
            ENDDO b2 
            ENDDO j2 
#
            DO i 
            DO a 
#
               GET T2old_ab(a,i,b,j) 
               GET Vpiqj(a,i,b1,j1) # + 
#
               T1jbbj(j1,b1,b,j) = Vpiqj(a,i,b1,j1)*T2old_ab(a,i,b,j) 
               Tjbbj(j1,b1,b,j) += T1jbbj(j1,b1,b,j) 
#
            ENDDO a 
            ENDDO i 
#
            PUT W2mebj_bb(j1,b1,b,j) += Tjbbj(j1,b1,b,j) 
#
      ENDPARDO j1, b1, b, j 
#
      ENDPROC W2MEBJBB 
#     ---------------- 
#
      PROC W2MJBEAB
#     ------------- 
#
      PARDO i, i1, b, b1 
#
            GET Vbbii(b,b1,i,i1) 
            Tiibb(i,i1,b,b1)  = Vbbii(b,b1,i,i1) 
            Tiibb(i,i1,b,b1) *= -1.0 
#
            DO a  
            DO j  
#
               GET T2old_ab(a,i1,b,j) 
               GET Vpiqj(a,i,b1,j) 
#
               T1iibb(i,i1,b,b1) = T2old_ab(a,i1,b,j)*Vpiqj(a,i,b1,j) 
               Tiibb(i,i1,b,b1) += T1iibb(i,i1,b,b1) 
#
            ENDDO j 
            ENDDO a 
#
            PUT W2mjbe_ab(i,i1,b,b1) += Tiibb(i,i1,b,b1) 
#
      ENDPARDO i, i1, b, b1 
#
      ENDPROC W2MJBEAB
#     ---------------- 
#
#
      PROC W2MJBEBA
#     ------------- 
#
      PARDO j1, j, a, a1 
#
            GET Vaajj(a,a1,j1,j) 
            Tjjaa(j1,j,a,a1)  = Vaajj(a,a1,j1,j) 
            Tjjaa(j1,j,a,a1) *= -1.0 
#
            DO b  
            DO i  
#
               GET T2old_ab(a,i,b,j) 
               GET Vpiqj(a1,i,b,j1) 
#
               T1jjaa(j1,j,a,a1) = T2old_ab(a,i,b,j)*Vpiqj(a1,i,b,j1) 
               Tjjaa(j1,j,a,a1) += T1jjaa(j1,j,a,a1) 
#
            ENDDO i 
            ENDDO b 
#
            PUT W2mjbe_ba(j1,j,a,a1) += Tjjaa(j1,j,a,a1) 
#
      ENDPARDO j1, j, a, a1 
#
      ENDPROC W2MJBEBA
#     ---------------- 
#
      PROC W2MEBJ 
#     ----------- 
           CALL W2MEBJAA
           CALL W2MEBJAB
           CALL W2MEBJBA
           CALL W2MEBJBB
#
           CALL W2MJBEAB 
           CALL W2MJBEBA  
      ENDPROC W2MEBJ 
#     -------------- 
#
      PROC W1IMENAA 
#     ------------- 
#
      PARDO i, i1, a, i2 
#
            GET VSpipi(i,i1,a,i2) # + 
            Tiiai(i,i1,a,i2)  = VSpipi(i,i1,a,i2) 
            TSiiai(i,i2,a,i1) = 0.0  
#
            DO i3 
#
               GET t1a_old(a,i3) 
               GET W1minj_aa(i,i1,i3,i2) 
#   
               T1iiai(i,i1,a,i2) = W1minj_aa(i,i1,i3,i2)*t1a_old(a,i3) 
               Tiiai(i,i1,a,i2) -= T1iiai(i,i1,a,i2) 
#
            ENDDO i3 
#
            DO a1 
#
               GET Fme_a(i,a1) 
               GET T2old_aa(a,i1,a1,i2) 
               GET t1a_old(a1,i1) 
               GET W2mebj_aa(i,a1,a,i2) 
#
               T1iiai(i,i1,a,i2)  = T2old_aa(a,i1,a1,i2)*Fme_a(i,a1) 
               Tiiai(i,i1,a,i2)  -= T1iiai(i,i1,a,i2) 
#
               T1iiai(i,i1,a,i2)  = W2mebj_aa(i,a1,a,i2)*t1a_old(a1,i1)  
               T2iiai(i,i2,a,i1)  = T1iiai(i,i1,a,i2) 
#
               Tiiai(i,i1,a,i2)  += T1iiai(i,i1,a,i2) 
               TSiiai(i,i2,a,i1) -= T2iiai(i,i2,a,i1) 
#
               DO a2 
#
                  GET Tau_aa(a1,i1,a2,i2) 
                  GET VSaaai(a2,a,a1,i) # + 
#
                  T1iiai(i,i1,a,i2)  = Tau_aa(a1,i1,a2,i2)*VSaaai(a2,a,a1,i)
                  T1iiai(i,i1,a,i2) *= 0.5  
                  Tiiai(i,i1,a,i2)  += T1iiai(i,i1,a,i2) 
#
               ENDDO a2 
#
               DO i3 
#
                  GET T2old_aa(a,i2,a1,i3) 
                  GET VSpipi(i1,i,a1,i3) # + 
#
                  T1iiai(i,i1,a,i2)   = VSpipi(i1,i,a1,i3)*T2old_aa(a,i2,a1,i3) 
                  T2iiai(i,i2,a,i1)   = T1iiai(i,i1,a,i2) 
                  Tiiai(i,i1,a,i2)   += T1iiai(i,i1,a,i2) 
                  TSiiai(i,i2,a,i1)  -= T2iiai(i,i2,a,i1) 
#
               ENDDO i3 
#
            ENDDO a1 
#
            DO b 
            DO j 
#
               GET T2old_ab(a,i2,b,j) 
               GET Vpiqj(i1,i,b,j) # + 
#
               T1iiai(i,i1,a,i2)  = Vpiqj(i1,i,b,j)*T2old_ab(a,i2,b,j) 
               Tiiai(i,i1,a,i2)  += T1iiai(i,i1,a,i2) 
#
               T2iiai(i,i2,a,i1)  = T1iiai(i,i1,a,i2) 
               TSiiai(i,i2,a,i1) -= T2iiai(i,i2,a,i1) 
#
            ENDDO j 
            ENDDO b 
#
            PUT W1imen_aa(i,i1,a,i2) += Tiiai(i,i1,a,i2) 
            PUT W1imen_aa(i,i2,a,i1) += TSiiai(i,i2,a,i1) 
#
      ENDPARDO i, i1, a, i2 
#
      ENDPROC W1IMENAA 
#     ---------------- 
#
      PROC W1IMENAB 
#     ------------- 
#
      PARDO i, i1, b, j 
#
            GET Vpiqj(i,i1,b,j) 
            Tiibj(i,i1,b,j) = Vpiqj(i,i1,b,j)  
#
            DO a 
#
               GET Fme_a(i,a) 
               GET T2old_ab(a,i1,b,j) 
               GET t1a_old(a,i1) 
               GET W2mebj_ab(i,a,b,j)  
#
               T1iibj(i,i1,b,j) = T2old_ab(a,i1,b,j)*Fme_a(i,a) 
               Tiibj(i,i1,b,j) += T1iibj(i,i1,b,j) 
#
               T1iibj(i,i1,b,j) = W2mebj_ab(i,a,b,j)*t1a_old(a,i1) 
               Tiibj(i,i1,b,j) += T1iibj(i,i1,b,j) 
#
               DO b1 
#
                  GET Tau_ab(a,i1,b1,j) 
                  GET Vbbai(b1,b,a,i) 
#
                  T1iibj(i,i1,b,j) = Vbbai(b1,b,a,i)*Tau_ab(a,i1,b1,j) 
                  Tiibj(i,i1,b,j) += T1iibj(i,i1,b,j) 
#
               ENDDO b1 
#
               DO i2 
#
                  GET T2old_ab(a,i2,b,j) 
                  GET VSpipi(i1,i,a,i2) # + 
#
                  T1iibj(i,i1,b,j) = VSpipi(i1,i,a,i2)*T2old_ab(a,i2,b,j)  
                  Tiibj(i,i1,b,j) += T1iibj(i,i1,b,j) 
#
               ENDDO i2 
#
               DO j1 
#
                  GET T2old_ab(a,i1,b,j1) 
                  GET Vpiqj(a,i,j,j1) # + 
#
                  T1iibj(i,i1,b,j) = Vpiqj(a,i,j,j1)*T2old_ab(a,i1,b,j1)  
                  Tiibj(i,i1,b,j) -= T1iibj(i,i1,b,j) 
#
               ENDDO j1 
#
            ENDDO a 
#
            DO j1 
#
               GET t1b_old(b,j1) 
               GET W1minj_ab(i,i1,j1,j) 
#
               T1iibj(i,i1,b,j) = W1minj_ab(i,i1,j1,j)*t1b_old(b,j1)  
               Tiibj(i,i1,b,j) -= T1iibj(i,i1,b,j) 
#
            ENDDO j1 
#
            DO b1 
#
               GET t1b_old(b1,j) 
               GET W2mjbe_ab(i,i1,b,b1)  
#
               T1iibj(i,i1,b,j) = W2mjbe_ab(i,i1,b,b1)*t1b_old(b1,j)  
               Tiibj(i,i1,b,j) -= T1iibj(i,i1,b,j) 
#
               DO j2 
#
                  GET T2old_bb(b1,j2,b,j) 
                  GET Vpiqj(i1,i,b1,j2) # + 
#
                  T1iibj(i,i1,b,j) = Vpiqj(i1,i,b1,j2)*T2old_bb(b1,j2,b,j)  
                  Tiibj(i,i1,b,j) += T1iibj(i,i1,b,j) 
#
               ENDDO j2 
#
            ENDDO b1 
#
            PUT W1imen_ab(i,i1,b,j) += Tiibj(i,i1,b,j) 
#
      ENDPARDO i, i1, b, j 
#
      ENDPROC W1IMENAB 
#     ---------------- 
#
      PROC W1IMENBA 
#     ------------- 
#
      PARDO j, j1, a, i 
#
            GET Vpiqj(a,i,j,j1) 
            Tjjai(j,j1,a,i) = Vpiqj(a,i,j,j1)  
#
            DO b 
#
               GET Fme_b(j,b) 
               GET T2old_ab(a,i,b,j1) 
               GET t1b_old(b,j1) 
               GET W2mebj_ba(j,b,a,i)  
#
               T1jjai(j,j1,a,i) = T2old_ab(a,i,b,j1)*Fme_b(j,b) 
               Tjjai(j,j1,a,i) += T1jjai(j,j1,a,i) 
#
               T1jjai(j,j1,a,i) = W2mebj_ba(j,b,a,i)*t1b_old(b,j1) 
               Tjjai(j,j1,a,i) += T1jjai(j,j1,a,i) 
#
               DO a1 
#
                  GET Tau_ab(a1,i,b,j1) 
                  GET Vaabj(a1,a,b,j) 
#
                  T1jjai(j,j1,a,i) = Vaabj(a1,a,b,j)*Tau_ab(a1,i,b,j1) 
                  Tjjai(j,j1,a,i) += T1jjai(j,j1,a,i) 
#
               ENDDO a1 
#
               DO j2 
#
                  GET T2old_ab(a,i,b,j2) 
                  GET VSqjqj(j1,j,b,j2) # + 
#
                  T1jjai(j,j1,a,i) = VSqjqj(j1,j,b,j2)*T2old_ab(a,i,b,j2)  
                  Tjjai(j,j1,a,i) += T1jjai(j,j1,a,i) 
#
               ENDDO j2 
#
               DO i1 
#
                  GET T2old_ab(a,i1,b,j1) 
                  GET Vpiqj(i,i1,b,j) # + 
#
                  T1jjai(j,j1,a,i) = T2old_ab(a,i1,b,j1)*Vpiqj(i,i1,b,j)  
                  Tjjai(j,j1,a,i) -= T1jjai(j,j1,a,i) 
#
               ENDDO i1 
#
            ENDDO b 
#
            DO i1 
#
               GET t1a_old(a,i1) 
               GET W1minj_ab(i1,i,j,j1) 
#
               T1jjai(j,j1,a,i) = W1minj_ab(i1,i,j,j1)*t1a_old(a,i1)  
               Tjjai(j,j1,a,i) -= T1jjai(j,j1,a,i) 
#
            ENDDO i1 
#
            DO a1  
#
               GET t1a_old(a1,i) 
               GET W2mjbe_ba(j,j1,a,a1)  
#
               T1jjai(j,j1,a,i) = W2mjbe_ba(j,j1,a,a1)*t1a_old(a1,i)  
               Tjjai(j,j1,a,i) -= T1jjai(j,j1,a,i) 
#
               DO i1 
#
                  GET T2old_aa(a1,i1,a,i) 
                  GET Vpiqj(a1,i1,j1,j) # + 
#
                  T1jjai(j,j1,a,i) = Vpiqj(a1,i1,j1,j)*T2old_aa(a1,i1,a,i)  
                  Tjjai(j,j1,a,i) += T1jjai(j,j1,a,i) 
#
               ENDDO i1 
#
            ENDDO a1 
#
            PUT W1imen_ba(j,j1,a,i) += Tjjai(j,j1,a,i) 
#
      ENDPARDO j, j1, a, i 
#
      ENDPROC W1IMENBA 
#     ---------------- 
#
      PROC W1IMENBB 
#     ------------- 
#
      PARDO j, j1, b, j2 
#
            GET VSqjqj(j,j1,b,j2) # + 
            Tjjbj(j,j1,b,j2)  = VSqjqj(j,j1,b,j2) 
            TSjjbj(j,j2,b,j1) = 0.0  
#
            DO j3  
#
               GET t1b_old(b,j3) 
#              GET W1imjn_bb(j,j1,j3,j2) 
               GET W1minj_bb(j,j1,j3,j2) 
#   
               T1jjbj(j,j1,b,j2) = W1minj_bb(j,j1,j3,j2)*t1b_old(b,j3) 
               Tjjbj(j,j1,b,j2) -= T1jjbj(j,j1,b,j2) 
#
            ENDDO j3 
#
            DO b1 
#
               GET Fme_b(j,b1) 
               GET T2old_bb(b,j1,b1,j2) 
               GET t1b_old(b1,j1) 
               GET W2mebj_bb(j,b1,b,j2) 
#
               T1jjbj(j,j1,b,j2)  = T2old_bb(b,j1,b1,j2)*Fme_b(j,b1) 
               Tjjbj(j,j1,b,j2)  -= T1jjbj(j,j1,b,j2) 
#
               T1jjbj(j,j1,b,j2)  = W2mebj_bb(j,b1,b,j2)*t1b_old(b1,j1)  
               T2jjbj(j,j2,b,j1)  = T1jjbj(j,j1,b,j2) 
#
               Tjjbj(j,j1,b,j2)  += T1jjbj(j,j1,b,j2) 
               TSjjbj(j,j2,b,j1) -= T2jjbj(j,j2,b,j1) 
#
               DO b2 
#
                  GET Tau_bb(b1,j1,b2,j2) 
                  GET VSbbbj(b2,b,b1,j) # + 
#
                  T1jjbj(j,j1,b,j2)  = Tau_bb(b1,j1,b2,j2)*VSbbbj(b2,b,b1,j)
                  T1jjbj(j,j1,b,j2) *= 0.5  
                  Tjjbj(j,j1,b,j2)  += T1jjbj(j,j1,b,j2) 
#
               ENDDO b2 
#
               DO j3 
#
                  GET T2old_bb(b,j2,b1,j3) 
                  GET VSqjqj(j1,j,b1,j3) # + 
#
                  T1jjbj(j,j1,b,j2)  = VSqjqj(j1,j,b1,j3)*T2old_bb(b,j2,b1,j3) 
                  Tjjbj(j,j1,b,j2)  += T1jjbj(j,j1,b,j2) 
#
                  T2jjbj(j,j2,b,j1)  = T1jjbj(j,j1,b,j2) 
                  TSjjbj(j,j2,b,j1) -= T2jjbj(j,j2,b,j1) 
#
               ENDDO j3 
#
            ENDDO b1 
#
            DO a 
            DO i 
#
               GET T2old_ab(a,i,b,j2) 
               GET Vpiqj(a,i,j1,j) # + 
#
               T1jjbj(j,j1,b,j2)  = Vpiqj(a,i,j1,j)*T2old_ab(a,i,b,j2) 
               T2jjbj(j,j2,b,j1)  = T1jjbj(j,j1,b,j2) 
#
               Tjjbj(j,j1,b,j2)   += T1jjbj(j,j1,b,j2) 
               TSjjbj(j,j2,b,j1)  -= T2jjbj(j,j2,b,j1) 
#
            ENDDO i 
            ENDDO a 
#
            PUT W1imen_bb(j,j1,b,j2) += Tjjbj(j,j1,b,j2) 
            PUT W1imen_bb(j,j2,b,j1) += TSjjbj(j,j2,b,j1) 
#
      ENDPARDO j, j1, b, j2 
#
      ENDPROC W1IMENBB 
#     ---------------- 
#
      PROC W1IMEN 
#     ----------- 
#
         CALL W1IMENAA
         CALL W1IMENAB 
         CALL W1IMENBA 
         CALL W1IMENBB
#
      ENDPROC W1IMEN 
#     -------------- 
#
      PROC W1EAFMAA 
#     ------------- 
#
      PARDO a1, a, a2, i 
#
# Compute (a1,a,a1,i) and (a2,a,a1,i) block of intermediate 
# --------------------------------------------------------- 
#
            GET VSaaai(a1,a,a2,i) # +  
            Tpppp(a1,a,a2,i)  = VSaaai(a1,a,a2,i)  
            TSpppp(a2,a,a1,i) = 0.0  
#
            DO i1 
#
               GET Fme_a(i1,a) 
               GET T2old_aa(a1,i,a2,i1) 
               GET t1a_old(a1,i1) 
               GET W2mebj_aa(i1,a,a2,i) 
#
               T1pppp(a1,a,a2,i)  = T2old_aa(a1,i,a2,i1)*Fme_a(i1,a)  
               Tpppp(a1,a,a2,i)  += T1pppp(a1,a,a2,i) 
#
               T1pppp(a1,a,a2,i)  = W2mebj_aa(i1,a,a2,i)*t1a_old(a1,i1)  
               T2pppp(a2,a,a1,i)  = T1pppp(a1,a,a2,i)  
# 
               Tpppp(a1,a,a2,i)  -= T1pppp(a1,a,a2,i) 
               TSpppp(a2,a,a1,i) += T2pppp(a2,a,a1,i) 
# 
               DO i2 
#
                  GET Tau_aa(a1,i1,a2,i2) 
                  GET VSpipi(a,i1,i,i2) # +  
#
                  T1pppp(a1,a,a2,i)  = Tau_aa(a1,i1,a2,i2)*VSpipi(a,i1,i,i2)  
                  T1pppp(a1,a,a2,i) *= 0.5  
                  Tpppp(a1,a,a2,i)  += T1pppp(a1,a,a2,i) 
#
               ENDDO i2 
#
               DO a3 
#
                  GET T2old_aa(a2,i,a3,i1) 
                  GET VSaaai(a,a1,a3,i1) # +  
#
                  T1pppp(a1,a,a2,i)  = VSaaai(a,a1,a3,i1)*T2old_aa(a2,i,a3,i1)  
                  T2pppp(a2,a,a1,i)  = T1pppp(a1,a,a2,i)  
#
                   Tpppp(a1,a,a2,i) += T1pppp(a1,a,a2,i) 
                  TSpppp(a2,a,a1,i) -= T2pppp(a2,a,a1,i) 
#
               ENDDO a3 
#
            ENDDO i1 
#
            DO j 
            DO b 
#
               GET T2old_ab(a2,i,b,j) 
               GET Vaabj(a,a1,b,j) # +  
#
               T1pppp(a1,a,a2,i)  = Vaabj(a,a1,b,j)*T2old_ab(a2,i,b,j)  
               T2pppp(a2,a,a1,i)  = T1pppp(a1,a,a2,i)  
#
                Tpppp(a1,a,a2,i) += T1pppp(a1,a,a2,i) 
               TSpppp(a2,a,a1,i) -= T2pppp(a2,a,a1,i) 
#
            ENDDO b 
            ENDDO j 
#
# Compute contribution to l1a_new 
# ------------------------------- 
#
            DO i1 
#
               GET L2old_aa(i1,a1,i,a2) 
               GET L2old_aa(i1,a2,i,a1) 
#
               T1ia(i1,a)         = L2old_aa(i1,a1,i,a2)*Tpppp(a1,a,a2,i)
               Tia(i1,a)          = L2old_aa(i1,a2,i,a1)*TSpppp(a2,a,a1,i)
               T1ia(i1,a)        += Tia(i1,a)  
               T1ia(i1,a)        *= 0.5
               PUT l1a_new(i1,a) += T1ia(i1,a) 
#
            ENDDO i1 
#
#           PUT W1eafm_aa(a1,a,a2,i) +=  Tpppp(a1,a,a2,i) 
#           PUT W1eafm_aa(a2,a,a1,i) += TSpppp(a2,a,a1,i) 
#
      ENDPARDO a1, a, a2, i 
#
      ENDPROC W1EAFMAA 
#     ---------------- 
#
      PROC W1EAFMAB 
#     ------------- 
#
# Compute (a1,a,b,j) block of intermediate 
# ---------------------------------------- 
#
      PARDO a1, j, b, a 
#
            GET Vaabj(a1,a,b,j) 
            Tppqq(a1,a,b,j)  = Vaabj(a1,a,b,j) 
#
            DO i 
#
               GET Fme_a(i,a) 
               GET T2old_ab(a1,i,b,j) 
               GET t1a_old(a1,i) 
               GET W2mebj_ab(i,a,b,j) 
#
               T1ppqq(a1,a,b,j) = T2old_ab(a1,i,b,j)*Fme_a(i,a)
               Tppqq(a1,a,b,j) -= T1ppqq(a1,a,b,j)
#
               T1ppqq(a1,a,b,j) = W2mebj_ab(i,a,b,j)*t1a_old(a1,i) 
               Tppqq(a1,a,b,j) -= T1ppqq(a1,a,b,j)
#
               DO a2 
#
                  GET T2old_ab(a2,i,b,j) 
                  GET VSaaai(a,a1,a2,i) 
#
                   T1ppqq(a1,a,b,j) = VSaaai(a,a1,a2,i)*T2old_ab(a2,i,b,j) 
                  Tppqq(a1,a,b,j)  += T1ppqq(a1,a,b,j)
#
               ENDDO a2 
#
               DO b1  
#
                  GET T2old_ab(a1,i,b1,j) 
                  GET Vbbai(b1,b,a,i) 
#
                 T1ppqq(a1,a,b,j)  = Vbbai(b1,b,a,i)*T2old_ab(a1,i,b1,j)  
                  Tppqq(a1,a,b,j) -= T1ppqq(a1,a,b,j)
#
               ENDDO b1 
#
            ENDDO i 
#
            DO j1 
#
               GET t1b_old(b,j1) 
               GET W2mjbe_ba(j1,j,a1,a) 
#
               T1ppqq(a1,a,b,j) = W2mjbe_ba(j1,j,a1,a)*t1b_old(b,j1) 
               Tppqq(a1,a,b,j) += T1ppqq(a1,a,b,j)
#
               DO i 
#
                  GET Tau_ab(a1,i,b,j1) 
                  GET Vpiqj(a,i,j,j1) 
#   
                  T1ppqq(a1,a,b,j) = Tau_ab(a1,i,b,j1)*Vpiqj(a,i,j,j1) 
                  Tppqq(a1,a,b,j) += T1ppqq(a1,a,b,j)
#
               ENDDO i 
#
               DO b1 
#
                  GET T2old_bb(b1,j1,b,j) 
                  GET Vaabj(a,a1,b1,j1) 
#
                 T1ppqq(a1,a,b,j)  = Vaabj(a,a1,b1,j1)*T2old_bb(b1,j1,b,j)  
                  Tppqq(a1,a,b,j) += T1ppqq(a1,a,b,j)
#
               ENDDO b1 
#
            ENDDO j1 
#
# Compute contribution to l1a_new 
# ------------------------------- 
#
            DO i
#
               GET L2old_ab(i,a1,j,b) # VFL
#
               T1ia(i,a)         = L2old_ab(i,a1,j,b)*Tppqq(a1,a,b,j)
               PUT l1a_new(i,a) += T1ia(i,a)
#
            ENDDO i
#
#           PUT W1eafm_ab(a1,a,b,j) += Tppqq(a1,a,b,j) 
#
      ENDPARDO a1, j, b, a 
#
      ENDPROC W1EAFMAB 
#     ---------------- 
#
      PROC W1EAFMBA 
#     ------------- 
#
      PARDO b1, i, a, b 
#
# Compute (b1,b,a,i) block of intermediate 
# ---------------------------------------- 
#
            GET Vbbai(b1,b,a,i) 
            Tqqpp(b1,b,a,i)  = Vbbai(b1,b,a,i)  
#
            DO j 
#
               GET Fme_b(j,b) 
               GET T2old_ab(a,i,b1,j) 
               GET t1b_old(b1,j) 
               GET W2mebj_ba(j,b,a,i) 
#
               T1qqpp(b1,b,a,i) = T2old_ab(a,i,b1,j)*Fme_b(j,b)
               Tqqpp(b1,b,a,i) -= T1qqpp(b1,b,a,i)
#
               T1qqpp(b1,b,a,i) = W2mebj_ba(j,b,a,i)*t1b_old(b1,j) 
               Tqqpp(b1,b,a,i) -= T1qqpp(b1,b,a,i)
#
               DO b2   
#
                  GET T2old_ab(a,i,b2,j) 
                  GET VSbbbj(b,b1,b2,j) 
#
                   T1qqpp(b1,b,a,i) = VSbbbj(b,b1,b2,j)*T2old_ab(a,i,b2,j) 
                  Tqqpp(b1,b,a,i)  += T1qqpp(b1,b,a,i)
#
               ENDDO b2 
#
               DO a1 
#
                  GET T2old_ab(a1,i,b1,j) 
                  GET Vaabj(a1,a,b,j) 
#
                 T1qqpp(b1,b,a,i)  = Vaabj(a1,a,b,j)*T2old_ab(a1,i,b1,j)  
                  Tqqpp(b1,b,a,i) -= T1qqpp(b1,b,a,i)
#
               ENDDO a1 
#
               DO i1 
#
                  GET Tau_ab(a,i1,b1,j) 
                  GET Vpiqj(i,i1,b,j) 
#   
                  T1qqpp(b1,b,a,i) = Tau_ab(a,i1,b1,j)*Vpiqj(i,i1,b,j) 
                  Tqqpp(b1,b,a,i) += T1qqpp(b1,b,a,i)
#
               ENDDO i1 
#
            ENDDO j 
#
            DO i1 
#
               GET t1a_old(a,i1) 
               GET W2mjbe_ab(i1,i,b1,b) 
#
               T1qqpp(b1,b,a,i) = W2mjbe_ab(i1,i,b1,b)*t1a_old(a,i1) 
               Tqqpp(b1,b,a,i) += T1qqpp(b1,b,a,i)
#
               DO a1 
#
                  GET T2old_aa(a1,i1,a,i) 
                  GET Vbbai(b,b1,a1,i1)  
#
                 T1qqpp(b1,b,a,i)  = Vbbai(b,b1,a1,i1)*T2old_aa(a1,i1,a,i)  
                  Tqqpp(b1,b,a,i) += T1qqpp(b1,b,a,i)
#
               ENDDO a1 
#
            ENDDO i1 
#
# Compute contribution to l1b_new 
# ------------------------------- 
#
            DO j
#
               GET L2old_ab(i,a,j,b1)
#
               T1jb(j,b)         = Tqqpp(b1,b,a,i)*L2old_ab(i,a,j,b1)
               PUT l1b_new(j,b) += T1jb(j,b)
#
            ENDDO j
#
#           PUT W1eafm_ba(b1,b,a,i) += Tqqpp(b1,b,a,i) 
#
      ENDPARDO b1, i, a, b 
#
      ENDPROC W1EAFMBA 
#     ---------------- 
#
      PROC W1EAFMBB 
#     ------------- 
#
      PARDO b1, b, b2, j 
#
# Compute (b1,b,b1,j) and (b2,b,b1,j) block of intermediate 
# --------------------------------------------------------- 
#
            GET VSbbbj(b1,b,b2,j) # +  
#
            Tqqqq(b1,b,b2,j)  = VSbbbj(b1,b,b2,j)  
            TSqqqq(b2,b,b1,j) = 0.0  
#
            DO j1 
#
               GET Fme_b(j1,b) 
               GET T2old_bb(b1,j,b2,j1) 
               GET t1b_old(b1,j1) 
               GET W2mebj_bb(j1,b,b2,j) 
#
               T1qqqq(b1,b,b2,j)  = T2old_bb(b1,j,b2,j1)*Fme_b(j1,b)  
               Tqqqq(b1,b,b2,j)  += T1qqqq(b1,b,b2,j) 
#
               T1qqqq(b1,b,b2,j)  = W2mebj_bb(j1,b,b2,j)*t1b_old(b1,j1)  
               T2qqqq(b2,b,b1,j)  = T1qqqq(b1,b,b2,j)  
# 
                Tqqqq(b1,b,b2,j) -= T1qqqq(b1,b,b2,j) 
               TSqqqq(b2,b,b1,j) += T2qqqq(b2,b,b1,j) 
# 
               DO j2 
#
                  GET Tau_bb(b1,j1,b2,j2) 
                  GET VSqjqj(b,j1,j,j2) # +  
#
                  T1qqqq(b1,b,b2,j)  = Tau_bb(b1,j1,b2,j2)*VSqjqj(b,j1,j,j2)  
                  T1qqqq(b1,b,b2,j) *= 0.5  
                  Tqqqq(b1,b,b2,j)  += T1qqqq(b1,b,b2,j) 
#
               ENDDO j2 
#
               DO b3 
#
                  GET T2old_bb(b2,j,b3,j1) 
                  GET VSbbbj(b,b1,b3,j1) # +  
#
                  T1qqqq(b1,b,b2,j)  = VSbbbj(b,b1,b3,j1)*T2old_bb(b2,j,b3,j1)  
                  T2qqqq(b2,b,b1,j)  = T1qqqq(b1,b,b2,j)  
#
                   Tqqqq(b1,b,b2,j) += T1qqqq(b1,b,b2,j) 
                  TSqqqq(b2,b,b1,j) -= T2qqqq(b2,b,b1,j) 
#
               ENDDO b3 
#
            ENDDO j1 
#
            DO i 
            DO a 
#
               GET T2old_ab(a,i,b2,j) 
               GET Vbbai(b,b1,a,i) # +  
#
               T1qqqq(b1,b,b2,j)  = Vbbai(b,b1,a,i)*T2old_ab(a,i,b2,j)  
               T2qqqq(b2,b,b1,j)  = T1qqqq(b1,b,b2,j)  
#
                Tqqqq(b1,b,b2,j) += T1qqqq(b1,b,b2,j) 
               TSqqqq(b2,b,b1,j) -= T2qqqq(b2,b,b1,j) 
#
            ENDDO a 
            ENDDO i 
#
# Compute contribution to l1b_new 
# ------------------------------- 
#
            DO j1 
#
               GET L2old_bb(j1,b1,j,b2)
               GET L2old_bb(j1,b2,j,b1)
#
               T1jb(j1,b)         = L2old_bb(j1,b1,j,b2)*Tqqqq(b1,b,b2,j)
               Tjb(j1,b)          = L2old_bb(j1,b2,j,b1)*TSqqqq(b2,b,b1,j)
               T1jb(j1,b)        += Tjb(j1,b)  
               T1jb(j1,b)        *= 0.5
               PUT l1b_new(j1,b) += T1jb(j1,b)
#
            ENDDO j1 
#
#           PUT W1eafm_bb(b1,b,b2,j) +=  Tqqqq(b1,b,b2,j) 
#           PUT W1eafm_bb(b2,b,b1,j) += TSqqqq(b2,b,b1,j) 
#
      ENDPARDO b1, b, b2, j 
#
      ENDPROC W1EAFMBB 
#     ---------------- 
#
      PROC W1EAFM 
#     -----------  
# 
         CALL W1EAFMAA
         CALL W1EAFMAB
         CALL W1EAFMBB
         CALL W1EAFMBA
#
      ENDPROC W1EAFM 
#     -------------- 
#
      PROC L1ANEW 
#     ----------- 
# 
      PARDO a, i
#
            GET Fme_a(i,a)
            Tia(i,a) = Fme_a(i,a) #0.0
#
            DO a1
#
               GET l1a_old(i,a1)
               GET F1ae_a(a1,a)
#
               T1ia(i,a) = l1a_old(i,a1)*F1ae_a(a1,a)
               Tia(i,a) += T1ia(i,a)
#
               DO a2
#
                  GET Gae_a(a1,a2)
                  GET VSaaai(a2,a1,a,i) # +
#
                  T1ia(i,a) = VSaaai(a2,a1,a,i)*Gae_a(a1,a2)
                  Tia(i,a) -= T1ia(i,a)
#
               ENDDO a2
#
            ENDDO a1
#
            DO i1
#
               GET l1a_old(i1,a)
               GET F1mi_a(i,i1)
#
               T1ia(i,a) = l1a_old(i1,a)*F1mi_a(i,i1)
               Tia(i,a) -= T1ia(i,a)
#
               DO i2
#
                  GET Gmi_a(i2,i1)
                  GET VSpipi(a,i,i1,i2) # -
#
                  T1ia(i,a) = VSpipi(a,i,i1,i2)*Gmi_a(i2,i1)
                  Tia(i,a) -= T1ia(i,a)
#
                  DO a1
#
                     GET L2old_aa(i1,a,i2,a1)
                     GET W1imen_aa(i,i1,a1,i2)
#
                     T1ia(i,a)  = W1imen_aa(i,i1,a1,i2)*L2old_aa(i1,a,i2,a1)
                     T1ia(i,a) *= -0.5
                     Tia(i,a) += T1ia(i,a)
#
                  ENDDO a1
#
               ENDDO i2
#
            ENDDO i1
#
            DO j
#
               DO j1
#
                  GET Gmi_b(j1,j)
                  GET Vpiqj(a,i,j,j1) # +
#
                  T1ia(i,a) = Vpiqj(a,i,j,j1)*Gmi_b(j1,j)
                  Tia(i,a) -= T1ia(i,a)
#
               ENDDO j1
#
               DO i1 
               DO b
#
                  GET L2old_ab(i1,a,j,b)
                  GET W1imen_ab(i,i1,b,j)
#
                  T1ia(i,a)  = W1imen_ab(i,i1,b,j)*L2old_ab(i1,a,j,b)
#                 T1ia(i,a) *= 0.5
                  Tia(i,a) -= T1ia(i,a)
#
               ENDDO b
               ENDDO i1
#
            ENDDO j
#
            DO b
            DO b1
#
               GET Gae_b(b,b1)
               GET Vbbai(b1,b,a,i) # +
#
               T1ia(i,a) = Vbbai(b1,b,a,i)*Gae_b(b,b1)
               Tia(i,a) -= T1ia(i,a)
#
            ENDDO b1
            ENDDO b
#
            PUT l1a_new(i,a) += Tia(i,a)
#
      ENDPARDO a, i
#
      PARDO a, i, a1, i1
#
            GET VSpipi(a,i,a1,i1) # +
            Taiai(a,i,a1,i1)  = VSpipi(a,i,a1,i1)
#
            T2ia(i1,a1) = 0.0
#
            DO a2
#
               GET Gae_a(a2,a1)
               GET t1a_old(a2,i1)
#
               T3ia(i1,a1)  = Gae_a(a2,a1)*t1a_old(a2,i1)
               T2ia(i1,a1) += T3ia(i1,a1)
#
            ENDDO a2
#
            DO i2
#
               GET Gmi_a(i1,i2)
               GET t1a_old(a1,i2)
#
               T3ia(i1,a1)  = Gmi_a(i1,i2)*t1a_old(a1,i2)
               T2ia(i1,a1) -= T3ia(i1,a1)
#
            ENDDO i2
#
            Tia(i,a)          = Taiai(a,i,a1,i1)*T2ia(i1,a1)
            PUT l1a_new(i,a) += Tia(i,a)
#
      ENDPARDO a, i, a1, i1
#
      PARDO a, b, i, j
#
            GET Vpiqj(a,i,b,j) # +
#
            T2jb(j,b) = 0.0
#
            DO b1
#
               GET Gae_b(b1,b)
               GET t1b_old(b1,j)
#
               T3jb(j,b)  = Gae_b(b1,b)*t1b_old(b1,j)
               T2jb(j,b) += T3jb(j,b)
#
            ENDDO b1
#
            DO j1
#
               GET Gmi_b(j,j1)
               GET t1b_old(b,j1)
#
               T3jb(j,b)  = Gmi_b(j,j1)*t1b_old(b,j1)
               T2jb(j,b) -= T3jb(j,b)
#
            ENDDO j1
#
            Tia(i,a)          = Vpiqj(a,i,b,j)*T2jb(j,b)
            PUT l1a_new(i,a) += Tia(i,a)
#
      ENDPARDO a, b, i, j
#
      ENDPROC L1ANEW 
#     -------------- 
#
      PROC L1BNEW 
#     ----------- 
#
      PARDO b, j
# 
            GET Fme_b(j,b)
            Tjb(j,b) = Fme_b(j,b) #0.0
#
            DO j1
#
               GET l1b_old(j1,b)
               GET F1mi_b(j,j1)
#
               T1jb(j,b) = l1b_old(j1,b)*F1mi_b(j,j1)
               Tjb(j,b) -= T1jb(j,b)
#
               DO j2
#
                  GET Gmi_b(j2,j1)
                  GET VSqjqj(b,j,j1,j2) # +
#
                  T1jb(j,b) = VSqjqj(b,j,j1,j2)*Gmi_b(j2,j1)
                  Tjb(j,b) -= T1jb(j,b)
#
                  DO b1
#
                     GET L2old_bb(j1,b,j2,b1)
                     GET W1imen_bb(j,j1,b1,j2)
#
                     T1jb(j,b)  = W1imen_bb(j,j1,b1,j2)*L2old_bb(j1,b,j2,b1)
                     T1jb(j,b) *= -0.5
                     Tjb(j,b) += T1jb(j,b)
#
                  ENDDO b1
#
               ENDDO j2
#
            ENDDO j1
#
            DO b1
#
               GET l1b_old(j,b1)
               GET F1ae_b(b1,b)
#
               T1jb(j,b) = l1b_old(j,b1)*F1ae_b(b1,b)
               Tjb(j,b) += T1jb(j,b)
#
               DO b2
#
                  GET Gae_b(b1,b2)
                  GET VSbbbj(b2,b1,b,j) # +
#
                  T1jb(j,b) = VSbbbj(b2,b1,b,j)*Gae_b(b1,b2)
                  Tjb(j,b) -= T1jb(j,b)
#
               ENDDO b2
#
            ENDDO b1
#
            DO i
#
               DO i1
#
                  GET Gmi_a(i1,i)
                  GET Vpiqj(i,i1,b,j) # +
#
                  T1jb(j,b) = Vpiqj(i,i1,b,j)*Gmi_a(i1,i)
                  Tjb(j,b) -= T1jb(j,b)
#
               ENDDO i1
#
               DO j1
               DO a
#
                  GET L2old_ab(i,a,j1,b)
                  GET W1imen_ba(j,j1,a,i)
#
                  T1jb(j,b)  = W1imen_ba(j,j1,a,i)*L2old_ab(i,a,j1,b)
                  Tjb(j,b) -= T1jb(j,b)
#
               ENDDO a
               ENDDO j1
#
            ENDDO i
#
            DO a
            DO a1
#
               GET Gae_a(a,a1)
               GET Vaabj(a1,a,b,j) # +
#
               T1jb(j,b) = Vaabj(a1,a,b,j)*Gae_a(a,a1)
               Tjb(j,b) -= T1jb(j,b)
#
            ENDDO a1
            ENDDO a
#
            PUT l1b_new(j,b) += Tjb(j,b)
#
      ENDPARDO b, j
#
      PARDO b, b1, j, j1
#
            GET VSqjqj(b,j,b1,j1) # +
            Tbjbj(b,j1,b1,j) = VSqjqj(b,j,b1,j1)
#
            T2jb(j1,b1) = 0.0
#
            DO b2
#
               GET Gae_b(b2,b1)
               GET t1b_old(b2,j1)
#
               T3jb(j1,b1)  = Gae_b(b2,b1)*t1b_old(b2,j1)
               T2jb(j1,b1) += T3jb(j1,b1)
#
            ENDDO b2
#
            DO j2
#
               GET Gmi_b(j1,j2)
               GET t1b_old(b1,j2)
#
               T3jb(j1,b1)  = Gmi_b(j1,j2)*t1b_old(b1,j2)
               T2jb(j1,b1) -= T3jb(j1,b1)
#
            ENDDO j2
#
            Tjb(j,b) = Tbjbj(b,j1,b1,j)*T2jb(j1,b1)
#
            PUT l1b_new(j,b) += Tjb(j,b)
#
      ENDPARDO b, b1, j, j1
#
      PARDO b, a, j, i
#
            GET Vpiqj(a,i,b,j) # +
            T2ia(i,a) = 0.0
#
            DO a1
#
               GET Gae_a(a1,a)
               GET t1a_old(a1,i)
#
               T3ia(i,a)  = Gae_a(a1,a)*t1a_old(a1,i)
               T2ia(i,a) += T3ia(i,a)
#
            ENDDO a1
#
            DO i1
#
               GET Gmi_a(i,i1)
               GET t1a_old(a,i1)
#
               T3ia(i,a)  = Gmi_a(i,i1)*t1a_old(a,i1)
               T2ia(i,a) -= T3ia(i,a)
#
            ENDDO i1
#
            Tjb(j,b) = Vpiqj(a,i,b,j)*T2ia(i,a)
#
            PUT l1b_new(j,b) += Tjb(j,b)
#
      ENDPARDO b, a, j, i
#
      ENDPROC L1BNEW 
#     -------------- 
#
      PROC L2NEWAA 
#     ------------ 
#
      PARDO a, a1, i, i1
#
            GET VSpipi(a,i,a1,i1) # +
            GET l1a_old(i,a)
            GET Fme_a(i1,a1)
#
            Tiaia(i,a,i1,a1)  = VSpipi(a,i,a1,i1)
            T2iaia(i,a1,i1,a) = 0.0
            T3iaia(i1,a,i,a1) = 0.0
            T4iaia(i1,a1,i,a) = 0.0
#
            DO a2
#
               GET Gae_a(a1,a2)
               GET L2old_aa(i,a,i1,a2)
               GET F1ae_a(a2,a1)
               GET l1a_old(i,a2)
               GET VSaaai(a,a2,a1,i1) # +
               GET VSpipi(a,i,a2,i1) # +
#
               T1iaia(i,a,i1,a1)  = L2old_aa(i,a,i1,a2)*F1ae_a(a2,a1)
               Tiaia(i,a,i1,a1)  += T1iaia(i,a,i1,a1)
#
               Taa(a2,a1)         = Gae_a(a1,a2)
               TXiaia(i,a1,i1,a)  = T1iaia(i,a,i1,a1)
               T2iaia(i,a1,i1,a) -= TXiaia(i,a1,i1,a)
#
               T1iaia(i,a,i1,a1)  = VSaaai(a,a2,a1,i1)*l1a_old(i,a2)
               Tiaia(i,a,i1,a1)  += T1iaia(i,a,i1,a1)
#
               TXiaia(i1,a,i,a1)  = T1iaia(i,a,i1,a1)
               T3iaia(i1,a,i,a1) -= TXiaia(i1,a,i,a1)
#
               DO i2
#
                  GET l1a_old(i2,a1)
                  GET t1a_old(a2,i2)

                  T1aa(a2,a1) = t1a_old(a2,i2)*l1a_old(i2,a1)
                  Taa(a2,a1) -= T1aa(a2,a1)
#
               ENDDO i2
#
               T1iaia(i,a,i1,a1)  = VSpipi(a,i,a2,i1)*Taa(a2,a1)
               Tiaia(i,a,i1,a1)  += T1iaia(i,a,i1,a1)
#
               TXiaia(i,a1,i1,a)  = T1iaia(i,a,i1,a1)
               T2iaia(i,a1,i1,a) -= TXiaia(i,a1,i1,a)
#
            ENDDO a2
#
            DO i2
#
               GET Gmi_a(i2,i1)
               GET L2old_aa(i,a,i2,a1)
               GET F1mi_a(i1,i2)
               GET l1a_old(i2,a)
               GET VSpipi(i2,i,a1,i1) # +
               GET VSpipi(a,i,a1,i2) # +
#
               T1iaia(i,a,i1,a1)  = L2old_aa(i,a,i2,a1)*F1mi_a(i1,i2)
               T1iaia(i,a,i1,a1) *= -1.0
#
               Tii(i1,i2)         = Gmi_a(i2,i1)
               Tiaia(i,a,i1,a1)  += T1iaia(i,a,i1,a1)
#
               TXiaia(i1,a,i,a1)  = T1iaia(i,a,i1,a1)
               T3iaia(i1,a,i,a1) -= TXiaia(i1,a,i,a1)
#
               T1iaia(i,a,i1,a1)  = VSpipi(i2,i,a1,i1)*l1a_old(i2,a)
               Tiaia(i,a,i1,a1)  -= T1iaia(i,a,i1,a1)
#
               TXiaia(i,a1,i1,a)  = T1iaia(i,a,i1,a1)
               T2iaia(i,a1,i1,a) += TXiaia(i,a1,i1,a)
#
               DO a2
#
                  GET l1a_old(i1,a2)
                  GET t1a_old(a2,i2)
#
                  T1ii(i1,i2) = l1a_old(i1,a2)*t1a_old(a2,i2)
                  Tii(i1,i2) += T1ii(i1,i2)
#
               ENDDO a2
#
               T1iaia(i,a,i1,a1)  = VSpipi(a,i,a1,i2)*Tii(i1,i2)
               Tiaia(i,a,i1,a1)  -= T1iaia(i,a,i1,a1)
#
               TXiaia(i1,a,i,a1)  = T1iaia(i,a,i1,a1)
               T3iaia(i1,a,i,a1) += TXiaia(i1,a,i,a1)
#
               DO i3
#
                  GET L2old_aa(i2,a,i3,a1)
                  GET W1minj_aa(i,i2,i1,i3)
#
                  T1iaia(i,a,i1,a1)  = W1minj_aa(i,i2,i1,i3)*L2old_aa(i2,a,i3,a1)
                  T1iaia(i,a,i1,a1) *= 0.5
                  Tiaia(i,a,i1,a1)  += T1iaia(i,a,i1,a1)
#
               ENDDO i3
#
            ENDDO i2
#
            T1iaia(i,a,i1,a1)  = l1a_old(i,a)^Fme_a(i1,a1)
            Tiaia(i,a,i1,a1)  += T1iaia(i,a,i1,a1)
#
            TXiaia(i,a1,i1,a)  = T1iaia(i,a,i1,a1)
            T2iaia(i,a1,i1,a) -= TXiaia(i,a1,i1,a)
#
            TXiaia(i1,a,i,a1)  = T1iaia(i,a,i1,a1)
            T3iaia(i1,a,i,a1) -= TXiaia(i1,a,i,a1)
#
            TXiaia(i1,a1,i,a)  = T1iaia(i,a,i1,a1)
            T4iaia(i1,a1,i,a) += TXiaia(i1,a1,i,a)
#
            PUT L2new_aa(i,a,i1,a1) +=  Tiaia(i,a,i1,a1)
            PUT L2new_aa(i,a1,i1,a) += T2iaia(i,a1,i1,a)
            PUT L2new_aa(i1,a,i,a1) += T3iaia(i1,a,i,a1)
            PUT L2new_aa(i1,a1,i,a) += T4iaia(i1,a1,i,a)
#
      ENDPARDO a, a1, i, i1
# 
      ENDPROC L2NEWAA 
#     --------------- 
#
      PROC L2NEWAB 
#     ------------ 
#
      PARDO a, i, b, j 
#
            GET Vpiqj(a,i,b,j)
            GET l1a_old(i,a)
            GET Fme_b(j,b)
            GET l1b_old(j,b)
            GET Fme_a(i,a)
#
            Tiajb(i,a,j,b) = Vpiqj(a,i,b,j)
#
            DO b1
#
               GET Gae_b(b,b1)
               GET L2old_ab(i,a,j,b1)
               GET F1ae_b(b1,b)
               GET l1b_old(j,b1)
               GET Vbbai(b,b1,a,i)
               GET Vpiqj(a,i,b1,j)
#
               Tbb(b1,b)       = Gae_b(b,b1)
               T1iajb(i,a,j,b) = L2old_ab(i,a,j,b1)*F1ae_b(b1,b)
               Tiajb(i,a,j,b) += T1iajb(i,a,j,b)
#
               T1iajb(i,a,j,b) = Vbbai(b,b1,a,i)*l1b_old(j,b1)
               Tiajb(i,a,j,b) += T1iajb(i,a,j,b)
#
               DO j1
#
                  GET l1b_old(j1,b)
                  GET t1b_old(b1,j1)
#
                  T1bb(b1,b) = t1b_old(b1,j1)*l1b_old(j1,b)
                  Tbb(b1,b) -= T1bb(b1,b)
#
               ENDDO j1
#
               T1iajb(i,a,j,b) = Vpiqj(a,i,b1,j)*Tbb(b1,b)
               Tiajb(i,a,j,b) += T1iajb(i,a,j,b)
#
            ENDDO b1
#
            DO a1
#
               GET Gae_a(a,a1)
               GET L2old_ab(i,a1,j,b)
               GET F1ae_a(a1,a)
               GET l1a_old(i,a1)
               GET Vaabj(a,a1,b,j)
               GET Vpiqj(a1,i,b,j)
#
               Taa(a1,a)       = Gae_a(a,a1)
               T1iajb(i,a,j,b) = L2old_ab(i,a1,j,b)*F1ae_a(a1,a)
               Tiajb(i,a,j,b) += T1iajb(i,a,j,b)
#
               T1iajb(i,a,j,b) = Vaabj(a,a1,b,j)*l1a_old(i,a1)
               Tiajb(i,a,j,b) += T1iajb(i,a,j,b)
#
               DO i1
#
                  GET l1a_old(i1,a)
                  GET t1a_old(a1,i1)
#
                  T1aa(a1,a) = t1a_old(a1,i1)*l1a_old(i1,a)
                  Taa(a1,a) -= T1aa(a1,a)
#
               ENDDO i1
#
               T1iajb(i,a,j,b) = Vpiqj(a1,i,b,j)*Taa(a1,a)
               Tiajb(i,a,j,b) += T1iajb(i,a,j,b)
#
            ENDDO a1
#
            DO j1
#
               GET Gmi_b(j1,j)
               GET L2old_ab(i,a,j1,b)
               GET F1mi_b(j,j1)
               GET l1b_old(j1,b)
               GET Vpiqj(a,i,j1,j)
#
               Tjj(j,j1)       = Gmi_b(j1,j)
               T1iajb(i,a,j,b) = L2old_ab(i,a,j1,b)*F1mi_b(j,j1)
               Tiajb(i,a,j,b) -= T1iajb(i,a,j,b)
#
               T1iajb(i,a,j,b) = Vpiqj(a,i,j1,j)*l1b_old(j1,b)
               Tiajb(i,a,j,b) -= T1iajb(i,a,j,b)
#
               DO b1
#
                  GET l1b_old(j,b1)
                  GET t1b_old(b1,j1)
#
                  T1jj(j,j1) = l1b_old(j,b1)*t1b_old(b1,j1)
                  Tjj(j,j1) += T1jj(j,j1)
#
               ENDDO b1
#
               GET Vpiqj(a,i,b,j1)
               T1iajb(i,a,j,b) = Vpiqj(a,i,b,j1)*Tjj(j,j1)
               Tiajb(i,a,j,b) -= T1iajb(i,a,j,b)
#
            ENDDO j1
#
            DO i1
#
               GET Gmi_a(i1,i)
               GET L2old_ab(i1,a,j,b)
               GET F1mi_a(i,i1)
               GET l1a_old(i1,a)
               GET Vpiqj(i1,i,b,j)
               GET Vpiqj(a,i1,b,j)
#
               Tii(i,i1)       = Gmi_a(i1,i)
               T1iajb(i,a,j,b) = L2old_ab(i1,a,j,b)*F1mi_a(i,i1)
               Tiajb(i,a,j,b) -= T1iajb(i,a,j,b)
#
               T1iajb(i,a,j,b) = Vpiqj(i1,i,b,j)*l1a_old(i1,a)
               Tiajb(i,a,j,b) -= T1iajb(i,a,j,b)
#
               DO a1
#
                  GET l1a_old(i,a1)
                  GET t1a_old(a1,i1)
#
                  T1ii(i,i1) = l1a_old(i,a1)*t1a_old(a1,i1)
                  Tii(i,i1) += T1ii(i,i1)
#
               ENDDO a1
#
               T1iajb(i,a,j,b) = Vpiqj(a,i1,b,j)*Tii(i,i1)
               Tiajb(i,a,j,b) -= T1iajb(i,a,j,b)
#
               DO j1
#
                  GET L2old_ab(i1,a,j1,b)
                  GET W1minj_ab(i,i1,j,j1)
#
                  T1iajb(i,a,j,b) = L2old_ab(i1,a,j1,b)* W1minj_ab(i,i1,j,j1)
                  Tiajb(i,a,j,b) += T1iajb(i,a,j,b) # VFL
#
               ENDDO j1
#
            ENDDO i1
#
            T1iajb(i,a,j,b) = l1a_old(i,a)^Fme_b(j,b)
            Tiajb(i,a,j,b) += T1iajb(i,a,j,b)
#
            T1iajb(i,a,j,b) = Fme_a(i,a)^l1b_old(j,b)
            Tiajb(i,a,j,b) += T1iajb(i,a,j,b)
#
            PUT L2new_ab(i,a,j,b) += Tiajb(i,a,j,b)
#
      ENDPARDO a, i, b, j 
#
      ENDPROC L2NEWAB 
#     --------------- 
#
      PROC L2NEWBB 
#     ------------ 
#
      PARDO b1, b, j1, j 
#
            GET VSqjqj(b1,j1,b,j) # + 
            GET l1b_old(j1,b1)
            GET Fme_b(j,b)
#
            Tjbjb(j1,b1,j,b)  = VSqjqj(b1,j1,b,j) 
            T2jbjb(j,b1,j1,b) = 0.0  
            T3jbjb(j1,b,j,b1) = 0.0  
            T4jbjb(j,b,j1,b1) = 0.0  
#
            DO b2
#
               GET Gae_b(b,b2)
               GET L2old_bb(j1,b1,j,b2)
               GET F1ae_b(b2,b)
               GET l1b_old(j1,b2)
               GET VSbbbj(b1,b2,b,j) # +
               GET VSqjqj(b1,j1,b2,j) # +
#
               T1jbjb(j1,b1,j,b) = L2old_bb(j1,b1,j,b2)*F1ae_b(b2,b)
               Tjbjb(j1,b1,j,b) += T1jbjb(j1,b1,j,b)
#
               Tbb(b2,b)          = Gae_b(b,b2)
               TXjbjb(j1,b,j,b1)  = T1jbjb(j1,b1,j,b)
               T3jbjb(j1,b,j,b1) -= TXjbjb(j1,b,j,b1)
#
               T1jbjb(j1,b1,j,b) = VSbbbj(b1,b2,b,j)*l1b_old(j1,b2)
               Tjbjb(j1,b1,j,b) += T1jbjb(j1,b1,j,b)
#
               TXjbjb(j,b1,j1,b)  = T1jbjb(j1,b1,j,b)
               T2jbjb(j,b1,j1,b) -= TXjbjb(j,b1,j1,b)
#
               DO j2
#
                  GET l1b_old(j2,b)
                  GET t1b_old(b2,j2)
#
                  T1bb(b2,b) = t1b_old(b2,j2)*l1b_old(j2,b)
                  Tbb(b2,b) -= T1bb(b2,b)
#
               ENDDO j2
#
               T1jbjb(j1,b1,j,b)  = VSqjqj(b1,j1,b2,j)*Tbb(b2,b)
               Tjbjb(j1,b1,j,b)  += T1jbjb(j1,b1,j,b)
#
               TXjbjb(j1,b,j,b1)  = T1jbjb(j1,b1,j,b)
               T3jbjb(j1,b,j,b1) -= TXjbjb(j1,b,j,b1)
#
            ENDDO b2
#
            DO j2
#
               GET Gmi_b(j2,j)
               GET L2old_bb(j1,b1,j2,b)
               GET F1mi_b(j,j2)
               GET l1b_old(j2,b1)
               GET VSqjqj(j2,j1,b,j) # +
               GET VSqjqj(b1,j1,b,j2) # +
#
               T1jbjb(j1,b1,j,b)  = L2old_bb(j1,b1,j2,b)*F1mi_b(j,j2)
               T1jbjb(j1,b1,j,b) *= -1.0
               Tjbjb(j1,b1,j,b)  += T1jbjb(j1,b1,j,b)
#
               Tjj(j,j2)          = Gmi_b(j2,j)
               TXjbjb(j,b1,j1,b)  = T1jbjb(j1,b1,j,b)
               T2jbjb(j,b1,j1,b) -= TXjbjb(j,b1,j1,b)
#
               T1jbjb(j1,b1,j,b)  = VSqjqj(j2,j1,b,j)*l1b_old(j2,b1)
               Tjbjb(j1,b1,j,b)  -= T1jbjb(j1,b1,j,b)
#
               TXjbjb(j1,b,j,b1)  = T1jbjb(j1,b1,j,b)
               T3jbjb(j1,b,j,b1) += TXjbjb(j1,b,j,b1)
#
               DO b2
#
                  GET l1b_old(j,b2)
                  GET t1b_old(b2,j2)
#
                  T1jj(j,j2) = l1b_old(j,b2)*t1b_old(b2,j2)
                  Tjj(j,j2) += T1jj(j,j2)
#
               ENDDO b2
#
               T1jbjb(j1,b1,j,b)  = VSqjqj(b1,j1,b,j2)*Tjj(j,j2)
               T1jbjb(j1,b1,j,b) *= -1.0
               Tjbjb(j1,b1,j,b)  += T1jbjb(j1,b1,j,b)
#
               TXjbjb(j,b1,j1,b)  = T1jbjb(j1,b1,j,b)
               T2jbjb(j,b1,j1,b) -= TXjbjb(j,b1,j1,b)
#
               DO j3
#
                  GET L2old_bb(j2,b1,j3,b)
                  GET W1minj_bb(j1,j2,j,j3)
#
                  T1jbjb(j1,b1,j,b)  = L2old_bb(j2,b1,j3,b)*W1minj_bb(j1,j2,j,j3)
                  T1jbjb(j1,b1,j,b) *= 0.5
                  Tjbjb(j1,b1,j,b)  += T1jbjb(j1,b1,j,b)
#
               ENDDO j3
#
            ENDDO j2
#
            T1jbjb(j1,b1,j,b)  = l1b_old(j1,b1)^Fme_b(j,b)
            Tjbjb(j1,b1,j,b)  += T1jbjb(j1,b1,j,b)
#
            TXjbjb(j1,b,j,b1)  = T1jbjb(j1,b1,j,b)
            T3jbjb(j1,b,j,b1) -= TXjbjb(j1,b,j,b1)
#
            TXjbjb(j,b1,j1,b)  = T1jbjb(j1,b1,j,b)
            T2jbjb(j,b1,j1,b) -= TXjbjb(j,b1,j1,b)
#
            TXjbjb(j,b,j1,b1)  = T1jbjb(j1,b1,j,b)
            T4jbjb(j,b,j1,b1) += TXjbjb(j,b,j1,b1)
#
            PUT L2NEW_bb(j1,b1,j,b) +=  Tjbjb(j1,b1,j,b)
            PUT L2NEW_bb(j,b1,j1,b) += T2jbjb(j,b1,j1,b)
            PUT L2NEW_bb(j1,b,j,b1) += T3jbjb(j1,b,j,b1)
            PUT L2NEW_bb(j,b,j1,b1) += T4jbjb(j,b,j1,b1)
#
      ENDPARDO b1, b, j1, j 
# 
      ENDPROC L2NEWBB 
#     --------------- 
#
      PROC CLEANLITER
#     ---------------
#
           delete l1a_new
           delete l1b_new
           delete L2new_aa
           delete L2new_bb
           delete L2new_ab
           delete Gae_a
           delete Gae_b
           delete Gmi_a
           delete Gmi_b
#
      ENDPROC CLEANLITER
#     ------------------ 
#
      PROC UPDATEL2
#     -------------
#
      PARDO a, a1, i, i1
#
            GET L2new_aa(i,a,i1,a1)
            L2new_aa(i,a,i1,a1) *= -1.0 
            execute energy_denominator L2new_aa 
            PUT L2old_aa(i,a,i1,a1) = L2new_aa(i,a,i1,a1)  
#
      ENDPARDO a, a1, i, i1
#
      PARDO b, b1, j, j1
#
            GET L2new_bb(j,b,j1,b1)
            L2new_bb(j,b,j1,b1) *= -1.0 
            execute energy_denominator L2new_bb 
            PUT L2old_bb(j,b,j1,b1) = L2new_bb(j,b,j1,b1)  
#
      ENDPARDO b, b1, j, j1
#
      PARDO b, a, j, i
#
            GET L2new_ab(i,a,j,b)
            L2new_ab(i,a,j,b) *= -1.0 
            execute energy_denominator L2new_ab 
            PUT L2old_ab(i,a,j,b) = L2new_ab(i,a,j,b)  
#
      ENDPARDO b, a, j, i
#
      ENDPROC UPDATEL2
#     ----------------
#
      PROC UPDATEL1
#     -------------
#
      PARDO a, i
#
            GET l1a_new(i,a)
            l1a_new(i,a) *= -1.0
            execute energy_denominator l1a_new(i,a)
            PUT l1a_old(i,a) = l1a_new(i,a)
#
      ENDPARDO a, i
#
      PARDO b, j
#
            GET l1b_new(j,b)
            l1b_new(j,b) *= -1.0
            execute energy_denominator l1b_new(j,b)
            PUT l1b_old(j,b) = l1b_new(j,b)
#
      ENDPARDO b, j 
#
      ENDPROC UPDATEL1
#     ----------------
#
#    ------------------------------------------------------------------------
#
     PROC LIGUESS
#
#    ------------------------------------------------------------------------
#
     PARDO a, a1, i, i1
#
           GET T2old_aa(a,i,a1,i1)
           Tiaia(i,a,i1,a1) = T2old_aa(a,i,a1,i1)
           PUT L2old_aa(i,a,i1,a1) = Tiaia(i,a,i1,a1)
#
     ENDPARDO a, a1, i, i1
#
     PARDO b, b1, j, j1
#
           GET T2old_bb(b,j,b1,j1)
           Tjbjb(j,b,j1,b1) = T2old_bb(b,j,b1,j1)
           PUT L2old_bb(j,b,j1,b1) = Tjbjb(j,b,j1,b1)
#
     ENDPARDO b, b1, j, j1
#
     PARDO b, a, j, i
#
           GET T2old_ab(a,i,b,j)
           Tiajb(i,a,j,b) = T2old_ab(a,i,b,j)
           PUT L2old_ab(i,a,j,b) = Tiajb(i,a,j,b)
#
     ENDPARDO b, a, j, i
#
     PARDO a, i
#
           GET t1a_old(a,i)
           tia(i,a) = t1a_old(a,i)
           PUT l1a_old(i,a) = tia(i,a)
#
     ENDPARDO a, i
     PARDO b, j
#
           GET t1b_old(b,j)
           tjb(j,b) = t1b_old(b,j)
           PUT l1b_old(j,b) = tjb(j,b)
#
     ENDPARDO b, j 
#
#    ------------------------------------------------------------------------
#
     ENDPROC LIGUESS
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC LENERGY
#
#    ------------------------------------------------------------------------
#
     esum    = 0.0
     ecorraa = 0.0
     PARDO a, a1, i, i1
#
           GET VSpipi(a,i,a1,i1)
           GET L2new_aa(i,a,i1,a1)
#
           GET l1a_new(i1,a1)
           GET l1a_new(i1,a)
           GET l1a_new(i,a1)
           GET l1a_new(i,a)
#
           tia(i1,a1)         =          l1a_new(i1,a1)
           T2iaia(i,a,i1,a1)  = l1a_new(i,a)^tia(i1,a1)
           tia(i,a1)          =           l1a_new(i,a1)
           T3iaia(i,a,i1,a1)  = l1a_new(i1,a)^tia(i,a1)
           T2iaia(i,a,i1,a1) -= T3iaia(i,a,i1,a1)
           T2iaia(i,a,i1,a1)  = L2new_aa(i,a,i1,a1)
#
           etemp = VSpipi(a,i,a1,i1)*T2iaia(i,a,i1,a1)
           etemp = 0.25*etemp
           esum += etemp
#
     ENDPARDO a, a1, i, i1
#
     execute sip_barrier Vblock
     collective ecorraa += esum
     execute sip_barrier Vblock
     execute print_scalar ecorraa
#
     esum    = 0.0
     ecorrbb = 0.0
     PARDO b, b1, j, j1
#
           GET VSqjqj(b,j,b1,j1)
           GET L2new_bb(j,b,j1,b1)
#
           GET l1b_new(j1,b1)
           GET l1b_new(j1,b)
           GET l1b_new(j,b1)
           GET l1b_new(j,b)
#
           tjb(j1,b1)         =          l1b_new(j1,b1)
           T2jbjb(j,b,j1,b1)  = l1b_new(j,b)^tjb(j1,b1)
           tjb(j,b1)          =           l1b_new(j,b1)
           T3jbjb(j,b,j1,b1)  = l1b_new(j1,b)^tjb(j,b1)
           T2jbjb(j,b,j1,b1) -= T3jbjb(j,b,j1,b1)
           T2jbjb(j,b,j1,b1)  = L2new_bb(j,b,j1,b1)
#
           etemp = VSqjqj(b,j,b1,j1)*T2jbjb(j,b,j1,b1)
           etemp = 0.25*etemp
           esum += etemp
#
     ENDPARDO b, b1, j, j1
#
     execute sip_barrier Vblock
     collective ecorrbb += esum
     execute sip_barrier Vblock
     execute print_scalar ecorrbb
#
     ecorrab = 0.0
     esum    = 0.0
     PARDO a, b, i, j
#
           GET Vpiqj(a,i,b,j)
           GET L2new_ab(i,a,j,b)
           GET l1a_new(i,a)
           GET l1b_new(j,b)
#
           Tiajb(i,a,j,b)  = l1a_new(i,a)^l1b_new(j,b)
           Tiajb(i,a,j,b)  = L2new_ab(i,a,j,b)
#
           etemp = Tiajb(i,a,j,b)*Vpiqj(a,i,b,j)
           esum += etemp
#
     ENDPARDO a, b, i, j
     execute sip_barrier Vblock
     collective ecorrab += esum
     execute sip_barrier Vblock
     execute print_scalar ecorrab
#
     ecorrT  = ecorraa
     ecorrT += ecorrbb
     ecorrT += ecorrab
     execute print_scalar ecorrT 
#
#    ------------------------------------------------------------------------
#
     ENDPROC LENERGY
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC LOLDENERGY
#
#    ------------------------------------------------------------------------
#
     esum    = 0.0
     ecorraa = 0.0
     PARDO a, a1, i, i1
#
           GET VSpipi(a,i,a1,i1)
           GET L2old_aa(i,a,i1,a1)
#
           etemp = VSpipi(a,i,a1,i1)*L2old_aa(i,a,i1,a1)
           etemp = 0.25*etemp
           esum += etemp
#
     ENDPARDO a, a1, i, i1
#
     execute sip_barrier Vblock
     collective ecorraa += esum
     execute sip_barrier Vblock
     execute print_scalar ecorraa
#
     esum    = 0.0
     ecorrbb = 0.0
     PARDO b, b1, j, j1
#
           GET VSqjqj(b,j,b1,j1)
           GET L2old_bb(j,b,j1,b1)
#
           etemp = VSqjqj(b,j,b1,j1)*L2old_bb(j,b,j1,b1)
           etemp = 0.25*etemp
           esum += etemp
#
     ENDPARDO b, b1, j, j1
#
     execute sip_barrier Vblock
     collective ecorrbb += esum
     execute sip_barrier Vblock
     execute print_scalar ecorrbb
#
     ecorrab = 0.0
     esum    = 0.0
     PARDO a, b, i, j
#
           GET Vpiqj(a,i,b,j)
           GET L2old_ab(i,a,j,b)
#
           etemp = L2old_ab(i,a,j,b)*Vpiqj(a,i,b,j)
           esum += etemp
#
     ENDPARDO a, b, i, j
     collective ecorrab += esum
     execute sip_barrier Vblock
     execute print_scalar ecorrab
#
     ecorrT  = ecorraa
     ecorrT += ecorrbb
     ecorrT += ecorrab
     execute print_scalar ecorrT 
#
#    ------------------------------------------------------------------------
#
     ENDPROC LOLDENERGY
#
#    ------------------------------------------------------------------------
#
# In this superprocedure the contributions to the lambda amplitude
# equations from the W^{ef}_{ab} intermediate are computed. The
# contributions are split into two pieces, those using;
# 
# 1. the V^{ab}_{cd} integrals --> PROC LLADDER  
# 2. not using the V^{ab}_{cd} integrals
#    a. L1 contributions       --> PROC L1WABCD 
#    b. L2 contributions       --> PROC L2WABCD 
#
# ------------------------------------------------------------------------------- 
#
      PROC LLADDER 
#     ------------ 
#
# ------------------------------------------------------------------------------- 
#
#     First compute the contributions from the Vabcd integrals  
#     --------------------------------------------------------  
#
#     AA spin combination 
#     ------------------- 
#
      PARDO a, a1, i, i1  
#
            GET t1a_old(a1,i1) 
            T2iaia(i,a,i1,a1) = 0.0 
#
            DO a2 
            DO a3  
#
               GET L2old_aa(i,a2,i1,a3) # +  
               GET VSaaaa(a,a2,a1,a3) 
#
               T1iaia(i,a,i1,a1)        = L2old_aa(i,a2,i1,a3)*VSaaaa(a,a2,a1,a3)  
               T1iaia(i,a,i1,a1)       *= 0.5  
               T2iaia(i,a,i1,a1)       += T1iaia(i,a,i1,a1)  
               PUT L2new_aa(i,a,i1,a1) += T1iaia(i,a,i1,a1) 
#
            ENDDO a3 
            ENDDO a2 
#
            tia(i,a) = T2iaia(i,a,i1,a1)*t1a_old(a1,i1) 
            PUT l1a_new(i,a) += tia(i,a) 
#
      ENDPARDO a, a1, i, i1 
#
#     BB spin combination 
#     ------------------- 
#
      PARDO b, b1, j, j1  
#
            GET t1b_old(b1,j1) 
            T2jbjb(j,b,j1,b1) = 0.0 
#
            DO b2 
            DO b3  
#
               GET L2old_bb(j,b2,j1,b3) # +  
               GET VSbbbb(b,b2,b1,b3) 
#
               T1jbjb(j,b,j1,b1)        = L2old_bb(j,b2,j1,b3)*VSbbbb(b,b2,b1,b3)  
               T1jbjb(j,b,j1,b1)       *= 0.5  
               T2jbjb(j,b,j1,b1)       += T1jbjb(j,b,j1,b1)  
               PUT L2new_bb(j,b,j1,b1) += T1jbjb(j,b,j1,b1) 
#
            ENDDO b3 
            ENDDO b2 
#
            tjb(j,b) = T2jbjb(j,b,j1,b1)*t1b_old(b1,j1) 
            PUT l1b_new(j,b) += tjb(j,b) 
#
      ENDPARDO b, b1, j, j1 
#
#     AB spin combination 
#     ------------------- 
#
      PARDO a, b, i, j  
#
            GET t1b_old(b,j) 
            GET t1a_old(a,i) 
            T2iajb(i,a,j,b) = 0.0 
#
            DO a1 
            DO b1  
#
               GET L2old_ab(i,a1,j,b1) 
               GET Vaabb(a,a1,b,b1) 
#
               T1iajb(i,a,j,b)        = L2old_ab(i,a1,j,b1)*Vaabb(a,a1,b,b1)  
               T2iajb(i,a,j,b)       += T1iajb(i,a,j,b)  
               PUT L2new_ab(i,a,j,b) += T1iajb(i,a,j,b) 
#
            ENDDO b1 
            ENDDO a1 
#
            tia(i,a)          = T2iajb(i,a,j,b)*t1b_old(b,j) 
            tjb(j,b)          = T2iajb(i,a,j,b)*t1a_old(a,i) 
            PUT l1a_new(i,a) += tia(i,a) 
            PUT l1b_new(j,b) += tjb(j,b) 
#
      ENDPARDO a, b, i, j 
#
# ------------------------------------------------------------------------------- 
#
      ENDPROC LLADDER 
#
# ------------------------------------------------------------------------------- 
#
# ------------------------------------------------------------------------------- 
#
      PROC L2WABCDaa  
#
# ------------------------------------------------------------------------------- 
#
#     AA spin combination 
#     ------------------- 
#
      PARDO i, i1, i2, a2 
# 
            Liiia(i,i2,i1,a2) = 0.
#
            DO a1  
#
               GET L2old_aa(i,a1,i1,a2) 
               GET L2old_aa(i,a2,i1,a1) 
               GET t1a_old(a1,i2) 
#
               Tiiia(i,i2,i1,a2)  = L2old_aa(i,a1,i1,a2)*t1a_old(a1,i2) 
               Liiia(i,i2,i1,a2) += Tiiia(i,i2,i1,a2)  
#
               Tiiia(i,i2,i1,a2)  = L2old_aa(i,a2,i1,a1)*t1a_old(a1,i2) 
               Liiia(i,i2,i1,a2) -= Tiiia(i,i2,i1,a2)  
#
            ENDDO a1 
#
            DO a   
            DO a1  
#
               GET VSaaai(a1,a2,a,i2) # + 
#
               Liaia(i,a,i1,a1)         = Liiia(i,i2,i1,a2)*VSaaai(a1,a2,a,i2) 
               Liaia(i,a,i1,a1)        *= -0.5  
               PUT L2new_aa(i,a,i1,a1) += Liaia(i,a,i1,a1)  
#
            ENDDO a1  
            ENDDO a   
# 
      ENDPARDO i, i1, i2, a2 
#
      PARDO i, i1, i2, i3  
#
             Liiii(i,i2,i1,i3) = 0.
#
             DO a   
             DO a1  
#
               GET Tau_aa(a,i2,a1,i3) 
               GET L2old_aa(i,a,i1,a1) 
#
               Tiiii(i,i2,i1,i3)  = L2old_aa(i,a,i1,a1)*Tau_aa(a,i2,a1,i3) 
               Liiii(i,i2,i1,i3) += Tiiii(i,i2,i1,i3) 
#
             ENDDO a1 
             ENDDO a 
#
             DO a 
             DO a1  
#
               GET VSpipi(a,i2,a1,i3) # +  
#
               Tiaia(i,a,i1,a1)         = Liiii(i,i2,i1,i3)*VSpipi(a,i2,a1,i3) 
               Tiaia(i,a,i1,a1)        *= 0.25  
               PUT L2new_aa(i,a,i1,a1) += Tiaia(i,a,i1,a1) 
#
             ENDDO a1 
             ENDDO a 
#
      ENDPARDO i, i1, i2, i3  
# 
# ------------------------------------------------------------------------------- 
#
      ENDPROC L2WABCDaa  
#
# ------------------------------------------------------------------------------- 
#
# ------------------------------------------------------------------------------- 
#
      PROC L2WABCDbb  
#
# ------------------------------------------------------------------------------- 
#
#     BB spin combination 
#     ------------------- 
#
      PARDO j, j1, j2, b2  
# 
            Ljjjb(j,j2,j1,b2) = 0.
#
            DO b1  
#
               GET L2old_bb(j,b1,j1,b2) 
               GET L2old_bb(j,b2,j1,b1) 
               GET t1b_old(b1,j2) 
#
               Tjjjb(j,j2,j1,b2)  = L2old_bb(j,b1,j1,b2)*t1b_old(b1,j2) 
               Ljjjb(j,j2,j1,b2) += Tjjjb(j,j2,j1,b2)  
#
               Tjjjb(j,j2,j1,b2)  = L2old_bb(j,b2,j1,b1)*t1b_old(b1,j2) 
               Ljjjb(j,j2,j1,b2) -= Tjjjb(j,j2,j1,b2)  
#
            ENDDO b1 
#
            DO b  
            DO b1  
#
               GET VSbbbj(b1,b2,b,j2) # + 
#
               Ljbjb(j,b,j1,b1)         = Ljjjb(j,j2,j1,b2)*VSbbbj(b1,b2,b,j2) 
               Ljbjb(j,b,j1,b1)        *= -0.5  
               PUT L2new_bb(j,b,j1,b1) += Ljbjb(j,b,j1,b1)  
#
            ENDDO b1  
            ENDDO b  
# 
      ENDPARDO j, j1, j2, b2  
#
      PARDO j, j1, j2, j3  
#
            Ljjjj(j,j2,j1,j3) = 0.
#
            DO b   
            DO b1  
#
               GET Tau_bb(b,j2,b1,j3) 
               GET L2old_bb(j,b,j1,b1) 
#
               Tjjjj(j,j2,j1,j3)  = L2old_bb(j,b,j1,b1)*Tau_bb(b,j2,b1,j3) 
               Ljjjj(j,j2,j1,j3) += Tjjjj(j,j2,j1,j3) 
#
            ENDDO b1 
            ENDDO b  
#
            DO b   
            DO b1  
#
               GET VSqjqj(b,j2,b1,j3) # +  
#
               Tjbjb(j,b,j1,b1)  = Ljjjj(j,j2,j1,j3)*VSqjqj(b,j2,b1,j3) 
               Tjbjb(j,b,j1,b1) *= 0.25  
               PUT L2new_bb(j,b,j1,b1) += Tjbjb(j,b,j1,b1) 
#
            ENDDO b1 
            ENDDO b  
#
      ENDPARDO j, j1, j2, j3  
# 
# ------------------------------------------------------------------------------- 
#
      ENDPROC L2WABCDbb  
#
# ------------------------------------------------------------------------------- 
#
# ------------------------------------------------------------------------------- 
#
      PROC L2WABCDab  
#
# ------------------------------------------------------------------------------- 
#
#     AB spin combination 
#     ------------------- 
#
      PARDO i, i1, j, b1 
#
            Liijb(i,i1,j,b1) = 0.
#
            DO a   
#
               GET L2old_ab(i,a,j,b1) 
               GET t1a_old(a,i1) 
#
               Tiijb(i,i1,j,b1)  = L2old_ab(i,a,j,b1)*t1a_old(a,i1)
               Liijb(i,i1,j,b1) += Tiijb(i,i1,j,b1) 
#
            ENDDO a   
#
            DO a  
            DO b  
#
               GET Vbbai(b,b1,a,i1)  
#
               Tiajb(i,a,j,b)         = Vbbai(b,b1,a,i1)*Liijb(i,i1,j,b1) 
               Tiajb(i,a,j,b)        *= -1.0   
               PUT L2new_ab(i,a,j,b) += Tiajb(i,a,j,b) 
#
            ENDDO b  
            ENDDO a  
#
      ENDPARDO i, i1, j, b1 
#
      PARDO j, j1, i, a1 
#
            Liajj(i,a1,j,j1) = 0.
#
            DO b  
#
               GET L2old_ab(i,a1,j,b) 
               GET t1b_old(b,j1) 
#
               Tiajj(i,a1,j,j1)  = L2old_ab(i,a1,j,b)*t1b_old(b,j1) 
               Liajj(i,a1,j,j1) += Tiajj(i,a1,j,j1) 
#
            ENDDO b 
# 
            DO a  
            DO b  
#
               GET Vaabj(a,a1,b,j1) 
#
               Tiajb(i,a,j,b)         = Liajj(i,a1,j,j1)*Vaabj(a,a1,b,j1) 
               Tiajb(i,a,j,b)        *= -1.0   
               PUT L2new_ab(i,a,j,b) += Tiajb(i,a,j,b) 
# 
            ENDDO b 
            ENDDO a  
#
      ENDPARDO j, j1, i, a1 
#
      PARDO i, j, i1, j1 
#
            Liijj(i,i1,j,j1) = 0.
#
            DO a  
            DO b  
#
               GET Tau_ab(a,i1,b,j1) 
               GET L2old_ab(i,a,j,b) 
#
               Tiijj(i,i1,j,j1)  = L2old_ab(i,a,j,b)*Tau_ab(a,i1,b,j1) 
               Liijj(i,i1,j,j1) += Tiijj(i,i1,j,j1) 
#
            ENDDO b  
            ENDDO a  
#
            DO a  
            DO b  
#
               GET Vpiqj(a,i1,b,j1) # +  
#
               Tiajb(i,a,j,b)         = Liijj(i,i1,j,j1)*Vpiqj(a,i1,b,j1) 
               PUT L2new_ab(i,a,j,b) += Tiajb(i,a,j,b) 
#
            ENDDO b  
            ENDDO a  
#
      ENDPARDO i, j, i1, j1 
# 
# ------------------------------------------------------------------------------- 
#
      ENDPROC L2WABCDab  
#
# ------------------------------------------------------------------------------- 
#
# ------------------------------------------------------------------------------- 
# 
      PROC L1WABCDa 
#     -------------- 
#
#     First piece 
#     ----------- 
#
      PARDO a1, a2, a3  
#
            allocate Liaaa(*,a1,a3,a2)  
            allocate Laaaa(a3,a2,*,a1) 
#
            DO i 
            DO i1 
#
               GET L2old_aa(i,a1,i1,a2) 
               GET t1a_old(a3,i1) 
#
               Tiaaa(i,a1,a3,a2)  = L2old_aa(i,a1,i1,a2)*t1a_old(a3,i1) 
               Liaaa(i,a1,a3,a2) += Tiaaa(i,a1,a3,a2) 
#
            ENDDO i1 
            ENDDO i 
# 
            DO a 
            DO i 
#
               GET VSaaai(a3,a2,a,i) # +  
               GET VSaaai(a3,a1,a,i) # +  
               GET t1a_old(a1,i) 
               GET t1a_old(a2,i) 
#
               Taaaa(a3,a2,a,a1)  = VSaaai(a3,a2,a,i)*t1a_old(a1,i) 
               Laaaa(a3,a2,a,a1) -= Taaaa(a3,a2,a,a1) 
#
               Taaaa(a3,a2,a,a1)  = VSaaai(a3,a1,a,i)*t1a_old(a2,i) 
               Laaaa(a3,a2,a,a1) += Taaaa(a3,a2,a,a1) 
#
               DO i2 
#
                  GET Tau_aa(a1,i,a2,i2) 
                  GET VSpipi(a,i,a3,i2) # + 
# 
                  Taaaa(a3,a2,a,a1)  = VSpipi(a,i,a3,i2)*Tau_aa(a1,i,a2,i2)  
                  Taaaa(a3,a2,a,a1) *= 0.5  
                  Laaaa(a3,a2,a,a1) += Taaaa(a3,a2,a,a1) 
# 
               ENDDO i2 
#
            ENDDO i 
            ENDDO a 
# 
            DO a 
            DO i 
#
               Tia(i,a)          = Liaaa(i,a1,a3,a2)*Laaaa(a3,a2,a,a1) 
               Tia(i,a)         *= 0.5  
               PUT l1a_new(i,a) += Tia(i,a)  
# 
            ENDDO i 
            ENDDO a 
#
            deallocate Liaaa(*,a1,a3,a2)  
            deallocate Laaaa(a3,a2,*,a1) 
#
      ENDPARDO a1, a2, a3  
# 
#     Second piece 
#     ------------ 
#
      PARDO a1, b1, b  
#
            allocate Liabb(*,a1,b,b1)  
            allocate Lbbaa(b,b1,*,a1) 
#
            DO j 
#
               GET t1b_old(b,j) 
#
               DO i 
#
                  GET L2old_ab(i,a1,j,b1) 
#
                  Tiabb(i,a1,b,b1)  = L2old_ab(i,a1,j,b1)*t1b_old(b,j) 
                  Liabb(i,a1,b,b1) += Tiabb(i,a1,b,b1) 
#
               ENDDO i 
#
            ENDDO j 
# 
            DO a 
#
               DO j 
#
                  GET Vaabj(a,a1,b,j) # - 
                  GET t1b_old(b1,j) 
#
                  Tbbaa(b,b1,a,a1)  = Vaabj(a,a1,b,j)*t1b_old(b1,j) 
                  Lbbaa(b,b1,a,a1) -= Tbbaa(b,b1,a,a1) 
#
               ENDDO j 
#
               DO i 
#
                  GET Vbbai(b,b1,a,i) # +  
                  GET t1a_old(a1,i) 
#
                  Tbbaa(b,b1,a,a1)  = Vbbai(b,b1,a,i)*t1a_old(a1,i) 
                  Lbbaa(b,b1,a,a1) -= Tbbaa(b,b1,a,a1) 
#
                  DO j 
#
                     GET Tau_ab(a1,i,b1,j) 
                     GET Vpiqj(a,i,b,j) # + 
#
                     Tbbaa(b,b1,a,a1)  = Vpiqj(a,i,b,j)*Tau_ab(a1,i,b1,j)  
                     Lbbaa(b,b1,a,a1) += Tbbaa(b,b1,a,a1) 
# 
                  ENDDO j 
# 
               ENDDO i 
#
            ENDDO a 
# 
            DO a 
            DO i 
#
               Tia(i,a)  = Liabb(i,a1,b,b1)*Lbbaa(b,b1,a,a1) 
               PUT l1a_new(i,a) += Tia(i,a)  
# 
            ENDDO i 
            ENDDO a 
#
            deallocate Liabb(*,a1,b,b1)  
            deallocate Lbbaa(b,b1,*,a1) 
#
      ENDPARDO a1, b1, b  
# 
# ------------------------------------------------------------------------------- 
#
      ENDPROC L1WABCDa 
#     -------------- 
#
# ------------------------------------------------------------------------------- 
# 
# ------------------------------------------------------------------------------- 
# 
      PROC L1WABCDb 
#     -------------- 
#
#     First piece 
#     ----------- 
#
      PARDO b1, b2, b3  
#
            allocate Ljbbb(*,b1,b3,b2)  
            allocate Lbbbb(b3,b2,*,b1) 
#
            DO j1 
#
               GET t1b_old(b3,j1) 
#
               DO j 
#
                  GET L2old_bb(j,b1,j1,b2) 
#
                  Tjbbb(j,b1,b3,b2)  = L2old_bb(j,b1,j1,b2)*t1b_old(b3,j1) 
                  Ljbbb(j,b1,b3,b2) += Tjbbb(j,b1,b3,b2) 
#
               ENDDO j 
#
            ENDDO j1 
# 
            DO b 
            DO j1 
#
               GET VSbbbj(b3,b2,b,j1) # +  
               GET VSbbbj(b3,b1,b,j1) # +  
               GET t1b_old(b2,j1) 
               GET t1b_old(b1,j1) 
#
               Tbbbb(b3,b2,b,b1)  = VSbbbj(b3,b2,b,j1)*t1b_old(b1,j1) 
               Lbbbb(b3,b2,b,b1) -= Tbbbb(b3,b2,b,b1) 
#
               Tbbbb(b3,b2,b,b1)  = VSbbbj(b3,b1,b,j1)*t1b_old(b2,j1) 
               Lbbbb(b3,b2,b,b1) += Tbbbb(b3,b2,b,b1) 
#
               DO j2 
#
                  GET Tau_bb(b1,j1,b2,j2) 
                  GET VSqjqj(b,j1,b3,j2) # + 
# 
                  Tbbbb(b3,b2,b,b1)  = VSqjqj(b,j1,b3,j2)*Tau_bb(b1,j1,b2,j2)  
                  Tbbbb(b3,b2,b,b1) *= 0.5  
                  Lbbbb(b3,b2,b,b1) += Tbbbb(b3,b2,b,b1) 
# 
               ENDDO j2 
# 
            ENDDO j1 
            ENDDO b 
# 
            DO b 
            DO j 
#
               Tjb(j,b)          = Ljbbb(j,b1,b3,b2)*Lbbbb(b3,b2,b,b1) 
               Tjb(j,b)         *= 0.5  
               PUT l1b_new(j,b) += Tjb(j,b)  
# 
            ENDDO j 
            ENDDO b 
#
            deallocate Ljbbb(*,b1,b3,b2)  
            deallocate Lbbbb(b3,b2,*,b1) 
#
      ENDPARDO b1, b2, b3  
# 
#     Second piece 
#     ------------ 
#
      PARDO b1, a1, a  
#
            allocate Ljbaa(*,b1,a,a1)  
            allocate Laabb(a,a1,*,b1) 
#
            DO i 
#
               GET t1a_old(a,i) 
#
               DO j 
#
                  GET L2old_ab(i,a1,j,b1) 
#
                  Tjbaa(j,b1,a,a1)  = L2old_ab(i,a1,j,b1)*t1a_old(a,i) 
                  Ljbaa(j,b1,a,a1) += Tjbaa(j,b1,a,a1) 
#
               ENDDO j 
#
            ENDDO i 
# 
            DO b 
#
               DO j 
#
                  GET Vaabj(a,a1,b,j) # +  
                  GET t1b_old(b1,j) 
#
                  Taabb(a,a1,b,b1)  = Vaabj(a,a1,b,j)*t1b_old(b1,j) 
                  Laabb(a,a1,b,b1) -= Taabb(a,a1,b,b1) 
#
               ENDDO j 
#
               DO i 
#
                  GET Vbbai(b,b1,a,i) # - 
                  GET t1a_old(a1,i) 
#
                  Taabb(a,a1,b,b1)  = Vbbai(b,b1,a,i)*t1a_old(a1,i) 
                  Laabb(a,a1,b,b1) -= Taabb(a,a1,b,b1) 
#
                  DO j 
#
                     GET Tau_ab(a1,i,b1,j) 
                     GET Vpiqj(a,i,b,j) # + 
#
                     Taabb(a,a1,b,b1)  = Vpiqj(a,i,b,j)*Tau_ab(a1,i,b1,j)  
                     Laabb(a,a1,b,b1) += Taabb(a,a1,b,b1) 
# 
                  ENDDO j 
#
               ENDDO i 
#
            ENDDO b 
# 
            DO b 
            DO j 
#
               Tjb(j,b)          = Ljbaa(j,b1,a,a1)*Laabb(a,a1,b,b1) 
               PUT l1b_new(j,b) += Tjb(j,b)  
# 
            ENDDO j 
            ENDDO b 
#
            deallocate Ljbaa(*,b1,a,a1)  
            deallocate Laabb(a,a1,*,b1) 
#
      ENDPARDO b1, a1, a  
# 
# ------------------------------------------------------------------------------- 
#
      ENDPROC L1WABCDb 
#     ---------------- 
#
      PROC VABCD
#     ----------
#
           CALL LLADDER
           CALL L2WABCDaa
           CALL L2WABCDbb
           CALL L2WABCDab
#
           CALL L1WABCDa
           CALL L1WABCDb
#
      ENDPROC VABCD
#     -------------
#
# ------------------------------------------------------------------------------- 
# 
      PROC LMAIN 
#     ---------- 
#
# First compute permanent Intermediates 
# ------------------------------------- 
#
      CALL CREAT1INTER  # creates one-particle intermediate arrays 
#
      CREATE TAUP_aa 
      CREATE TAUP_ab 
      CREATE TAUP_bb 
      execute sip_barrier Fme_a 
      CALL TAUP 
      execute sip_barrier Fme_a 
# 
      CALL FME 
      execute sip_barrier Fme_a 
      CALL F1AE 
      CALL F1MI  
#
      execute sip_barrier Fme_a 
      DELETE TAUP_aa 
      DELETE TAUP_ab 
      DELETE TAUP_bb 
#
      CALL CREAT2INTER  # creates two-particle intermediate arrays 
#
      CREATE TAU_aa 
      CREATE TAU_ab 
      CREATE TAU_bb 
      execute sip_barrier Fme_a 
#
      CALL TAU 
      execute sip_barrier Fme_a 
#
      CALL W1MINJ 
      CALL W2MEBJ   
      execute sip_barrier Fme_a 
      CALL W1IMEN 
#
# Done computing permanent Intermediates 
# -------------------------------------- 
#
# Start Iterations 
# ---------------- 
#
      CALL CREATLAMBDAOLD # creates lambda arrays 
      execute sip_barrier 
#
# Create initial guess
# --------------------
#
      CALL LIGUESS
      CALL LOLDENERGY
      eold = ecorrT 
#
      DO kiter 
#
         CALL CREATLAMBDANEW # creates lambda arrays 
         execute sip_barrier 
# 
# Compute temporary intermediates 
# ------------------------------- 
#
         CALL GAE 
         CALL GMI 
         execute sip_barrier 
#
# Compute New L1 and L2 arrays 
# ---------------------------- 
#
         CALL L1ANEW 
         CALL L1BNEW 
         CALL L2NEWAA 
         CALL L2NEWBB 
         CALL L2NEWAB 
         CALL VABCD
         CALL W1EAFM
         CALL W1MEBJ  
         execute sip_barrier Gae_a 
#
# Update arrays 
# ------------- 
#
         CALL UPDATEL1 
         CALL UPDATEL2 
         execute sip_barrier Gae_a 
#
         CALL LOLDENERGY
#
# Clean up temporary arrays 
# ------------------------- 
#
         execute sip_barrier Gae_a 
         CALL CLEANLITER 
         execute sip_barrier Fme_a 
#
#        Check on convergence
#        --------------------
#
         IF ecorrT < eold
            ediff = eold - ecorrT
            IF ediff < ecrit
               exit # kiter
            ENDIF
         ENDIF
#
         IF ecorrT > eold
            ediff = ecorrT - eold
            IF ediff < ecrit
               exit # kiter
            ENDIF
         ENDIF
#
#        Reset eold --> enew
#        -------------------
#
         eold = ecorrT
#
      ENDDO kiter
#
      ENDPROC LMAIN 
#     ------------- 
#
# MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM 
#
# PERFORM INITIALIZATION FOR TESTS  
# --------------------------------  
#
      ecrit = 0.00000001 
      CALL TRAN_UHF_P1 # perform full transformation  
#
      CREATE T2old_aa 
      CREATE T2old_ab 
      CREATE T2old_bb 
#
      CREATE t1a_old 
      CREATE t1b_old 
#
      EXECUTE SIP_BARRIER T2old_aa 
#
# First read in the converged amplitudes
# --------------------------------------
#
      execute sip_barrier
      execute list_to_blocks t1a_old
      execute sip_barrier
      execute list_to_blocks t1b_old
      execute sip_barrier
      execute list_to_blocks T2old_aa
      execute sip_barrier
      execute list_to_blocks T2old_ab
      execute sip_barrier
      execute list_to_blocks T2old_bb
      execute sip_barrier
#
#     COMPUTE LAMBDA AMPLITUDES
#     ------------------------- 
#
      CALL LMAIN 
#
# Write amplitudes to file
# ------------------------
#
      execute sip_barrier
      execute blocks_to_list t1a_old
      execute sip_barrier
      execute blocks_to_list t1b_old
      execute sip_barrier
      execute blocks_to_list T2old_aa
      execute sip_barrier
      execute blocks_to_list T2old_ab
      execute sip_barrier
      execute blocks_to_list T2old_bb
      execute sip_barrier
#
      execute sip_barrier
      execute blocks_to_list l1a_old
      execute sip_barrier
      execute blocks_to_list l1b_old
      execute sip_barrier
      execute blocks_to_list L2old_aa
      execute sip_barrier
      execute blocks_to_list L2old_ab
      execute sip_barrier
      execute blocks_to_list L2old_bb
      execute sip_barrier 
#
                           ENDSIAL LAMBDA_MO    
#
# EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 
#
