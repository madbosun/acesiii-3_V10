
c This program takes command-line arguments and executes subroutines
c accordingly. Essentially, it is a shell environment for processing
c data generated by ACES2.

c#define _DIMARGS 3 /* 3 args required by jarec */
#define _DIMARGS 8 /* max number of JOBARC record tests */
#include "flags.h"

      program main
      implicit none

c INTERNAL VARIABLES
      integer dimargs
      character*80 module
      character*80 args(_DIMARGS)

c COMMON BLOCKS
#include "icore.com"
#include "istart.com"
#include "flags.com"
#include "flags2.com"

c ----------------------------------------------------------------------

      dimargs = _DIMARGS
      call a2proc_init(module,args,dimargs)

      if ((module(1:5).eq.'help ').or.(module(1:3).eq.'-h ')) then
         print '()'
         print *, 'ACESII PROCESSOR LIST OF USEABLE MODULES'
         print *, '----------------------------------------'
         print *, 'mem <amount>'
         print *, 'test <file> [ <file> [ <file> [ ... ]]]'
         print *, 'molden'
c         print *, 'gennbo'
         print *, 'hyperchem'
         print *, 'extrap (energy|gradient)'
         print *, 'statthermo'
         print *, 'parfd (update|updump|dump|load <file>)'
         print *, 'jarec datatype RECNAME dimension'
         print *, 'jareq datatype RECNAME dimension (the quiet version)'
         print *, 'jasum'
         print *, 'xyz'
         print *, 'iosum'
         print *, 'clrdirty'
         print *, 'zerorec RECNAME [ RECNAME [ RECNAME [ ... ]]]'
         print *, 'rmfiles'
         print '()'
         stop
      end if

c ----------------------------------------------------------------------

c These modules require JOBARC, but do not require heap space or lists.

      call aces_init_rte
      call aces_com_parallel_aces
      call aces_ja_init
      call getrec(1,'JOBARC','IFLAGS', 100,iflags)
      call getrec(1,'JOBARC','IFLAGS2',500,iflags2)

      if (module(1:6).eq.'jasum ') then
         call aces_ja_summary
         goto 9999
      end if

      if (module(1:8).eq.'zerorec ') then
         call zerorec(args,dimargs)
         goto 9999
      end if

      if (module(1:9).eq.'clrdirty ') then
         call putrec(0,'JOBARC','DIRTYFLG',1,0)
         print *, '@A2PROC: The dirty flag is clear.'
         goto 9999
      end if

      if (module(1:4).eq.'xyz ') then
         call xyz
         goto 9999
      end if

      if (module(1:4).eq.'mem ') then
         call mem(args,dimargs)
         goto 9999
      end if

c ----------------------------------------------------------------------

c These modules require heap space, but do not require lists.

      icrsiz = iflags(h_IFLAGS_mem)
      icore(1) = 0
      do while ((icore(1).eq.0).and.(icrsiz.gt.1000000))
         call aces_malloc(icrsiz,icore,i0)
         if (icore(1).eq.0) icrsiz = icrsiz - 1000000
      end do
      if (icore(1).eq.0) then
         print *, '@MAIN: unable to allocate at least ',
     &            1000000,' integers of memory'
         call aces_exit(1)
      end if

      if (module(1:5).eq.'test ') then
         call test(args,dimargs)
         goto 9998
      end if

      if (module(1:7).eq.'molden ') then
         call molden_main
         goto 9998
      end if

c This has not been audited.
c      if (module(1:7).eq.'gennbo ') then
c         call gennbo_main
c         goto 9998
c      end if

      if (module(1:10).eq.'hyperchem ') then
         call hyprchm_main
         goto 9998
      end if

      if (module(1:6).eq.'parfd ') then
         call parfd(args,dimargs)
         goto 9998
      end if

      if (module(1:6).eq.'jarec ') then
         call jarec(args,dimargs,.true.)
         goto 9998
      end if

      if (module(1:6).eq.'jareq ') then
         call jarec(args,dimargs,.false.)
         goto 9998
      end if

      if (module(1:7).eq.'extrap ') then
         call extrap_main
         goto 9998
      end if

      if (module(1:11).eq.'statthermo ') then
         call stat_thermo_main
         goto 9998
      endif 
c ----------------------------------------------------------------------

c These modules require lists.

      call aces_io_init(icore,i0,icrsiz,.true.)

      if (module(1:6).eq.'iosum ') then
         call aces_io_summary
         goto 9997
      end if

      if (module(1:8).eq.'rmfiles ') then
         call aces_io_remove(50,'MOINTS')
         call aces_io_remove(51,'GAMLAM')
         call aces_io_remove(52,'MOABCD')
         call aces_io_remove(53,'DERINT')
         call aces_io_remove(54,'DERGAM')
         print *, '@A2PROC: Successfully removed list files.'
         goto 9997
      end if

c ----------------------------------------------------------------------

 9997 continue
      call aces_io_fin
 9998 continue
      call c_free(icore)
 9999 continue
      call aces_ja_fin

      call c_exit(0)
      end

